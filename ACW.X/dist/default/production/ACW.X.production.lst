

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jan 17 13:06:07 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0l,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK0h,global,class=CODE,delta=2
     9                           	psect	strings,global,class=STRING,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssBANK0h,global,bit,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK0h,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0h,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK0l,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0l,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	dabs	1,0x187,0,Clock@time_rx7
   100                           	dabs	1,0x30,1
   101                           	dabs	1,0x187,0,Clock@time_rx7
   102                           	dabs	1,0x30,1
   103                           	dabs	1,0x187,0,_time_rx7
   104                           	dabs	1,0x30,1
   105                           	dabs	1,0x30,1,_time_rx
   106                           	dabs	1,0x7E,2
   107  0000                     
   108                           ; Version 1.45
   109                           ; Generated 16/11/2017 GMT
   110                           ; 
   111                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC16F877A Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0008                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0088                     	;# 
   302  0089                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0094                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442                           
   443                           	psect	idataBANK0l
   444  13CA                     __pidataBANK0l:	
   445                           
   446                           ;initializer for ButtonGrid@F1241
   447  13CA  3472               	retlw	114
   448  13CB  346F               	retlw	111
   449  13CC  3477               	retlw	119
   450  13CD  343A               	retlw	58
   451  13CE  3430               	retlw	48
   452  13CF  3400               	retlw	0
   453                           
   454                           ;initializer for _alertValue
   455  13D0  3401               	retlw	1
   456                           
   457                           ;initializer for _triggerValue
   458  13D1  3414               	retlw	20
   459                           
   460                           	psect	idataBANK1
   461  0C59                     __pidataBANK1:	
   462                           
   463                           ;initializer for zone3OK@F1188
   464  0C59  345A               	retlw	90
   465  0C5A  346F               	retlw	111
   466  0C5B  346E               	retlw	110
   467  0C5C  3465               	retlw	101
   468  0C5D  3420               	retlw	32
   469  0C5E  3433               	retlw	51
   470  0C5F  3420               	retlw	32
   471  0C60  344F               	retlw	79
   472  0C61  344B               	retlw	75
   473  0C62  3400               	retlw	0
   474                           
   475                           ;initializer for zone2OK@F1185
   476  0C63  345A               	retlw	90
   477  0C64  346F               	retlw	111
   478  0C65  346E               	retlw	110
   479  0C66  3465               	retlw	101
   480  0C67  3420               	retlw	32
   481  0C68  3432               	retlw	50
   482  0C69  3420               	retlw	32
   483  0C6A  344F               	retlw	79
   484  0C6B  344B               	retlw	75
   485  0C6C  3400               	retlw	0
   486                           
   487                           ;initializer for zone1OK@F1182
   488  0C6D  345A               	retlw	90
   489  0C6E  346F               	retlw	111
   490  0C6F  346E               	retlw	110
   491  0C70  3465               	retlw	101
   492  0C71  3420               	retlw	32
   493  0C72  3431               	retlw	49
   494  0C73  3420               	retlw	32
   495  0C74  344F               	retlw	79
   496  0C75  344B               	retlw	75
   497  0C76  3400               	retlw	0
   498                           
   499                           ;initializer for zone0OK@F1179
   500  0C77  345A               	retlw	90
   501  0C78  346F               	retlw	111
   502  0C79  346E               	retlw	110
   503  0C7A  3465               	retlw	101
   504  0C7B  3420               	retlw	32
   505  0C7C  3430               	retlw	48
   506  0C7D  3420               	retlw	32
   507  0C7E  344F               	retlw	79
   508  0C7F  344B               	retlw	75
   509  0C80  3400               	retlw	0
   510                           
   511                           ;initializer for modeSelect@F1246
   512  0C81  3453               	retlw	83
   513  0C82  3465               	retlw	101
   514  0C83  346C               	retlw	108
   515  0C84  3465               	retlw	101
   516  0C85  3463               	retlw	99
   517  0C86  3474               	retlw	116
   518  0C87  3420               	retlw	32
   519  0C88  3461               	retlw	97
   520  0C89  3400               	retlw	0
   521                           
   522                           ;initializer for zoneActivate@F1238
   523  0C8A  3441               	retlw	65
   524  0C8B  3463               	retlw	99
   525  0C8C  3474               	retlw	116
   526  0C8D  3469               	retlw	105
   527  0C8E  3476               	retlw	118
   528  0C8F  3461               	retlw	97
   529  0C90  3474               	retlw	116
   530  0C91  3465               	retlw	101
   531  0C92  3400               	retlw	0
   532                           
   533                           ;initializer for alarmOn@F1208
   534  0C93  3441               	retlw	65
   535  0C94  346C               	retlw	108
   536  0C95  3461               	retlw	97
   537  0C96  3472               	retlw	114
   538  0C97  346D               	retlw	109
   539  0C98  3420               	retlw	32
   540  0C99  344F               	retlw	79
   541  0C9A  346E               	retlw	110
   542  0C9B  3400               	retlw	0
   543                           
   544                           ;initializer for currentTemp@F1203
   545  0C9C  345A               	retlw	90
   546  0C9D  346F               	retlw	111
   547  0C9E  346E               	retlw	110
   548  0C9F  3465               	retlw	101
   549  0CA0  3420               	retlw	32
   550  0CA1  3430               	retlw	48
   551  0CA2  3400               	retlw	0
   552                           
   553                           ;initializer for ButtonGrid@F1243
   554  0CA3  3463               	retlw	99
   555  0CA4  346F               	retlw	111
   556  0CA5  346C               	retlw	108
   557  0CA6  343A               	retlw	58
   558  0CA7  3430               	retlw	48
   559  0CA8  3400               	retlw	0
   560                           
   561                           	psect	idataBANK2
   562  0D59                     __pidataBANK2:	
   563                           
   564                           ;initializer for currentTemp@F1205
   565  0D59  3454               	retlw	84
   566  0D5A  3465               	retlw	101
   567  0D5B  346D               	retlw	109
   568  0D5C  3470               	retlw	112
   569  0D5D  3465               	retlw	101
   570  0D5E  3472               	retlw	114
   571  0D5F  3461               	retlw	97
   572  0D60  3474               	retlw	116
   573  0D61  3475               	retlw	117
   574  0D62  3472               	retlw	114
   575  0D63  3465               	retlw	101
   576  0D64  343A               	retlw	58
   577  0D65  3400               	retlw	0
   578                           
   579                           ;initializer for zone3Alert@F1200
   580  0D66  345A               	retlw	90
   581  0D67  346F               	retlw	111
   582  0D68  346E               	retlw	110
   583  0D69  3465               	retlw	101
   584  0D6A  3420               	retlw	32
   585  0D6B  3433               	retlw	51
   586  0D6C  3420               	retlw	32
   587  0D6D  3441               	retlw	65
   588  0D6E  346C               	retlw	108
   589  0D6F  3465               	retlw	101
   590  0D70  3472               	retlw	114
   591  0D71  3474               	retlw	116
   592  0D72  3400               	retlw	0
   593                           
   594                           ;initializer for zone2Alert@F1197
   595  0D73  345A               	retlw	90
   596  0D74  346F               	retlw	111
   597  0D75  346E               	retlw	110
   598  0D76  3465               	retlw	101
   599  0D77  3420               	retlw	32
   600  0D78  3432               	retlw	50
   601  0D79  3420               	retlw	32
   602  0D7A  3441               	retlw	65
   603  0D7B  346C               	retlw	108
   604  0D7C  3465               	retlw	101
   605  0D7D  3472               	retlw	114
   606  0D7E  3474               	retlw	116
   607  0D7F  3400               	retlw	0
   608                           
   609                           ;initializer for zone1Alert@F1194
   610  0D80  345A               	retlw	90
   611  0D81  346F               	retlw	111
   612  0D82  346E               	retlw	110
   613  0D83  3465               	retlw	101
   614  0D84  3420               	retlw	32
   615  0D85  3431               	retlw	49
   616  0D86  3420               	retlw	32
   617  0D87  3441               	retlw	65
   618  0D88  346C               	retlw	108
   619  0D89  3465               	retlw	101
   620  0D8A  3472               	retlw	114
   621  0D8B  3474               	retlw	116
   622  0D8C  3400               	retlw	0
   623                           
   624                           ;initializer for zone0Alert@F1191
   625  0D8D  345A               	retlw	90
   626  0D8E  346F               	retlw	111
   627  0D8F  346E               	retlw	110
   628  0D90  3465               	retlw	101
   629  0D91  3420               	retlw	32
   630  0D92  3430               	retlw	48
   631  0D93  3420               	retlw	32
   632  0D94  3441               	retlw	65
   633  0D95  346C               	retlw	108
   634  0D96  3465               	retlw	101
   635  0D97  3472               	retlw	114
   636  0D98  3474               	retlw	116
   637  0D99  3400               	retlw	0
   638                           
   639                           ;initializer for changeTriggerMessage@F1258
   640  0D9A  3443               	retlw	67
   641  0D9B  3468               	retlw	104
   642  0D9C  3461               	retlw	97
   643  0D9D  346E               	retlw	110
   644  0D9E  3467               	retlw	103
   645  0D9F  3465               	retlw	101
   646  0DA0  3420               	retlw	32
   647  0DA1  3454               	retlw	84
   648  0DA2  3465               	retlw	101
   649  0DA3  346D               	retlw	109
   650  0DA4  3470               	retlw	112
   651  0DA5  3400               	retlw	0
   652                           
   653                           ;initializer for modeSelect@F1248
   654  0DA6  3446               	retlw	70
   655  0DA7  3475               	retlw	117
   656  0DA8  346E               	retlw	110
   657  0DA9  3463               	retlw	99
   658  0DAA  3474               	retlw	116
   659  0DAB  3469               	retlw	105
   660  0DAC  346F               	retlw	111
   661  0DAD  346E               	retlw	110
   662  0DAE  342E               	retlw	46
   663  0DAF  342E               	retlw	46
   664  0DB0  342E               	retlw	46
   665  0DB1  3400               	retlw	0
   666                           
   667                           	psect	idataBANK3
   668  0E0D                     __pidataBANK3:	
   669                           
   670                           ;initializer for zone3Deactivate@F1235
   671  0E0D  345A               	retlw	90
   672  0E0E  346F               	retlw	111
   673  0E0F  346E               	retlw	110
   674  0E10  3465               	retlw	101
   675  0E11  3420               	retlw	32
   676  0E12  3433               	retlw	51
   677  0E13  3420               	retlw	32
   678  0E14  344F               	retlw	79
   679  0E15  3466               	retlw	102
   680  0E16  3466               	retlw	102
   681  0E17  3400               	retlw	0
   682                           
   683                           ;initializer for zone2Deactivate@F1232
   684  0E18  345A               	retlw	90
   685  0E19  346F               	retlw	111
   686  0E1A  346E               	retlw	110
   687  0E1B  3465               	retlw	101
   688  0E1C  3420               	retlw	32
   689  0E1D  3432               	retlw	50
   690  0E1E  3420               	retlw	32
   691  0E1F  344F               	retlw	79
   692  0E20  3466               	retlw	102
   693  0E21  3466               	retlw	102
   694  0E22  3400               	retlw	0
   695                           
   696                           ;initializer for zone1Deactivate@F1229
   697  0E23  345A               	retlw	90
   698  0E24  346F               	retlw	111
   699  0E25  346E               	retlw	110
   700  0E26  3465               	retlw	101
   701  0E27  3420               	retlw	32
   702  0E28  3431               	retlw	49
   703  0E29  3420               	retlw	32
   704  0E2A  344F               	retlw	79
   705  0E2B  3466               	retlw	102
   706  0E2C  3466               	retlw	102
   707  0E2D  3400               	retlw	0
   708                           
   709                           ;initializer for zone0Deactivate@F1226
   710  0E2E  345A               	retlw	90
   711  0E2F  346F               	retlw	111
   712  0E30  346E               	retlw	110
   713  0E31  3465               	retlw	101
   714  0E32  3420               	retlw	32
   715  0E33  3430               	retlw	48
   716  0E34  3420               	retlw	32
   717  0E35  344F               	retlw	79
   718  0E36  3466               	retlw	102
   719  0E37  3466               	retlw	102
   720  0E38  3400               	retlw	0
   721                           
   722                           ;initializer for zone3Activate@F1223
   723  0E39  345A               	retlw	90
   724  0E3A  346F               	retlw	111
   725  0E3B  346E               	retlw	110
   726  0E3C  3465               	retlw	101
   727  0E3D  3420               	retlw	32
   728  0E3E  3433               	retlw	51
   729  0E3F  3420               	retlw	32
   730  0E40  344F               	retlw	79
   731  0E41  346E               	retlw	110
   732  0E42  3400               	retlw	0
   733                           
   734                           ;initializer for zone2Activate@F1220
   735  0E43  345A               	retlw	90
   736  0E44  346F               	retlw	111
   737  0E45  346E               	retlw	110
   738  0E46  3465               	retlw	101
   739  0E47  3420               	retlw	32
   740  0E48  3432               	retlw	50
   741  0E49  3420               	retlw	32
   742  0E4A  344F               	retlw	79
   743  0E4B  346E               	retlw	110
   744  0E4C  3400               	retlw	0
   745                           
   746                           ;initializer for zone1Activate@F1217
   747  0E4D  345A               	retlw	90
   748  0E4E  346F               	retlw	111
   749  0E4F  346E               	retlw	110
   750  0E50  3465               	retlw	101
   751  0E51  3420               	retlw	32
   752  0E52  3431               	retlw	49
   753  0E53  3420               	retlw	32
   754  0E54  344F               	retlw	79
   755  0E55  346E               	retlw	110
   756  0E56  3400               	retlw	0
   757                           
   758                           ;initializer for zone0Activate@F1214
   759  0E57  345A               	retlw	90
   760  0E58  346F               	retlw	111
   761  0E59  346E               	retlw	110
   762  0E5A  3465               	retlw	101
   763  0E5B  3420               	retlw	32
   764  0E5C  3430               	retlw	48
   765  0E5D  3420               	retlw	32
   766  0E5E  344F               	retlw	79
   767  0E5F  346E               	retlw	110
   768  0E60  3400               	retlw	0
   769                           
   770                           ;initializer for alarmOff@F1211
   771  0E61  3441               	retlw	65
   772  0E62  346C               	retlw	108
   773  0E63  3461               	retlw	97
   774  0E64  3472               	retlw	114
   775  0E65  346D               	retlw	109
   776  0E66  3420               	retlw	32
   777  0E67  344F               	retlw	79
   778  0E68  3466               	retlw	102
   779  0E69  3466               	retlw	102
   780  0E6A  3400               	retlw	0
   781                           
   782                           	psect	idataBANK0h
   783  13BC                     __pidataBANK0h:	
   784                           
   785                           ;initializer for checkZoneMessage@F1255
   786  13BC  3443               	retlw	67
   787  13BD  3468               	retlw	104
   788  13BE  3465               	retlw	101
   789  13BF  3463               	retlw	99
   790  13C0  346B               	retlw	107
   791  13C1  3400               	retlw	0
   792                           
   793                           	psect	strings
   794  1000                     __pstrings:	
   795  1000                     stringtab:	
   796  1000                     __stringtab:	
   797  1000                     stringcode:	
   798                           ;	String table - string pointers are 1 byte each
   799                           
   800  1000                     stringdir:	
   801  1000  3010               	movlw	high stringdir
   802  1001  008A               	movwf	10
   803  1002  0804               	movf	4,w
   804  1003  0A84               	incf	4,f
   805  1004  0782               	addwf	2,f
   806  1005                     __stringbase:	
   807  1005  3400               	retlw	0
   808  1006                     __end_of__stringtab:	
   809  1006                     _table:	
   810  1006  3450               	retlw	80
   811  1007  3459               	retlw	89
   812  1008  3423               	retlw	35
   813  1009  3408               	retlw	8
   814  100A  3403               	retlw	3
   815  100B  3406               	retlw	6
   816  100C  3406               	retlw	6
   817  100D  3400               	retlw	0
   818  100E                     __end_of_table:		;_time_rx7
   819  0007                     _PORTC	set	7
   820  0008                     _PORTD	set	8
   821  0005                     _PORTA	set	5
   822  0028                     _RA0	set	40
   823  0035                     _RB5	set	53
   824  0030                     _RB0	set	48
   825  0034                     _RB4	set	52
   826  003F                     _RC7	set	63
   827  003E                     _RC6	set	62
   828  003D                     _RC5	set	61
   829  003B                     _RC3	set	59
   830  003A                     _RC2	set	58
   831  0039                     _RC1	set	57
   832  0038                     _RC0	set	56
   833  003C                     _RC4	set	60
   834  002B                     _RA3	set	43
   835  002A                     _RA2	set	42
   836  0029                     _RA1	set	41
   837  0037                     _RB7	set	55
   838  0087                     _TRISC	set	135
   839  0088                     _TRISD	set	136
   840  0085                     _TRISA	set	133
   841  009F                     _ADCON1	set	159
   842  0086                     _TRISB	set	134
   843  0428                     _TRISA0	set	1064
   844  0434                     _TRISB4	set	1076
   845                           
   846                           ; #config settings
   847  0000                     
   848                           	psect	cinit
   849  07AE                     start_initialization:	
   850  07AE                     __initialization:	
   851                           
   852                           ; Initialize objects allocated to BANK3
   853  07AE  1783               	bsf	3,7	;select IRP bank2
   854  07AF  30EE               	movlw	low (__pdataBANK3+94)
   855  07B0  00FD               	movwf	btemp+-1
   856  07B1  300E               	movlw	high __pidataBANK3
   857  07B2  00FE               	movwf	btemp
   858  07B3  300D               	movlw	low __pidataBANK3
   859  07B4  00FF               	movwf	btemp+1
   860  07B5  3090               	movlw	low __pdataBANK3
   861  07B6  0084               	movwf	4
   862  07B7  160A  118A  2440  120A  118A  	fcall	init_ram0
   863                           
   864                           ; Initialize objects allocated to BANK2
   865  07BC  3069               	movlw	low (__pdataBANK2+89)
   866  07BD  00FD               	movwf	btemp+-1
   867  07BE  300D               	movlw	high __pidataBANK2
   868  07BF  00FE               	movwf	btemp
   869  07C0  3059               	movlw	low __pidataBANK2
   870  07C1  00FF               	movwf	btemp+1
   871  07C2  3010               	movlw	low __pdataBANK2
   872  07C3  0084               	movwf	4
   873  07C4  160A  118A  2440  120A  118A  	fcall	init_ram0
   874                           
   875                           ; Initialize objects allocated to BANK1
   876  07C9  1383               	bcf	3,7	;select IRP bank0
   877  07CA  30F0               	movlw	low (__pdataBANK1+80)
   878  07CB  00FD               	movwf	btemp+-1
   879  07CC  300C               	movlw	high __pidataBANK1
   880  07CD  00FE               	movwf	btemp
   881  07CE  3059               	movlw	low __pidataBANK1
   882  07CF  00FF               	movwf	btemp+1
   883  07D0  30A0               	movlw	low __pdataBANK1
   884  07D1  0084               	movwf	4
   885  07D2  160A  118A  2440  120A  118A  	fcall	init_ram0
   886                           
   887                           ; Initialize objects allocated to BANK0l
   888  07D7  3028               	movlw	low (__pdataBANK0l+8)
   889  07D8  00FD               	movwf	btemp+-1
   890  07D9  3013               	movlw	high __pidataBANK0l
   891  07DA  00FE               	movwf	btemp
   892  07DB  30CA               	movlw	low __pidataBANK0l
   893  07DC  00FF               	movwf	btemp+1
   894  07DD  3020               	movlw	low __pdataBANK0l
   895  07DE  0084               	movwf	4
   896  07DF  160A  118A  2440  120A  118A  	fcall	init_ram0
   897                           
   898                           ; Initialize objects allocated to BANK0h
   899  07E4  306F               	movlw	low (__pdataBANK0h+6)
   900  07E5  00FD               	movwf	btemp+-1
   901  07E6  3013               	movlw	high __pidataBANK0h
   902  07E7  00FE               	movwf	btemp
   903  07E8  30BC               	movlw	low __pidataBANK0h
   904  07E9  00FF               	movwf	btemp+1
   905  07EA  3069               	movlw	low __pdataBANK0h
   906  07EB  0084               	movwf	4
   907  07EC  160A  118A  2440  120A  118A  	fcall	init_ram0
   908                           
   909                           ; Clear objects allocated to BANK0l
   910  07F1  01A8               	clrf	__pbssBANK0l& (0+127)
   911  07F2  01A9               	clrf	(__pbssBANK0l+1)& (0+127)
   912  07F3  01AA               	clrf	(__pbssBANK0l+2)& (0+127)
   913  07F4  01AB               	clrf	(__pbssBANK0l+3)& (0+127)
   914                           
   915                           ; Clear objects allocated to BITBANK0h
   916  07F5  01EF               	clrf	(__pbitbssBANK0h/(0+8))& (0+127)
   917                           
   918                           ; Clear objects allocated to BANK0h
   919  07F6  3031               	movlw	low __pbssBANK0h
   920  07F7  0084               	movwf	4
   921  07F8  3052               	movlw	low (__pbssBANK0h+33)
   922  07F9  160A  118A  23C2   	fcall	clear_ram0
   923  07FC                     end_of_initialization:	
   924                           ;End of C runtime variable initialization code
   925                           
   926  07FC                     __end_of__initialization:	
   927  07FC  0183               	clrf	3
   928  07FD  120A  118A  28C9   	ljmp	_main	;jump to C main() function
   929                           
   930                           	psect	bitbssBANK0h
   931  0378                     __pbitbssBANK0h:	
   932  0378                     readByte@j:	
   933  0378                     	ds	1
   934                           
   935                           	psect	bssBANK0h
   936  0031                     __pbssBANK0h:	
   937  0031                     _table1:	
   938  0031                     	ds	7
   939  0038                     _row:	
   940  0038                     	ds	2
   941  003A                     _col:	
   942  003A                     	ds	2
   943  003C                     _delayValue:	
   944  003C                     	ds	1
   945  003D                     _TriggerTemp:	
   946  003D                     	ds	1
   947  003E                     _delayChange:	
   948  003E                     	ds	1
   949  003F                     _dateChange:	
   950  003F                     	ds	1
   951  0040                     _timeChange:	
   952  0040                     	ds	1
   953  0041                     _tempChange:	
   954  0041                     	ds	1
   955  0042                     _zone3Alerted:	
   956  0042                     	ds	1
   957  0043                     _zone2Alerted:	
   958  0043                     	ds	1
   959  0044                     _zone1Alerted:	
   960  0044                     	ds	1
   961  0045                     _zone0Alerted:	
   962  0045                     	ds	1
   963  0046                     _zone3On:	
   964  0046                     	ds	1
   965  0047                     _zone2On:	
   966  0047                     	ds	1
   967  0048                     _zone1On:	
   968  0048                     	ds	1
   969  0049                     _zone0On:	
   970  0049                     	ds	1
   971  004A                     _zoneCheck:	
   972  004A                     	ds	1
   973  004B                     _zoneActMode:	
   974  004B                     	ds	1
   975  004C                     _alarmOnOrOff:	
   976  004C                     	ds	1
   977  004D                     _decimalNumber:	
   978  004D                     	ds	1
   979  004E                     _tempValue:	
   980  004E                     	ds	1
   981  004F                     _tempHigh:	
   982  004F                     	ds	1
   983  0050                     _tempLow:	
   984  0050                     	ds	1
   985  0051                     _value:	
   986  0051                     	ds	1
   987                           
   988                           	psect	dataBANK0h
   989  0069                     __pdataBANK0h:	
   990  0069                     checkZoneMessage@F1255:	
   991  0069                     	ds	6
   992                           
   993                           	psect	bssBANK0l
   994  0028                     __pbssBANK0l:	
   995  0028                     _durationValue:	
   996  0028                     	ds	1
   997  0029                     _alertChange:	
   998  0029                     	ds	1
   999  002A                     _durationChange:	
  1000  002A                     	ds	1
  1001  002B                     _triggerDelayTime:	
  1002  002B                     	ds	1
  1003                           
  1004                           	psect	dataBANK0l
  1005  0020                     __pdataBANK0l:	
  1006  0020                     ButtonGrid@F1241:	
  1007  0020                     	ds	6
  1008  0026                     _alertValue:	
  1009  0026                     	ds	1
  1010  0027                     _triggerValue:	
  1011  0027                     	ds	1
  1012                           
  1013                           	psect	dataBANK1
  1014  00A0                     __pdataBANK1:	
  1015  00A0                     zone3OK@F1188:	
  1016  00A0                     	ds	10
  1017  00AA                     zone2OK@F1185:	
  1018  00AA                     	ds	10
  1019  00B4                     zone1OK@F1182:	
  1020  00B4                     	ds	10
  1021  00BE                     zone0OK@F1179:	
  1022  00BE                     	ds	10
  1023  00C8                     modeSelect@F1246:	
  1024  00C8                     	ds	9
  1025  00D1                     zoneActivate@F1238:	
  1026  00D1                     	ds	9
  1027  00DA                     alarmOn@F1208:	
  1028  00DA                     	ds	9
  1029  00E3                     currentTemp@F1203:	
  1030  00E3                     	ds	7
  1031  00EA                     ButtonGrid@F1243:	
  1032  00EA                     	ds	6
  1033                           
  1034                           	psect	dataBANK3
  1035  0190                     __pdataBANK3:	
  1036  0190                     zone3Deactivate@F1235:	
  1037  0190                     	ds	11
  1038  019B                     zone2Deactivate@F1232:	
  1039  019B                     	ds	11
  1040  01A6                     zone1Deactivate@F1229:	
  1041  01A6                     	ds	11
  1042  01B1                     zone0Deactivate@F1226:	
  1043  01B1                     	ds	11
  1044  01BC                     zone3Activate@F1223:	
  1045  01BC                     	ds	10
  1046  01C6                     zone2Activate@F1220:	
  1047  01C6                     	ds	10
  1048  01D0                     zone1Activate@F1217:	
  1049  01D0                     	ds	10
  1050  01DA                     zone0Activate@F1214:	
  1051  01DA                     	ds	10
  1052  01E4                     alarmOff@F1211:	
  1053  01E4                     	ds	10
  1054                           
  1055                           	psect	dataBANK2
  1056  0110                     __pdataBANK2:	
  1057  0110                     currentTemp@F1205:	
  1058  0110                     	ds	13
  1059  011D                     zone3Alert@F1200:	
  1060  011D                     	ds	13
  1061  012A                     zone2Alert@F1197:	
  1062  012A                     	ds	13
  1063  0137                     zone1Alert@F1194:	
  1064  0137                     	ds	13
  1065  0144                     zone0Alert@F1191:	
  1066  0144                     	ds	13
  1067  0151                     changeTriggerMessage@F1258:	
  1068  0151                     	ds	12
  1069  015D                     modeSelect@F1248:	
  1070  015D                     	ds	12
  1071                           
  1072                           	psect	inittext
  1073  143C                     init_fetch0:	
  1074                           ;	Called with low address in FSR and high address in W
  1075                           
  1076  143C  087E               	movf	126,w
  1077  143D  008A               	movwf	10
  1078  143E  087F               	movf	127,w
  1079  143F  0082               	movwf	2
  1080  1440                     init_ram0:	
  1081                           ;Called with:
  1082                           ;	high address of idata address in btemp 
  1083                           ;	low address of idata address in btemp+1 
  1084                           ;	low address of data in FSR
  1085                           ;	high address + 1 of data in btemp-1
  1086                           
  1087  1440  243C  160A  118A   	fcall	init_fetch0
  1088  1443  0080               	movwf	0
  1089  1444  0A84               	incf	4,f
  1090  1445  0804               	movf	4,w
  1091  1446  067D               	xorwf	125,w
  1092  1447  1903               	btfsc	3,2
  1093  1448  3400               	retlw	0
  1094  1449  0AFF               	incf	127,f
  1095  144A  1903               	btfsc	3,2
  1096  144B  0AFE               	incf	126,f
  1097  144C  2C40               	goto	init_ram0
  1098                           
  1099                           	psect	clrtext
  1100  13C2                     clear_ram0:	
  1101                           ;	Called with FSR containing the base address, and
  1102                           ;	W with the last address+1
  1103                           
  1104  13C2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1105  13C3                     clrloop0:	
  1106  13C3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1107  13C4  0A84               	incf	4,f	;increment pointer
  1108  13C5  0604               	xorwf	4,w	;XOR with final address
  1109  13C6  1903               	btfsc	3,2	;have we reached the end yet?
  1110  13C7  3400               	retlw	0	;all done for this memory range, return
  1111  13C8  0604               	xorwf	4,w	;XOR again to restore value
  1112  13C9  2BC3               	goto	clrloop0	;do the next byte
  1113                           
  1114                           	psect	cstackCOMMON
  1115  0070                     __pcstackCOMMON:	
  1116  0070                     ?_clearDisplay:	
  1117  0070                     ?_resetCursor:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0070                     ?_writeMessage:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ?_LCDdelay3:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ??_LCDdelay3:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ?_writeMessageline1:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ?_writeMessageline2:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ?_LCDsetup:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_checkButtons:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ??_checkButtons:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_LCDdelay2:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ??_LCDdelay2:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_getTemperature:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_clockInit:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_Cinit:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_setTime:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_getTime:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_display:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_displayDate:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_writeChar:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_delay:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ??_delay:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_displayOn:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_turnon2linemode:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_writeCmd:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_delaySeconds:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_zone0OK:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_zone1OK:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_zone2OK:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_zone3OK:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_zone0Alert:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_zone1Alert:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_zone2Alert:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_zone3Alert:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_alarmOn:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_alarmOff:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_zone0Activate:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_zone1Activate:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_zone2Activate:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_zone3Activate:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ?_zone0Deactivate:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_zone1Deactivate:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ?_zone2Deactivate:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_zone3Deactivate:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_zoneActivate:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_modeSelect:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_alarmOnOff:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_showTemp:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_showTime:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_showDate:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_checkZoneMessage:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_changeTriggerMessage:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_checkZones:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_checkZones2:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_activateZonesMode:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_activateZones:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_deactivateZones:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_changeTempMode:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_changeTemp:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_changeTimeMode:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ??_changeTimeMode:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_changeTime:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_changeDateMode:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ??_changeDateMode:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_changeDate:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_changeDelayMode:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ??_changeDelayMode:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_changeDelay:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_Return:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_buzzer2:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ?_init:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ??_init:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ?_main:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_LCDdelay:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ??_LCDdelay:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_buttonsetup:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ??_buttonsetup:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_buttondelay:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ??_buttondelay:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_writeTime:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ??_writeTime:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_readTime:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ??_readTime:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_tempDelay:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_reset:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     ?_writeByte:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0070                     ?_readByte:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?___awdiv:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ?___awmod:	
  1379                           ; 2 bytes @ 0x0
  1380                           
  1381  0070                     checkButtons@rval:	
  1382                           ; 2 bytes @ 0x0
  1383                           
  1384  0070                     tempDelay@y:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     delaySeconds@d:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     LCDdelay@i:	
  1391                           ; 2 bytes @ 0x0
  1392                           
  1393  0070                     LCDdelay2@i:	
  1394                           ; 2 bytes @ 0x0
  1395                           
  1396  0070                     LCDdelay3@i:	
  1397                           ; 2 bytes @ 0x0
  1398                           
  1399  0070                     buttondelay@i:	
  1400                           ; 2 bytes @ 0x0
  1401                           
  1402  0070                     delay@i:	
  1403                           ; 2 bytes @ 0x0
  1404                           
  1405  0070                     ___awdiv@divisor:	
  1406                           ; 2 bytes @ 0x0
  1407                           
  1408  0070                     ___awmod@divisor:	
  1409                           ; 2 bytes @ 0x0
  1410                           
  1411                           
  1412                           ; 2 bytes @ 0x0
  1413  0070                     	ds	1
  1414  0071                     ??_tempDelay:	
  1415                           
  1416                           ; 1 bytes @ 0x1
  1417  0071                     	ds	1
  1418  0072                     ??_writeChar:	
  1419  0072                     ??_writeCmd:	
  1420                           ; 1 bytes @ 0x2
  1421                           
  1422  0072                     ??_delaySeconds:	
  1423                           ; 1 bytes @ 0x2
  1424                           
  1425  0072                     ??_buzzer2:	
  1426                           ; 1 bytes @ 0x2
  1427                           
  1428  0072                     writeChar@var:	
  1429                           ; 1 bytes @ 0x2
  1430                           
  1431  0072                     writeCmd@cmd:	
  1432                           ; 1 bytes @ 0x2
  1433                           
  1434  0072                     tempDelay@x:	
  1435                           ; 1 bytes @ 0x2
  1436                           
  1437  0072                     writeTime@i:	
  1438                           ; 1 bytes @ 0x2
  1439                           
  1440  0072                     readTime@j:	
  1441                           ; 2 bytes @ 0x2
  1442                           
  1443  0072                     ___awdiv@dividend:	
  1444                           ; 2 bytes @ 0x2
  1445                           
  1446  0072                     ___awmod@dividend:	
  1447                           ; 2 bytes @ 0x2
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x2
  1451  0072                     	ds	1
  1452  0073                     ??_clearDisplay:	
  1453  0073                     ??_resetCursor:	
  1454                           ; 1 bytes @ 0x3
  1455                           
  1456  0073                     ??_writeMessage:	
  1457                           ; 1 bytes @ 0x3
  1458                           
  1459  0073                     ??_LCDsetup:	
  1460                           ; 1 bytes @ 0x3
  1461                           
  1462  0073                     ??_Cinit:	
  1463                           ; 1 bytes @ 0x3
  1464                           
  1465  0073                     ??_displayOn:	
  1466                           ; 1 bytes @ 0x3
  1467                           
  1468  0073                     ??_turnon2linemode:	
  1469                           ; 1 bytes @ 0x3
  1470                           
  1471  0073                     ??_Return:	
  1472                           ; 1 bytes @ 0x3
  1473                           
  1474  0073                     tempDelay@z:	
  1475                           ; 1 bytes @ 0x3
  1476                           
  1477  0073                     delaySeconds@i:	
  1478                           ; 1 bytes @ 0x3
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x3
  1482  0073                     	ds	1
  1483  0074                     ??_reset:	
  1484  0074                     ??_writeByte:	
  1485                           ; 1 bytes @ 0x4
  1486                           
  1487  0074                     ??_readByte:	
  1488                           ; 1 bytes @ 0x4
  1489                           
  1490  0074                     ??___awdiv:	
  1491                           ; 1 bytes @ 0x4
  1492                           
  1493  0074                     ??___awmod:	
  1494                           ; 1 bytes @ 0x4
  1495                           
  1496  0074                     writeTime@timeClock:	
  1497                           ; 1 bytes @ 0x4
  1498                           
  1499  0074                     writeMessage@i:	
  1500                           ; 1 bytes @ 0x4
  1501                           
  1502                           
  1503                           ; 2 bytes @ 0x4
  1504  0074                     	ds	1
  1505  0075                     ??_clockInit:	
  1506  0075                     ??_setTime:	
  1507                           ; 1 bytes @ 0x5
  1508                           
  1509  0075                     ??_getTime:	
  1510                           ; 1 bytes @ 0x5
  1511                           
  1512  0075                     reset@presance:	
  1513                           ; 1 bytes @ 0x5
  1514                           
  1515  0075                     readByte@value:	
  1516                           ; 1 bytes @ 0x5
  1517                           
  1518  0075                     ___awdiv@counter:	
  1519                           ; 1 bytes @ 0x5
  1520                           
  1521  0075                     ___awmod@counter:	
  1522                           ; 1 bytes @ 0x5
  1523                           
  1524  0075                     delaySeconds@j:	
  1525                           ; 1 bytes @ 0x5
  1526                           
  1527  0075                     setTime@i:	
  1528                           ; 2 bytes @ 0x5
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x5
  1532  0075                     	ds	1
  1533  0076                     writeMessage@message:	
  1534  0076                     writeByte@temp:	
  1535                           ; 1 bytes @ 0x6
  1536                           
  1537  0076                     readByte@i:	
  1538                           ; 1 bytes @ 0x6
  1539                           
  1540  0076                     ___awdiv@sign:	
  1541                           ; 1 bytes @ 0x6
  1542                           
  1543  0076                     ___awmod@sign:	
  1544                           ; 1 bytes @ 0x6
  1545                           
  1546  0076                     getTime@i:	
  1547                           ; 1 bytes @ 0x6
  1548                           
  1549                           
  1550                           ; 2 bytes @ 0x6
  1551  0076                     	ds	1
  1552  0077                     ??_writeMessageline1:	
  1553  0077                     ??_writeMessageline2:	
  1554                           ; 1 bytes @ 0x7
  1555                           
  1556  0077                     ??_zone0OK:	
  1557                           ; 1 bytes @ 0x7
  1558                           
  1559  0077                     ??_zone1OK:	
  1560                           ; 1 bytes @ 0x7
  1561                           
  1562  0077                     ??_zone2OK:	
  1563                           ; 1 bytes @ 0x7
  1564                           
  1565  0077                     ??_zone3OK:	
  1566                           ; 1 bytes @ 0x7
  1567                           
  1568  0077                     ??_zone0Alert:	
  1569                           ; 1 bytes @ 0x7
  1570                           
  1571  0077                     ??_zone1Alert:	
  1572                           ; 1 bytes @ 0x7
  1573                           
  1574  0077                     ??_zone2Alert:	
  1575                           ; 1 bytes @ 0x7
  1576                           
  1577  0077                     ??_zone3Alert:	
  1578                           ; 1 bytes @ 0x7
  1579                           
  1580  0077                     ??_alarmOn:	
  1581                           ; 1 bytes @ 0x7
  1582                           
  1583  0077                     ??_alarmOff:	
  1584                           ; 1 bytes @ 0x7
  1585                           
  1586  0077                     ??_zone0Activate:	
  1587                           ; 1 bytes @ 0x7
  1588                           
  1589  0077                     ??_zone1Activate:	
  1590                           ; 1 bytes @ 0x7
  1591                           
  1592  0077                     ??_zone2Activate:	
  1593                           ; 1 bytes @ 0x7
  1594                           
  1595  0077                     ??_zone3Activate:	
  1596                           ; 1 bytes @ 0x7
  1597                           
  1598  0077                     ??_zone0Deactivate:	
  1599                           ; 1 bytes @ 0x7
  1600                           
  1601  0077                     ??_zone1Deactivate:	
  1602                           ; 1 bytes @ 0x7
  1603                           
  1604  0077                     ??_zone2Deactivate:	
  1605                           ; 1 bytes @ 0x7
  1606                           
  1607  0077                     ??_zone3Deactivate:	
  1608                           ; 1 bytes @ 0x7
  1609                           
  1610  0077                     ??_zoneActivate:	
  1611                           ; 1 bytes @ 0x7
  1612                           
  1613  0077                     writeMessageline1@message:	
  1614                           ; 1 bytes @ 0x7
  1615                           
  1616  0077                     writeMessageline2@message:	
  1617                           ; 1 bytes @ 0x7
  1618                           
  1619  0077                     writeByte@value:	
  1620                           ; 1 bytes @ 0x7
  1621                           
  1622  0077                     ___awdiv@quotient:	
  1623                           ; 1 bytes @ 0x7
  1624                           
  1625                           
  1626                           ; 2 bytes @ 0x7
  1627  0077                     	ds	1
  1628  0078                     ??_modeSelect:	
  1629  0078                     ??_checkZoneMessage:	
  1630                           ; 1 bytes @ 0x8
  1631                           
  1632  0078                     ??_changeTriggerMessage:	
  1633                           ; 1 bytes @ 0x8
  1634                           
  1635  0078                     writeByte@i:	
  1636                           ; 1 bytes @ 0x8
  1637                           
  1638  0078                     checkZoneMessage@messagerow:	
  1639                           ; 1 bytes @ 0x8
  1640                           
  1641                           
  1642                           ; 6 bytes @ 0x8
  1643  0078                     	ds	1
  1644  0079                     ??_getTemperature:	
  1645  0079                     ??_display:	
  1646                           ; 1 bytes @ 0x9
  1647                           
  1648  0079                     ??_displayDate:	
  1649                           ; 1 bytes @ 0x9
  1650                           
  1651  0079                     ??_changeTemp:	
  1652                           ; 1 bytes @ 0x9
  1653                           
  1654  0079                     ??_changeTime:	
  1655                           ; 1 bytes @ 0x9
  1656                           
  1657  0079                     ??_changeDate:	
  1658                           ; 1 bytes @ 0x9
  1659                           
  1660  0079                     ??_changeDelay:	
  1661                           ; 1 bytes @ 0x9
  1662                           
  1663                           
  1664                           ; 1 bytes @ 0x9
  1665  0079                     	ds	2
  1666  007B                     ??_checkZones2:	
  1667  007B                     ??_activateZonesMode:	
  1668                           ; 1 bytes @ 0xB
  1669                           
  1670  007B                     ??_activateZones:	
  1671                           ; 1 bytes @ 0xB
  1672                           
  1673  007B                     ??_deactivateZones:	
  1674                           ; 1 bytes @ 0xB
  1675                           
  1676                           
  1677                           ; 1 bytes @ 0xB
  1678  007B                     	ds	1
  1679  007C                     ??_alarmOnOff:	
  1680  007C                     ??_showTemp:	
  1681                           ; 1 bytes @ 0xC
  1682                           
  1683  007C                     ??_showTime:	
  1684                           ; 1 bytes @ 0xC
  1685                           
  1686  007C                     ??_showDate:	
  1687                           ; 1 bytes @ 0xC
  1688                           
  1689  007C                     ??_changeTempMode:	
  1690                           ; 1 bytes @ 0xC
  1691                           
  1692  007C                     changeTemp@tens:	
  1693                           ; 1 bytes @ 0xC
  1694                           
  1695  007C                     changeDelay@tens:	
  1696                           ; 1 bytes @ 0xC
  1697                           
  1698                           
  1699                           ; 1 bytes @ 0xC
  1700  007C                     	ds	1
  1701  007D                     changeTemp@units:	
  1702  007D                     changeDelay@units:	
  1703                           ; 1 bytes @ 0xD
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0xD
  1707  007D                     	ds	1
  1708  007E                     ??_checkZones:	
  1709                           
  1710                           	psect	cstackBANK0h
  1711  0052                     __pcstackBANK0h:	
  1712                           ; 1 bytes @ 0xE
  1713                           
  1714  0052                     changeTime@sectens:	
  1715  0052                     changeDate@daytens:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0052                     display@tens:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0052                     displayDate@tens:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0052                     getTemperature@decimal:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0052                     alarmOn@message:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0052                     zoneActivate@message:	
  1731                           ; 9 bytes @ 0x0
  1732                           
  1733  0052                     zone0OK@message:	
  1734                           ; 9 bytes @ 0x0
  1735                           
  1736  0052                     zone1OK@message:	
  1737                           ; 10 bytes @ 0x0
  1738                           
  1739  0052                     zone2OK@message:	
  1740                           ; 10 bytes @ 0x0
  1741                           
  1742  0052                     zone3OK@message:	
  1743                           ; 10 bytes @ 0x0
  1744                           
  1745  0052                     alarmOff@message:	
  1746                           ; 10 bytes @ 0x0
  1747                           
  1748  0052                     zone0Activate@message:	
  1749                           ; 10 bytes @ 0x0
  1750                           
  1751  0052                     zone1Activate@message:	
  1752                           ; 10 bytes @ 0x0
  1753                           
  1754  0052                     zone2Activate@message:	
  1755                           ; 10 bytes @ 0x0
  1756                           
  1757  0052                     zone3Activate@message:	
  1758                           ; 10 bytes @ 0x0
  1759                           
  1760  0052                     zone0Deactivate@message:	
  1761                           ; 10 bytes @ 0x0
  1762                           
  1763  0052                     zone1Deactivate@message:	
  1764                           ; 11 bytes @ 0x0
  1765                           
  1766  0052                     zone2Deactivate@message:	
  1767                           ; 11 bytes @ 0x0
  1768                           
  1769  0052                     zone3Deactivate@message:	
  1770                           ; 11 bytes @ 0x0
  1771                           
  1772  0052                     modeSelect@messagecol:	
  1773                           ; 11 bytes @ 0x0
  1774                           
  1775  0052                     changeTriggerMessage@messagerow:	
  1776                           ; 12 bytes @ 0x0
  1777                           
  1778  0052                     zone0Alert@message:	
  1779                           ; 12 bytes @ 0x0
  1780                           
  1781  0052                     zone1Alert@message:	
  1782                           ; 13 bytes @ 0x0
  1783                           
  1784  0052                     zone2Alert@message:	
  1785                           ; 13 bytes @ 0x0
  1786                           
  1787  0052                     zone3Alert@message:	
  1788                           ; 13 bytes @ 0x0
  1789                           
  1790                           
  1791                           ; 13 bytes @ 0x0
  1792  0052                     	ds	1
  1793  0053                     changeTime@secunits:	
  1794  0053                     changeDate@dayunits:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797  0053                     display@units:	
  1798                           ; 1 bytes @ 0x1
  1799                           
  1800  0053                     displayDate@units:	
  1801                           ; 1 bytes @ 0x1
  1802                           
  1803  0053                     getTemperature@tens:	
  1804                           ; 1 bytes @ 0x1
  1805                           
  1806                           
  1807                           ; 1 bytes @ 0x1
  1808  0053                     	ds	1
  1809  0054                     changeTime@mintens:	
  1810  0054                     changeDate@montens:	
  1811                           ; 1 bytes @ 0x2
  1812                           
  1813  0054                     display@minutesTens:	
  1814                           ; 1 bytes @ 0x2
  1815                           
  1816  0054                     displayDate@minutesTens:	
  1817                           ; 1 bytes @ 0x2
  1818                           
  1819  0054                     getTemperature@units:	
  1820                           ; 1 bytes @ 0x2
  1821                           
  1822                           
  1823                           ; 1 bytes @ 0x2
  1824  0054                     	ds	1
  1825  0055                     changeTime@minunits:	
  1826  0055                     changeDate@monunits:	
  1827                           ; 1 bytes @ 0x3
  1828                           
  1829  0055                     display@minutesUnits:	
  1830                           ; 1 bytes @ 0x3
  1831                           
  1832  0055                     displayDate@minutesUnits:	
  1833                           ; 1 bytes @ 0x3
  1834                           
  1835  0055                     getTemperature@tensDecimal:	
  1836                           ; 1 bytes @ 0x3
  1837                           
  1838                           
  1839                           ; 1 bytes @ 0x3
  1840  0055                     	ds	1
  1841  0056                     changeTime@hourtens:	
  1842  0056                     changeDate@yeartens:	
  1843                           ; 1 bytes @ 0x4
  1844                           
  1845  0056                     display@hoursTens:	
  1846                           ; 1 bytes @ 0x4
  1847                           
  1848  0056                     displayDate@hoursTens:	
  1849                           ; 1 bytes @ 0x4
  1850                           
  1851                           
  1852                           ; 1 bytes @ 0x4
  1853  0056                     	ds	1
  1854  0057                     changeTime@hourunits:	
  1855  0057                     changeDate@yearunits:	
  1856                           ; 1 bytes @ 0x5
  1857                           
  1858  0057                     display@hoursUnits:	
  1859                           ; 1 bytes @ 0x5
  1860                           
  1861  0057                     displayDate@hoursUnits:	
  1862                           ; 1 bytes @ 0x5
  1863                           
  1864                           
  1865                           ; 1 bytes @ 0x5
  1866  0057                     	ds	1
  1867  0058                     display@value:	
  1868  0058                     displayDate@value:	
  1869                           ; 1 bytes @ 0x6
  1870                           
  1871                           
  1872                           ; 1 bytes @ 0x6
  1873  0058                     	ds	1
  1874  0059                     display@value1:	
  1875  0059                     displayDate@value1:	
  1876                           ; 1 bytes @ 0x7
  1877                           
  1878                           
  1879                           ; 1 bytes @ 0x7
  1880  0059                     	ds	1
  1881  005A                     display@value2:	
  1882  005A                     displayDate@value2:	
  1883                           ; 1 bytes @ 0x8
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0x8
  1887  005A                     	ds	4
  1888  005E                     modeSelect@messagerow:	
  1889                           
  1890                           ; 9 bytes @ 0xC
  1891  005E                     	ds	9
  1892  0067                     ??_main:	
  1893                           
  1894                           ; 1 bytes @ 0x15
  1895  0067                     	ds	2
  1896                           
  1897                           	psect	maintext
  1898  00C9                     __pmaintext:	
  1899 ;;
  1900 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1901 ;;
  1902 ;; *************** function _main *****************
  1903 ;; Defined at:
  1904 ;;		line 820 in file "main.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : B00/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0
  1920 ;;      Temps:          0       2       0       0       0       0
  1921 ;;      Totals:         0       2       0       0       0       0
  1922 ;;Total ram usage:        2 bytes
  1923 ;; Hardware stack levels required when called:    6
  1924 ;; This function calls:
  1925 ;;		_LCDsetup
  1926 ;;		_Return
  1927 ;;		_activateZones
  1928 ;;		_activateZonesMode
  1929 ;;		_alarmOnOff
  1930 ;;		_buzzer2
  1931 ;;		_changeDate
  1932 ;;		_changeDateMode
  1933 ;;		_changeDelay
  1934 ;;		_changeDelayMode
  1935 ;;		_changeTemp
  1936 ;;		_changeTempMode
  1937 ;;		_changeTime
  1938 ;;		_changeTimeMode
  1939 ;;		_checkButtons
  1940 ;;		_checkZones
  1941 ;;		_checkZones2
  1942 ;;		_deactivateZones
  1943 ;;		_delaySeconds
  1944 ;;		_init
  1945 ;;		_showDate
  1946 ;;		_showTemp
  1947 ;;		_showTime
  1948 ;; This function is called by:
  1949 ;;		Startup code after reset
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _main
  1955  00C9                     _main:	
  1956                           
  1957                           ;main.c: 821: LCDsetup ();
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1961  00C9  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  1962  00CE                     l387:	
  1963                           ;main.c: 822: while(1){
  1964                           
  1965                           
  1966                           ;main.c: 823: checkButtons ();
  1967  00CE  120A  158A  26E1  120A  118A  	fcall	_checkButtons
  1968                           
  1969                           ;main.c: 825: alarmOnOff ();
  1970  00D3  120A  158A  227D  120A  118A  	fcall	_alarmOnOff
  1971                           
  1972                           ;main.c: 826: if (alarmOnOrOff == 1) {
  1973  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1974  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1975  00DA  034C               	decf	_alarmOnOrOff,w
  1976  00DB  1D03               	btfss	3,2
  1977  00DC  28CE               	goto	l387
  1978                           
  1979                           ;main.c: 828: checkZones ();
  1980  00DD  160A  118A  25A1  120A  118A  	fcall	_checkZones
  1981                           
  1982                           ;main.c: 830: if (zoneCheck == 1)
  1983  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1984  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1985  00E4  034A               	decf	_zoneCheck,w
  1986  00E5  1D03               	btfss	3,2
  1987  00E6  28EC               	goto	l389
  1988                           
  1989                           ;main.c: 831: {
  1990                           ;main.c: 832: checkZones2();
  1991  00E7  120A  158A  266B  120A  118A  	fcall	_checkZones2
  1992  00EC                     l389:	
  1993                           
  1994                           ;main.c: 833: }
  1995                           ;main.c: 834: activateZonesMode();
  1996  00EC  160A  118A  25C5  120A  118A  	fcall	_activateZonesMode
  1997                           
  1998                           ;main.c: 836: if (zoneActMode == 1)
  1999  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2000  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2001  00F3  034B               	decf	_zoneActMode,w
  2002  00F4  1D03               	btfss	3,2
  2003  00F5  2900               	goto	l390
  2004                           
  2005                           ;main.c: 837: {
  2006                           ;main.c: 838: activateZones();
  2007  00F6  120A  158A  25B2  120A  118A  	fcall	_activateZones
  2008                           
  2009                           ;main.c: 839: deactivateZones();
  2010  00FB  120A  158A  24A9  120A  118A  	fcall	_deactivateZones
  2011  0100                     l390:	
  2012                           
  2013                           ;main.c: 840: }
  2014                           ;main.c: 841: changeTempMode ();
  2015  0100  160A  118A  25EA  120A  118A  	fcall	_changeTempMode
  2016                           
  2017                           ;main.c: 842: if (tempChange == 1){
  2018  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0107  0341               	decf	_tempChange,w
  2021  0108  1D03               	btfss	3,2
  2022  0109  290F               	goto	l391
  2023                           
  2024                           ;main.c: 843: changeTemp();
  2025  010A  120A  118A  2030  120A  118A  	fcall	_changeTemp
  2026  010F                     l391:	
  2027                           
  2028                           ;main.c: 844: }
  2029                           ;main.c: 845: changeTimeMode ();
  2030  010F  160A  118A  257D  120A  118A  	fcall	_changeTimeMode
  2031                           
  2032                           ;main.c: 846: if (timeChange == 1){
  2033  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0116  0340               	decf	_timeChange,w
  2036  0117  1D03               	btfss	3,2
  2037  0118  291E               	goto	l392
  2038                           
  2039                           ;main.c: 847: changeTime();
  2040  0119  120A  118A  25D1  120A  118A  	fcall	_changeTime
  2041  011E                     l392:	
  2042                           
  2043                           ;main.c: 848: }
  2044                           ;main.c: 849: changeDateMode ();
  2045  011E  160A  118A  2559  120A  118A  	fcall	_changeDateMode
  2046                           
  2047                           ;main.c: 850: if (dateChange == 1){
  2048  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0125  033F               	decf	_dateChange,w
  2051  0126  1D03               	btfss	3,2
  2052  0127  292D               	goto	l393
  2053                           
  2054                           ;main.c: 851: changeDate();
  2055  0128  120A  118A  23F4  120A  118A  	fcall	_changeDate
  2056  012D                     l393:	
  2057                           
  2058                           ;main.c: 852: }
  2059                           ;main.c: 854: changeDelayMode();
  2060  012D  160A  118A  24F3  120A  118A  	fcall	_changeDelayMode
  2061                           
  2062                           ;main.c: 855: if (delayChange == 1) {
  2063  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0133  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0134  033E               	decf	_delayChange,w
  2066  0135  1D03               	btfss	3,2
  2067  0136  293C               	goto	l5397
  2068                           
  2069                           ;main.c: 856: changeDelay();
  2070  0137  120A  158A  2767  120A  118A  	fcall	_changeDelay
  2071  013C                     l5397:	
  2072                           
  2073                           ;main.c: 857: }
  2074                           ;main.c: 858: showTemp();
  2075  013C  160A  118A  242C  120A  118A  	fcall	_showTemp
  2076                           
  2077                           ;main.c: 859: showTime();
  2078  0141  120A  158A  2325  120A  118A  	fcall	_showTime
  2079                           
  2080                           ;main.c: 860: showDate();
  2081  0146  120A  158A  22ED  120A  118A  	fcall	_showDate
  2082                           
  2083                           ;main.c: 862: Return ();
  2084  014B  160A  118A  24B6  120A  118A  	fcall	_Return
  2085                           
  2086                           ;main.c: 863: init();
  2087  0150  160A  118A  239E  120A  118A  	fcall	_init
  2088                           
  2089                           ;main.c: 864: if (tempValue >= TriggerTemp) {
  2090  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0157  083D               	movf	_TriggerTemp,w
  2093  0158  024E               	subwf	_tempValue,w
  2094  0159  1C03               	skipc
  2095  015A  28CE               	goto	l387
  2096                           
  2097                           ;main.c: 865: if (zone0On == 1) {
  2098  015B  0349               	decf	_zone0On,w
  2099  015C  1D03               	btfss	3,2
  2100  015D  28CE               	goto	l387
  2101                           
  2102                           ;main.c: 866: zone0Alerted = 1;
  2103  015E  01C5               	clrf	_zone0Alerted
  2104  015F  0AC5               	incf	_zone0Alerted,f
  2105                           
  2106                           ;main.c: 867: delaySeconds(delayValue);
  2107  0160  083C               	movf	_delayValue,w
  2108  0161  00E7               	movwf	??_main
  2109  0162  01E8               	clrf	??_main+1
  2110  0163  0867               	movf	??_main,w
  2111  0164  00F0               	movwf	delaySeconds@d
  2112  0165  0868               	movf	??_main+1,w
  2113  0166  00F1               	movwf	delaySeconds@d+1
  2114  0167  120A  158A  21A7  120A  118A  	fcall	_delaySeconds
  2115                           
  2116                           ;main.c: 868: buzzer2();
  2117  016C  160A  118A  2474  120A  118A  	fcall	_buzzer2
  2118  0171  28CE               	goto	l387
  2119  0172                     __end_of_main:	
  2120                           
  2121                           	psect	text1
  2122  0B25                     __ptext1:	
  2123 ;; *************** function _showTime *****************
  2124 ;; Defined at:
  2125 ;;		line 311 in file "main.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0
  2142 ;;      Totals:         0       0       0       0       0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    3
  2146 ;; This function calls:
  2147 ;;		_Cinit
  2148 ;;		_clockInit
  2149 ;;		_display
  2150 ;;		_getTime
  2151 ;;		_setTime
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _showTime
  2159  0B25                     _showTime:	
  2160                           
  2161                           ;main.c: 312: if (row == 4 && col == 2) {
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _showTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2165  0B25  3004               	movlw	4
  2166  0B26  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0B27  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0B28  0638               	xorwf	_row,w
  2169  0B29  0439               	iorwf	_row+1,w
  2170  0B2A  1D03               	btfss	3,2
  2171  0B2B  0008               	return
  2172  0B2C  3002               	movlw	2
  2173  0B2D  063A               	xorwf	_col,w
  2174  0B2E  043B               	iorwf	_col+1,w
  2175  0B2F  1D03               	btfss	3,2
  2176  0B30  0008               	return
  2177                           
  2178                           ;main.c: 313: if (zoneActMode == 0 && tempChange == 0 && delayChange == 0 && timeChange 
      +                          == 0 && dateChange == 0 && zoneCheck == 0) {
  2179  0B31  084B               	movf	_zoneActMode,w
  2180  0B32  1D03               	btfss	3,2
  2181  0B33  0008               	return
  2182  0B34  0841               	movf	_tempChange,w
  2183  0B35  1D03               	btfss	3,2
  2184  0B36  0008               	return
  2185  0B37  083E               	movf	_delayChange,w
  2186  0B38  1D03               	btfss	3,2
  2187  0B39  0008               	return
  2188  0B3A  0840               	movf	_timeChange,w
  2189  0B3B  1D03               	btfss	3,2
  2190  0B3C  0008               	return
  2191  0B3D  083F               	movf	_dateChange,w
  2192  0B3E  1D03               	btfss	3,2
  2193  0B3F  0008               	return
  2194  0B40  084A               	movf	_zoneCheck,w
  2195  0B41  1D03               	btfss	3,2
  2196  0B42  0008               	return
  2197                           
  2198                           ;main.c: 314: clockInit();
  2199  0B43  160A  118A  244D  120A  158A  	fcall	_clockInit
  2200                           
  2201                           ;main.c: 315: Cinit();
  2202  0B48  120A  158A  2001  120A  158A  	fcall	_Cinit
  2203                           
  2204                           ;main.c: 316: setTime();
  2205  0B4D  120A  158A  22B5  120A  158A  	fcall	_setTime
  2206  0B52                     l4771:	
  2207                           ;main.c: 317: while (1) {
  2208                           
  2209                           
  2210                           ;main.c: 318: getTime();
  2211  0B52  120A  158A  220F  120A  158A  	fcall	_getTime
  2212                           
  2213                           ;main.c: 319: display();
  2214  0B57  120A  118A  223B  120A  158A  	fcall	_display
  2215  0B5C  2B52               	goto	l4771
  2216  0B5D                     __end_of_showTime:	
  2217                           
  2218                           	psect	text2
  2219  023B                     __ptext2:	
  2220 ;; *************** function _display *****************
  2221 ;; Defined at:
  2222 ;;		line 113 in file "clock.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  i               2    0        int 
  2227 ;;  value2          1    8[BANK0h] unsigned char 
  2228 ;;  value1          1    7[BANK0h] unsigned char 
  2229 ;;  value           1    6[BANK0h] unsigned char 
  2230 ;;  hoursUnits      1    5[BANK0h] unsigned char 
  2231 ;;  hoursTens       1    4[BANK0h] unsigned char 
  2232 ;;  minutesUnits    1    3[BANK0h] unsigned char 
  2233 ;;  minutesTens     1    2[BANK0h] unsigned char 
  2234 ;;  units           1    1[BANK0h] unsigned char 
  2235 ;;  tens            1    0[BANK0h] unsigned char 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       0       0       0
  2246 ;;      Locals:         0       9       0       0       0       0
  2247 ;;      Temps:          3       0       0       0       0       0
  2248 ;;      Totals:         3       9       0       0       0       0
  2249 ;;Total ram usage:       12 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    2
  2252 ;; This function calls:
  2253 ;;		___awdiv
  2254 ;;		_buttondelay
  2255 ;;		_writeChar
  2256 ;;		_writeCmd
  2257 ;; This function is called by:
  2258 ;;		_showTime
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _display
  2264  023B                     _display:	
  2265                           
  2266                           ;clock.c: 115: int i;
  2267                           ;clock.c: 117: if(row == 4 && col == 1)
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
  2271  023B  3004               	movlw	4
  2272  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2273  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2274  023E  0638               	xorwf	_row,w
  2275  023F  0439               	iorwf	_row+1,w
  2276  0240  1D03               	btfss	3,2
  2277  0241  2A52               	goto	l622
  2278  0242  033A               	decf	_col,w
  2279  0243  043B               	iorwf	_col+1,w
  2280  0244  1D03               	btfss	3,2
  2281  0245  2A52               	goto	l622
  2282                           
  2283                           ;clock.c: 118: {
  2284                           ;clock.c: 119: table1[0]=table1[3];
  2285  0246  0834               	movf	_table1+3,w
  2286  0247  00F9               	movwf	??_display
  2287  0248  0879               	movf	??_display,w
  2288  0249  00B1               	movwf	_table1
  2289                           
  2290                           ;clock.c: 120: table1[1]=table1[4];
  2291  024A  0835               	movf	_table1+4,w
  2292  024B  00F9               	movwf	??_display
  2293  024C  0879               	movf	??_display,w
  2294  024D  00B2               	movwf	_table1+1
  2295                           
  2296                           ;clock.c: 121: table1[2]=table1[6];
  2297  024E  0837               	movf	_table1+6,w
  2298  024F  00F9               	movwf	??_display
  2299  0250  0879               	movf	??_display,w
  2300  0251  00B3               	movwf	_table1+2
  2301  0252                     l622:	
  2302                           
  2303                           ;clock.c: 122: }
  2304                           ;clock.c: 124: value = table1[0];
  2305  0252  0831               	movf	_table1,w
  2306  0253  00F9               	movwf	??_display
  2307  0254  0879               	movf	??_display,w
  2308  0255  00D1               	movwf	_value
  2309                           
  2310                           ;clock.c: 125: if (value > 100)
  2311  0256  3065               	movlw	101
  2312  0257  0251               	subwf	_value,w
  2313  0258  1C03               	skipc
  2314  0259  2A70               	goto	l4613
  2315                           
  2316                           ;clock.c: 126: {
  2317                           ;clock.c: 127: value = value / 100;
  2318  025A  3064               	movlw	100
  2319  025B  00F0               	movwf	___awdiv@divisor
  2320  025C  3000               	movlw	0
  2321  025D  00F1               	movwf	___awdiv@divisor+1
  2322  025E  0851               	movf	_value,w
  2323  025F  00F9               	movwf	??_display
  2324  0260  01FA               	clrf	??_display+1
  2325  0261  0879               	movf	??_display,w
  2326  0262  00F2               	movwf	___awdiv@dividend
  2327  0263  087A               	movf	??_display+1,w
  2328  0264  00F3               	movwf	___awdiv@dividend+1
  2329  0265  120A  158A  2500  120A  118A  	fcall	___awdiv
  2330  026A  0870               	movf	?___awdiv,w
  2331  026B  00FB               	movwf	??_display+2
  2332  026C  087B               	movf	??_display+2,w
  2333  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2334  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2335  026F  00D1               	movwf	_value
  2336  0270                     l4613:	
  2337                           
  2338                           ;clock.c: 128: }
  2339                           ;clock.c: 130: char value = table1[0];
  2340  0270  0831               	movf	_table1,w
  2341  0271  00F9               	movwf	??_display
  2342  0272  0879               	movf	??_display,w
  2343  0273  00D8               	movwf	display@value
  2344                           
  2345                           ;clock.c: 131: char tens = (value >> 4)&0x07;
  2346  0274  0858               	movf	display@value,w
  2347  0275  00F9               	movwf	??_display
  2348  0276  3004               	movlw	4
  2349  0277                     u5915:	
  2350  0277  1003               	clrc
  2351  0278  0CF9               	rrf	??_display,f
  2352  0279  3EFF               	addlw	-1
  2353  027A  1D03               	skipz
  2354  027B  2A77               	goto	u5915
  2355  027C  0879               	movf	??_display,w
  2356  027D  3907               	andlw	7
  2357  027E  00FA               	movwf	??_display+1
  2358  027F  087A               	movf	??_display+1,w
  2359  0280  00D2               	movwf	display@tens
  2360                           
  2361                           ;clock.c: 132: char units = (value & 0x0f);
  2362  0281  0858               	movf	display@value,w
  2363  0282  390F               	andlw	15
  2364  0283  00F9               	movwf	??_display
  2365  0284  0879               	movf	??_display,w
  2366  0285  00D3               	movwf	display@units
  2367                           
  2368                           ;clock.c: 134: char value1 = table1[1];
  2369  0286  0832               	movf	_table1+1,w
  2370  0287  00F9               	movwf	??_display
  2371  0288  0879               	movf	??_display,w
  2372  0289  00D9               	movwf	display@value1
  2373                           
  2374                           ;clock.c: 135: char minutesTens = (value1 >> 4)&0x07;
  2375  028A  0859               	movf	display@value1,w
  2376  028B  00F9               	movwf	??_display
  2377  028C  3004               	movlw	4
  2378  028D                     u5925:	
  2379  028D  1003               	clrc
  2380  028E  0CF9               	rrf	??_display,f
  2381  028F  3EFF               	addlw	-1
  2382  0290  1D03               	skipz
  2383  0291  2A8D               	goto	u5925
  2384  0292  0879               	movf	??_display,w
  2385  0293  3907               	andlw	7
  2386  0294  00FA               	movwf	??_display+1
  2387  0295  087A               	movf	??_display+1,w
  2388  0296  00D4               	movwf	display@minutesTens
  2389                           
  2390                           ;clock.c: 136: char minutesUnits = (value1 & 0x0f);
  2391  0297  0859               	movf	display@value1,w
  2392  0298  390F               	andlw	15
  2393  0299  00F9               	movwf	??_display
  2394  029A  0879               	movf	??_display,w
  2395  029B  00D5               	movwf	display@minutesUnits
  2396                           
  2397                           ;clock.c: 138: char value2 = table1[2];
  2398  029C  0833               	movf	_table1+2,w
  2399  029D  00F9               	movwf	??_display
  2400  029E  0879               	movf	??_display,w
  2401  029F  00DA               	movwf	display@value2
  2402                           
  2403                           ;clock.c: 139: char hoursTens = (value2 >> 4)&0x07;
  2404  02A0  085A               	movf	display@value2,w
  2405  02A1  00F9               	movwf	??_display
  2406  02A2  3004               	movlw	4
  2407  02A3                     u5935:	
  2408  02A3  1003               	clrc
  2409  02A4  0CF9               	rrf	??_display,f
  2410  02A5  3EFF               	addlw	-1
  2411  02A6  1D03               	skipz
  2412  02A7  2AA3               	goto	u5935
  2413  02A8  0879               	movf	??_display,w
  2414  02A9  3907               	andlw	7
  2415  02AA  00FA               	movwf	??_display+1
  2416  02AB  087A               	movf	??_display+1,w
  2417  02AC  00D6               	movwf	display@hoursTens
  2418                           
  2419                           ;clock.c: 140: char hoursUnits = (value2 & 0x0f);
  2420  02AD  085A               	movf	display@value2,w
  2421  02AE  390F               	andlw	15
  2422  02AF  00F9               	movwf	??_display
  2423  02B0  0879               	movf	??_display,w
  2424  02B1  00D7               	movwf	display@hoursUnits
  2425                           
  2426                           ;clock.c: 142: __nop();
  2427  02B2  0000               	nop
  2428                           
  2429                           ;clock.c: 143: writeChar('\'' + tens - 30 + '\'');
  2430  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2431  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2432  02B5  0852               	movf	display@tens,w
  2433  02B6  3E30               	addlw	48
  2434  02B7  160A  118A  2535  120A  118A  	fcall	_writeChar
  2435                           
  2436                           ;clock.c: 144: writeChar('\'' + units - 30 + '\'');
  2437  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2438  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2439  02BE  0853               	movf	display@units,w
  2440  02BF  3E30               	addlw	48
  2441  02C0  160A  118A  2535  120A  118A  	fcall	_writeChar
  2442                           
  2443                           ;clock.c: 145: writeChar(':');
  2444  02C5  303A               	movlw	58
  2445  02C6  160A  118A  2535  120A  118A  	fcall	_writeChar
  2446                           
  2447                           ;clock.c: 146: writeChar('\'' + minutesTens - 30 + '\'');
  2448  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2449  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2450  02CD  0854               	movf	display@minutesTens,w
  2451  02CE  3E30               	addlw	48
  2452  02CF  160A  118A  2535  120A  118A  	fcall	_writeChar
  2453                           
  2454                           ;clock.c: 147: writeChar('\'' + minutesUnits - 30 + '\'');
  2455  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2456  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2457  02D6  0855               	movf	display@minutesUnits,w
  2458  02D7  3E30               	addlw	48
  2459  02D8  160A  118A  2535  120A  118A  	fcall	_writeChar
  2460                           
  2461                           ;clock.c: 148: writeChar(':');
  2462  02DD  303A               	movlw	58
  2463  02DE  160A  118A  2535  120A  118A  	fcall	_writeChar
  2464                           
  2465                           ;clock.c: 149: writeChar('\'' + hoursTens - 30 + '\'');
  2466  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2467  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2468  02E5  0856               	movf	display@hoursTens,w
  2469  02E6  3E30               	addlw	48
  2470  02E7  160A  118A  2535  120A  118A  	fcall	_writeChar
  2471                           
  2472                           ;clock.c: 150: writeChar('\'' + hoursUnits - 30 + '\'');
  2473  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2474  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2475  02EE  0857               	movf	display@hoursUnits,w
  2476  02EF  3E30               	addlw	48
  2477  02F0  160A  118A  2535  120A  118A  	fcall	_writeChar
  2478                           
  2479                           ;clock.c: 151: buttondelay();
  2480  02F5  160A  118A  241C  120A  118A  	fcall	_buttondelay
  2481                           
  2482                           ;clock.c: 152: buttondelay();
  2483  02FA  160A  118A  241C  120A  118A  	fcall	_buttondelay
  2484                           
  2485                           ;clock.c: 153: writeCmd(0x01);
  2486  02FF  3001               	movlw	1
  2487  0300  160A  118A  2513   	fcall	_writeCmd
  2488  0303  0008               	return
  2489  0304                     __end_of_display:	
  2490                           
  2491                           	psect	text3
  2492  142C                     __ptext3:	
  2493 ;; *************** function _showTemp *****************
  2494 ;; Defined at:
  2495 ;;		line 285 in file "main.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2509 ;;      Params:         0       0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    3
  2516 ;; This function calls:
  2517 ;;		_getTemperature
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _showTemp
  2525  142C                     _showTemp:	
  2526                           
  2527                           ;main.c: 286: if (row == 2 && col == 4) {
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _showTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2531  142C  3002               	movlw	2
  2532  142D  1283               	bcf	3,5	;RP0=0, select bank0
  2533  142E  1303               	bcf	3,6	;RP1=0, select bank0
  2534  142F  0638               	xorwf	_row,w
  2535  1430  0439               	iorwf	_row+1,w
  2536  1431  1D03               	btfss	3,2
  2537  1432  0008               	return
  2538  1433  3004               	movlw	4
  2539  1434  063A               	xorwf	_col,w
  2540  1435  043B               	iorwf	_col+1,w
  2541  1436  1D03               	btfss	3,2
  2542  1437  0008               	return
  2543                           
  2544                           ;main.c: 292: getTemperature();
  2545  1438  120A  118A  2304   	fcall	_getTemperature
  2546  143B  0008               	return
  2547  143C                     __end_of_showTemp:	
  2548                           
  2549                           	psect	text4
  2550  0304                     __ptext4:	
  2551 ;; *************** function _getTemperature *****************
  2552 ;; Defined at:
  2553 ;;		line 164 in file "temperature.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;		None
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  tensDecimal     1    3[BANK0h] unsigned char 
  2558 ;;  units           1    2[BANK0h] unsigned char 
  2559 ;;  tens            1    1[BANK0h] unsigned char 
  2560 ;;  decimal         1    0[BANK0h] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       0       0       0       0       0
  2571 ;;      Locals:         0       4       0       0       0       0
  2572 ;;      Temps:          3       0       0       0       0       0
  2573 ;;      Totals:         3       4       0       0       0       0
  2574 ;;Total ram usage:        7 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    2
  2577 ;; This function calls:
  2578 ;;		___awdiv
  2579 ;;		___awmod
  2580 ;;		_delay
  2581 ;;		_readByte
  2582 ;;		_reset
  2583 ;;		_tempDelay
  2584 ;;		_writeByte
  2585 ;;		_writeChar
  2586 ;; This function is called by:
  2587 ;;		_showTemp
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _getTemperature
  2593  0304                     _getTemperature:	
  2594                           
  2595                           ;temperature.c: 166: reset();
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _getTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2599  0304  120A  158A  21DA  120A  118A  	fcall	_reset
  2600                           
  2601                           ;temperature.c: 167: writeByte(0xCC);
  2602  0309  30CC               	movlw	204
  2603  030A  120A  158A  2246  120A  118A  	fcall	_writeByte
  2604                           
  2605                           ;temperature.c: 168: writeByte(0x44);
  2606  030F  3044               	movlw	68
  2607  0310  120A  158A  2246  120A  118A  	fcall	_writeByte
  2608                           
  2609                           ;temperature.c: 169: tempDelay(2,70);
  2610  0315  3046               	movlw	70
  2611  0316  00F9               	movwf	??_getTemperature
  2612  0317  0879               	movf	??_getTemperature,w
  2613  0318  00F0               	movwf	tempDelay@y
  2614  0319  3002               	movlw	2
  2615  031A  160A  118A  23DE  120A  118A  	fcall	_tempDelay
  2616                           
  2617                           ;temperature.c: 170: reset();
  2618  031F  120A  158A  21DA  120A  118A  	fcall	_reset
  2619                           
  2620                           ;temperature.c: 171: writeByte(0xCC);
  2621  0324  30CC               	movlw	204
  2622  0325  120A  158A  2246  120A  118A  	fcall	_writeByte
  2623                           
  2624                           ;temperature.c: 172: writeByte(0xBE);
  2625  032A  30BE               	movlw	190
  2626  032B  120A  158A  2246  120A  118A  	fcall	_writeByte
  2627                           
  2628                           ;temperature.c: 175: tempLow = readByte();
  2629  0330  120A  158A  235D  120A  118A  	fcall	_readByte
  2630  0335  00F9               	movwf	??_getTemperature
  2631  0336  0879               	movf	??_getTemperature,w
  2632  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0339  00D0               	movwf	_tempLow
  2635                           
  2636                           ;temperature.c: 176: tempHigh = readByte();
  2637  033A  120A  158A  235D  120A  118A  	fcall	_readByte
  2638  033F  00F9               	movwf	??_getTemperature
  2639  0340  0879               	movf	??_getTemperature,w
  2640  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0343  00CF               	movwf	_tempHigh
  2643                           
  2644                           ;temperature.c: 180: tempValue = (tempLow >> 4)| (tempHigh << 4);
  2645  0344  084F               	movf	_tempHigh,w
  2646  0345  00F9               	movwf	??_getTemperature
  2647  0346  3004               	movlw	4
  2648  0347                     u5835:	
  2649  0347  1003               	clrc
  2650  0348  0DF9               	rlf	??_getTemperature,f
  2651  0349  3EFF               	addlw	-1
  2652  034A  1D03               	skipz
  2653  034B  2B47               	goto	u5835
  2654  034C  0850               	movf	_tempLow,w
  2655  034D  00FA               	movwf	??_getTemperature+1
  2656  034E  3004               	movlw	4
  2657  034F                     u5845:	
  2658  034F  1003               	clrc
  2659  0350  0CFA               	rrf	??_getTemperature+1,f
  2660  0351  3EFF               	addlw	-1
  2661  0352  1D03               	skipz
  2662  0353  2B4F               	goto	u5845
  2663  0354  087A               	movf	??_getTemperature+1,w
  2664  0355  0479               	iorwf	??_getTemperature,w
  2665  0356  00FB               	movwf	??_getTemperature+2
  2666  0357  087B               	movf	??_getTemperature+2,w
  2667  0358  00CE               	movwf	_tempValue
  2668                           
  2669                           ;temperature.c: 182: char decimal = tempLow << 4;
  2670  0359  0850               	movf	_tempLow,w
  2671  035A  00F9               	movwf	??_getTemperature
  2672  035B  3003               	movlw	3
  2673  035C                     u5855:	
  2674  035C  1003               	clrc
  2675  035D  0DF9               	rlf	??_getTemperature,f
  2676  035E  3EFF               	addlw	-1
  2677  035F  1D03               	skipz
  2678  0360  2B5C               	goto	u5855
  2679  0361  1003               	clrc
  2680  0362  0D79               	rlf	??_getTemperature,w
  2681  0363  00FA               	movwf	??_getTemperature+1
  2682  0364  087A               	movf	??_getTemperature+1,w
  2683  0365  00D2               	movwf	getTemperature@decimal
  2684                           
  2685                           ;temperature.c: 184: if(tempValue > 100)
  2686  0366  3065               	movlw	101
  2687  0367  024E               	subwf	_tempValue,w
  2688  0368  1C03               	skipc
  2689  0369  2B80               	goto	l709
  2690                           
  2691                           ;temperature.c: 185: {
  2692                           ;temperature.c: 186: tempValue = tempValue / 100;
  2693  036A  3064               	movlw	100
  2694  036B  00F0               	movwf	___awdiv@divisor
  2695  036C  3000               	movlw	0
  2696  036D  00F1               	movwf	___awdiv@divisor+1
  2697  036E  084E               	movf	_tempValue,w
  2698  036F  00F9               	movwf	??_getTemperature
  2699  0370  01FA               	clrf	??_getTemperature+1
  2700  0371  0879               	movf	??_getTemperature,w
  2701  0372  00F2               	movwf	___awdiv@dividend
  2702  0373  087A               	movf	??_getTemperature+1,w
  2703  0374  00F3               	movwf	___awdiv@dividend+1
  2704  0375  120A  158A  2500  120A  118A  	fcall	___awdiv
  2705  037A  0870               	movf	?___awdiv,w
  2706  037B  00FB               	movwf	??_getTemperature+2
  2707  037C  087B               	movf	??_getTemperature+2,w
  2708  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2709  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2710  037F  00CE               	movwf	_tempValue
  2711  0380                     l709:	
  2712                           
  2713                           ;temperature.c: 187: }
  2714                           ;temperature.c: 190: char tens = tempValue/10;
  2715  0380  300A               	movlw	10
  2716  0381  00F0               	movwf	___awdiv@divisor
  2717  0382  3000               	movlw	0
  2718  0383  00F1               	movwf	___awdiv@divisor+1
  2719  0384  084E               	movf	_tempValue,w
  2720  0385  00F9               	movwf	??_getTemperature
  2721  0386  01FA               	clrf	??_getTemperature+1
  2722  0387  0879               	movf	??_getTemperature,w
  2723  0388  00F2               	movwf	___awdiv@dividend
  2724  0389  087A               	movf	??_getTemperature+1,w
  2725  038A  00F3               	movwf	___awdiv@dividend+1
  2726  038B  120A  158A  2500  120A  118A  	fcall	___awdiv
  2727  0390  0870               	movf	?___awdiv,w
  2728  0391  00FB               	movwf	??_getTemperature+2
  2729  0392  087B               	movf	??_getTemperature+2,w
  2730  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0395  00D3               	movwf	getTemperature@tens
  2733                           
  2734                           ;temperature.c: 191: char units = tempValue%10;
  2735  0396  300A               	movlw	10
  2736  0397  00F0               	movwf	___awmod@divisor
  2737  0398  3000               	movlw	0
  2738  0399  00F1               	movwf	___awmod@divisor+1
  2739  039A  084E               	movf	_tempValue,w
  2740  039B  00F9               	movwf	??_getTemperature
  2741  039C  01FA               	clrf	??_getTemperature+1
  2742  039D  0879               	movf	??_getTemperature,w
  2743  039E  00F2               	movwf	___awmod@dividend
  2744  039F  087A               	movf	??_getTemperature+1,w
  2745  03A0  00F3               	movwf	___awmod@dividend+1
  2746  03A1  120A  158A  240E  120A  118A  	fcall	___awmod
  2747  03A6  0870               	movf	?___awmod,w
  2748  03A7  00FB               	movwf	??_getTemperature+2
  2749  03A8  087B               	movf	??_getTemperature+2,w
  2750  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2751  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2752  03AB  00D4               	movwf	getTemperature@units
  2753                           
  2754                           ;temperature.c: 194: if(decimal & 0x80)
  2755  03AC  1FD2               	btfss	getTemperature@decimal,7
  2756  03AD  2BB3               	goto	l4577
  2757                           
  2758                           ;temperature.c: 195: {
  2759                           ;temperature.c: 196: decimalNumber = decimalNumber + 5000;
  2760  03AE  084D               	movf	_decimalNumber,w
  2761  03AF  3E88               	addlw	136
  2762  03B0  00F9               	movwf	??_getTemperature
  2763  03B1  0879               	movf	??_getTemperature,w
  2764  03B2  00CD               	movwf	_decimalNumber
  2765  03B3                     l4577:	
  2766                           
  2767                           ;temperature.c: 197: }
  2768                           ;temperature.c: 198: char tensDecimal = decimalNumber/1000;
  2769  03B3  30E8               	movlw	232
  2770  03B4  00F0               	movwf	___awdiv@divisor
  2771  03B5  3003               	movlw	3
  2772  03B6  00F1               	movwf	___awdiv@divisor+1
  2773  03B7  084D               	movf	_decimalNumber,w
  2774  03B8  00F9               	movwf	??_getTemperature
  2775  03B9  01FA               	clrf	??_getTemperature+1
  2776  03BA  0879               	movf	??_getTemperature,w
  2777  03BB  00F2               	movwf	___awdiv@dividend
  2778  03BC  087A               	movf	??_getTemperature+1,w
  2779  03BD  00F3               	movwf	___awdiv@dividend+1
  2780  03BE  120A  158A  2500  120A  118A  	fcall	___awdiv
  2781  03C3  0870               	movf	?___awdiv,w
  2782  03C4  00FB               	movwf	??_getTemperature+2
  2783  03C5  087B               	movf	??_getTemperature+2,w
  2784  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2785  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2786  03C8  00D5               	movwf	getTemperature@tensDecimal
  2787                           
  2788                           ;temperature.c: 199: __nop();
  2789  03C9  0000               	nop
  2790                           
  2791                           ;temperature.c: 201: writeChar('\'' + tens - 30 + '\'');
  2792  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2793  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2794  03CC  0853               	movf	getTemperature@tens,w
  2795  03CD  3E30               	addlw	48
  2796  03CE  160A  118A  2535  120A  118A  	fcall	_writeChar
  2797                           
  2798                           ;temperature.c: 202: writeChar('\'' + units - 30 + '\'');
  2799  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2800  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2801  03D5  0854               	movf	getTemperature@units,w
  2802  03D6  3E30               	addlw	48
  2803  03D7  160A  118A  2535  120A  118A  	fcall	_writeChar
  2804                           
  2805                           ;temperature.c: 203: writeChar('.');
  2806  03DC  302E               	movlw	46
  2807  03DD  160A  118A  2535  120A  118A  	fcall	_writeChar
  2808                           
  2809                           ;temperature.c: 204: writeChar('\'' + tensDecimal - 30 + '\'');
  2810  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2811  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2812  03E4  0855               	movf	getTemperature@tensDecimal,w
  2813  03E5  3E30               	addlw	48
  2814  03E6  160A  118A  2535  120A  118A  	fcall	_writeChar
  2815                           
  2816                           ;temperature.c: 205: delay();
  2817  03EB  160A  118A  2460  120A  118A  	fcall	_delay
  2818                           
  2819                           ;temperature.c: 206: delay();
  2820  03F0  160A  118A  2460   	fcall	_delay
  2821  03F3  0008               	return
  2822  03F4                     __end_of_getTemperature:	
  2823                           
  2824                           	psect	text5
  2825  0A46                     __ptext5:	
  2826 ;; *************** function _writeByte *****************
  2827 ;; Defined at:
  2828 ;;		line 54 in file "temperature.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  value           1    wreg     unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  value           1    7[COMMON] unsigned char 
  2833 ;;  i               1    8[COMMON] unsigned char 
  2834 ;;  temp            1    6[COMMON] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0, pclath, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2844 ;;      Params:         0       0       0       0       0       0
  2845 ;;      Locals:         3       0       0       0       0       0
  2846 ;;      Temps:          2       0       0       0       0       0
  2847 ;;      Totals:         5       0       0       0       0       0
  2848 ;;Total ram usage:        5 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    1
  2851 ;; This function calls:
  2852 ;;		_tempDelay
  2853 ;; This function is called by:
  2854 ;;		_getTemperature
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _writeByte
  2860  0A46                     _writeByte:	
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _writeByte: [wreg+status,2+status,0+pclath+cstack]
  2864                           ;writeByte@value stored from wreg
  2865  0A46  00F7               	movwf	writeByte@value
  2866                           
  2867                           ;temperature.c: 56: char temp;
  2868                           ;temperature.c: 57: for(char i = 0; i < 8; ++i)
  2869  0A47  01F8               	clrf	writeByte@i
  2870  0A48                     L1:	
  2871  0A48  3008               	movlw	8
  2872  0A49  0278               	subwf	writeByte@i,w
  2873  0A4A  1803               	btfsc	3,0
  2874  0A4B  0008               	return
  2875                           
  2876                           ;temperature.c: 58: {
  2877                           ;temperature.c: 59: temp = value & 0x01;
  2878  0A4C  0877               	movf	writeByte@value,w
  2879  0A4D  3901               	andlw	1
  2880  0A4E  00F4               	movwf	??_writeByte
  2881  0A4F  0874               	movf	??_writeByte,w
  2882  0A50  00F6               	movwf	writeByte@temp
  2883                           
  2884                           ;temperature.c: 60: TRISA0 = 0;
  2885  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  2886  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  2887  0A53  1005               	bcf	5,0	;volatile
  2888                           
  2889                           ;temperature.c: 61: RA0 = 0;
  2890  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0A56  1005               	bcf	5,0	;volatile
  2893                           
  2894                           ;temperature.c: 62: __nop();
  2895  0A57  0000               	nop
  2896                           
  2897                           ;temperature.c: 63: __nop();
  2898  0A58  0000               	nop
  2899                           
  2900                           ;temperature.c: 64: __nop();
  2901  0A59  0000               	nop
  2902                           
  2903                           ;temperature.c: 65: __nop();
  2904  0A5A  0000               	nop
  2905                           
  2906                           ;temperature.c: 66: __nop();
  2907  0A5B  0000               	nop
  2908                           
  2909                           ;temperature.c: 68: if(temp == 1)
  2910  0A5C  0376               	decf	writeByte@temp,w
  2911  0A5D  1D03               	btfss	3,2
  2912  0A5E  2A62               	goto	l2921
  2913                           
  2914                           ;temperature.c: 69: {
  2915                           ;temperature.c: 70: RA0 = 1;
  2916  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0A61  1405               	bsf	5,0	;volatile
  2919  0A62                     l2921:	
  2920                           
  2921                           ;temperature.c: 71: }
  2922                           ;temperature.c: 72: tempDelay(2,7);
  2923  0A62  3007               	movlw	7
  2924  0A63  00F4               	movwf	??_writeByte
  2925  0A64  0874               	movf	??_writeByte,w
  2926  0A65  00F0               	movwf	tempDelay@y
  2927  0A66  3002               	movlw	2
  2928  0A67  160A  118A  23DE  120A  158A  	fcall	_tempDelay
  2929                           
  2930                           ;temperature.c: 73: TRISA0 = 1;
  2931  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  2933  0A6E  1405               	bsf	5,0	;volatile
  2934                           
  2935                           ;temperature.c: 74: __nop();
  2936  0A6F  0000               	nop
  2937                           
  2938                           ;temperature.c: 75: __nop();
  2939  0A70  0000               	nop
  2940                           
  2941                           ;temperature.c: 76: value = value>>1;
  2942  0A71  0877               	movf	writeByte@value,w
  2943  0A72  00F4               	movwf	??_writeByte
  2944  0A73  1003               	clrc
  2945  0A74  0C74               	rrf	??_writeByte,w
  2946  0A75  00F5               	movwf	??_writeByte+1
  2947  0A76  0875               	movf	??_writeByte+1,w
  2948  0A77  00F7               	movwf	writeByte@value
  2949  0A78  3001               	movlw	1
  2950  0A79  00F4               	movwf	??_writeByte
  2951  0A7A  0874               	movf	??_writeByte,w
  2952  0A7B  07F8               	addwf	writeByte@i,f
  2953  0A7C  2A48               	goto	L1
  2954  0A7D                     __end_of_writeByte:	
  2955                           
  2956                           	psect	text6
  2957  09DA                     __ptext6:	
  2958 ;; *************** function _reset *****************
  2959 ;; Defined at:
  2960 ;;		line 32 in file "temperature.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  presance        1    5[COMMON] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, pclath, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2974 ;;      Params:         0       0       0       0       0       0
  2975 ;;      Locals:         1       0       0       0       0       0
  2976 ;;      Temps:          1       0       0       0       0       0
  2977 ;;      Totals:         2       0       0       0       0       0
  2978 ;;Total ram usage:        2 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    1
  2981 ;; This function calls:
  2982 ;;		_tempDelay
  2983 ;; This function is called by:
  2984 ;;		_getTemperature
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           
  2989                           ;psect for function _reset
  2990  09DA                     _reset:	
  2991                           
  2992                           ;temperature.c: 34: char presance = 0;
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  2996  09DA  01F5               	clrf	reset@presance
  2997  09DB                     l2893:	
  2998                           ;temperature.c: 35: while(!presance)
  2999                           
  3000  09DB  0875               	movf	reset@presance,w
  3001  09DC  1D03               	btfss	3,2
  3002  09DD  0008               	return
  3003                           
  3004                           ;temperature.c: 36: {
  3005                           ;temperature.c: 37: TRISA0 = 0;
  3006  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  3007  09DF  1303               	bcf	3,6	;RP1=0, select bank1
  3008  09E0  1005               	bcf	5,0	;volatile
  3009                           
  3010                           ;temperature.c: 38: RA0 = 0;
  3011  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  3012  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  3013  09E3  1005               	bcf	5,0	;volatile
  3014                           
  3015                           ;temperature.c: 39: tempDelay(2,70);
  3016  09E4  3046               	movlw	70
  3017  09E5  00F4               	movwf	??_reset
  3018  09E6  0874               	movf	??_reset,w
  3019  09E7  00F0               	movwf	tempDelay@y
  3020  09E8  3002               	movlw	2
  3021  09E9  160A  118A  23DE  120A  158A  	fcall	_tempDelay
  3022                           
  3023                           ;temperature.c: 40: TRISA = 1;
  3024  09EE  3001               	movlw	1
  3025  09EF  1683               	bsf	3,5	;RP0=1, select bank1
  3026  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  3027  09F1  0085               	movwf	5	;volatile
  3028                           
  3029                           ;temperature.c: 41: tempDelay(2,8);
  3030  09F2  3008               	movlw	8
  3031  09F3  00F4               	movwf	??_reset
  3032  09F4  0874               	movf	??_reset,w
  3033  09F5  00F0               	movwf	tempDelay@y
  3034  09F6  3002               	movlw	2
  3035  09F7  160A  118A  23DE  120A  158A  	fcall	_tempDelay
  3036                           
  3037                           ;temperature.c: 42: if(RA0 == 1)
  3038  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  3039  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  3040  09FE  1C05               	btfss	5,0	;volatile
  3041  09FF  2A02               	goto	l680
  3042                           
  3043                           ;temperature.c: 43: {
  3044                           ;temperature.c: 44: presance = 0;
  3045  0A00  01F5               	clrf	reset@presance
  3046                           
  3047                           ;temperature.c: 45: }
  3048  0A01  2A04               	goto	l2891
  3049  0A02                     l680:	
  3050                           
  3051                           ;temperature.c: 46: else
  3052                           ;temperature.c: 47: {
  3053                           ;temperature.c: 48: presance = 1;
  3054  0A02  01F5               	clrf	reset@presance
  3055  0A03  0AF5               	incf	reset@presance,f
  3056  0A04                     l2891:	
  3057                           
  3058                           ;temperature.c: 49: }
  3059                           ;temperature.c: 50: tempDelay(2,60);
  3060  0A04  303C               	movlw	60
  3061  0A05  00F4               	movwf	??_reset
  3062  0A06  0874               	movf	??_reset,w
  3063  0A07  00F0               	movwf	tempDelay@y
  3064  0A08  3002               	movlw	2
  3065  0A09  160A  118A  23DE  120A  158A  	fcall	_tempDelay
  3066  0A0E  29DB               	goto	l2893
  3067  0A0F                     __end_of_reset:	
  3068                           
  3069                           	psect	text7
  3070  0B5D                     __ptext7:	
  3071 ;; *************** function _readByte *****************
  3072 ;; Defined at:
  3073 ;;		line 80 in file "temperature.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  i               1    6[COMMON] unsigned char 
  3078 ;;  value           1    5[COMMON] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      unsigned char 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3088 ;;      Params:         0       0       0       0       0       0
  3089 ;;      Locals:         2       0       0       0       0       0
  3090 ;;      Temps:          1       0       0       0       0       0
  3091 ;;      Totals:         3       0       0       0       0       0
  3092 ;;Total ram usage:        3 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    1
  3095 ;; This function calls:
  3096 ;;		_tempDelay
  3097 ;; This function is called by:
  3098 ;;		_getTemperature
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _readByte
  3104  0B5D                     _readByte:	
  3105                           
  3106                           ;temperature.c: 82: char i;
  3107                           ;temperature.c: 83: char value = 0;
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _readByte: [wreg+status,2+status,0+pclath+cstack]
  3111  0B5D  01F5               	clrf	readByte@value
  3112                           
  3113                           ;temperature.c: 84: static bit j;
  3114                           ;temperature.c: 85: for(i = 0; i < 8; i++)
  3115  0B5E  01F6               	clrf	readByte@i
  3116  0B5F  3008               	movlw	8
  3117  0B60  0276               	subwf	readByte@i,w
  3118  0B61  1803               	btfsc	3,0
  3119  0B62  2B94               	goto	l2983
  3120                           
  3121                           ;temperature.c: 86: {
  3122                           ;temperature.c: 87: value >> = 1;
  3123  0B63  1003               	clrc
  3124  0B64                     L2:	
  3125  0B64  0CF5               	rrf	readByte@value,f
  3126                           
  3127                           ;temperature.c: 88: TRISA0 = 0;
  3128  0B65  1683               	bsf	3,5	;RP0=1, select bank1
  3129  0B66  1303               	bcf	3,6	;RP1=0, select bank1
  3130  0B67  1005               	bcf	5,0	;volatile
  3131                           
  3132                           ;temperature.c: 89: RA0 = 0;
  3133  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0B6A  1005               	bcf	5,0	;volatile
  3136                           
  3137                           ;temperature.c: 91: __nop();
  3138  0B6B  0000               	nop
  3139                           
  3140                           ;temperature.c: 92: __nop();
  3141  0B6C  0000               	nop
  3142                           
  3143                           ;temperature.c: 93: __nop();
  3144  0B6D  0000               	nop
  3145                           
  3146                           ;temperature.c: 94: __nop();
  3147  0B6E  0000               	nop
  3148                           
  3149                           ;temperature.c: 95: __nop();
  3150  0B6F  0000               	nop
  3151                           
  3152                           ;temperature.c: 96: __nop();
  3153  0B70  0000               	nop
  3154                           
  3155                           ;temperature.c: 98: TRISA0 = 1;
  3156  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  3157  0B72  1303               	bcf	3,6	;RP1=0, select bank1
  3158  0B73  1405               	bsf	5,0	;volatile
  3159                           
  3160                           ;temperature.c: 99: __nop();
  3161  0B74  0000               	nop
  3162                           
  3163                           ;temperature.c: 100: __nop();
  3164  0B75  0000               	nop
  3165                           
  3166                           ;temperature.c: 101: __nop();
  3167  0B76  0000               	nop
  3168                           
  3169                           ;temperature.c: 102: __nop();
  3170  0B77  0000               	nop
  3171                           
  3172                           ;temperature.c: 103: __nop();
  3173  0B78  0000               	nop
  3174                           
  3175                           ;temperature.c: 104: j=RA0;
  3176  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0B7B  106F               	bcf	readByte@j/(0+8),readByte@j& (0+7)
  3179  0B7C  1805               	btfsc	5,0	;volatile
  3180  0B7D  146F               	bsf	readByte@j/(0+8),readByte@j& (0+7)
  3181                           
  3182                           ;temperature.c: 105: if(j)
  3183  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0B80  186F               	btfsc	readByte@j/(0+8),readByte@j& (0+7)
  3186                           
  3187                           ;temperature.c: 106: {
  3188                           ;temperature.c: 107: value|=0x80;
  3189  0B81  17F5               	bsf	readByte@value,7
  3190                           
  3191                           ;temperature.c: 108: }
  3192                           ;temperature.c: 109: tempDelay(2,7);
  3193  0B82  3007               	movlw	7
  3194  0B83  00F4               	movwf	??_readByte
  3195  0B84  0874               	movf	??_readByte,w
  3196  0B85  00F0               	movwf	tempDelay@y
  3197  0B86  3002               	movlw	2
  3198  0B87  160A  118A  23DE  120A  158A  	fcall	_tempDelay
  3199  0B8C  3001               	movlw	1
  3200  0B8D  00F4               	movwf	??_readByte
  3201  0B8E  0874               	movf	??_readByte,w
  3202  0B8F  07F6               	addwf	readByte@i,f
  3203  0B90  3008               	movlw	8
  3204  0B91  0276               	subwf	readByte@i,w
  3205  0B92  1C03               	skipc
  3206  0B93  2B64               	goto	L2
  3207  0B94                     l2983:	
  3208                           
  3209                           ;temperature.c: 110: }
  3210                           ;temperature.c: 111: return(value);
  3211  0B94  0875               	movf	readByte@value,w
  3212  0B95  0008               	return
  3213  0B96                     __end_of_readByte:	
  3214                           
  3215                           	psect	text8
  3216  13DE                     __ptext8:	
  3217 ;; *************** function _tempDelay *****************
  3218 ;; Defined at:
  3219 ;;		line 18 in file "temperature.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  x               1    wreg     unsigned char 
  3222 ;;  y               1    0[COMMON] unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  x               1    2[COMMON] unsigned char 
  3225 ;;  z               1    3[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3235 ;;      Params:         1       0       0       0       0       0
  3236 ;;      Locals:         2       0       0       0       0       0
  3237 ;;      Temps:          1       0       0       0       0       0
  3238 ;;      Totals:         4       0       0       0       0       0
  3239 ;;Total ram usage:        4 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_reset
  3245 ;;		_writeByte
  3246 ;;		_readByte
  3247 ;;		_getTemperature
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _tempDelay
  3253  13DE                     _tempDelay:	
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _tempDelay: [wreg+status,2+status,0]
  3257                           ;tempDelay@x stored from wreg
  3258  13DE  00F2               	movwf	tempDelay@x
  3259  13DF                     l666:	
  3260                           ;temperature.c: 20: do{
  3261                           
  3262                           
  3263                           ;temperature.c: 21: char z = y;
  3264  13DF  0870               	movf	tempDelay@y,w
  3265  13E0  00F1               	movwf	??_tempDelay
  3266  13E1  0871               	movf	??_tempDelay,w
  3267  13E2  00F3               	movwf	tempDelay@z
  3268  13E3                     l2797:	
  3269                           ;temperature.c: 22: do{
  3270                           
  3271                           
  3272                           ;temperature.c: 23: ;
  3273                           ;temperature.c: 24: }while(--z);
  3274  13E3  3001               	movlw	1
  3275  13E4  02F3               	subwf	tempDelay@z,f
  3276  13E5  1D03               	btfss	3,2
  3277  13E6  2BE3               	goto	l2797
  3278                           
  3279                           ;temperature.c: 25: }while(--x);
  3280  13E7  3001               	movlw	1
  3281  13E8  02F2               	subwf	tempDelay@x,f
  3282  13E9  1903               	btfsc	3,2
  3283  13EA  0008               	return
  3284  13EB  2BDF               	goto	l666
  3285  13EC                     __end_of_tempDelay:	
  3286                           
  3287                           	psect	text9
  3288  0AED                     __ptext9:	
  3289 ;; *************** function _showDate *****************
  3290 ;; Defined at:
  3291 ;;		line 324 in file "main.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3305 ;;      Params:         0       0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0
  3308 ;;      Totals:         0       0       0       0       0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    3
  3312 ;; This function calls:
  3313 ;;		_Cinit
  3314 ;;		_clockInit
  3315 ;;		_displayDate
  3316 ;;		_getTime
  3317 ;;		_setTime
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _showDate
  3325  0AED                     _showDate:	
  3326                           
  3327                           ;main.c: 325: if (row == 3 && col == 2) {
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _showDate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3331  0AED  3003               	movlw	3
  3332  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0AF0  0638               	xorwf	_row,w
  3335  0AF1  0439               	iorwf	_row+1,w
  3336  0AF2  1D03               	btfss	3,2
  3337  0AF3  0008               	return
  3338  0AF4  3002               	movlw	2
  3339  0AF5  063A               	xorwf	_col,w
  3340  0AF6  043B               	iorwf	_col+1,w
  3341  0AF7  1D03               	btfss	3,2
  3342  0AF8  0008               	return
  3343                           
  3344                           ;main.c: 326: if (zoneActMode == 0 && tempChange == 0 && delayChange == 0 && timeChange 
      +                          == 0 && dateChange == 0 && zoneCheck == 0) {
  3345  0AF9  084B               	movf	_zoneActMode,w
  3346  0AFA  1D03               	btfss	3,2
  3347  0AFB  0008               	return
  3348  0AFC  0841               	movf	_tempChange,w
  3349  0AFD  1D03               	btfss	3,2
  3350  0AFE  0008               	return
  3351  0AFF  083E               	movf	_delayChange,w
  3352  0B00  1D03               	btfss	3,2
  3353  0B01  0008               	return
  3354  0B02  0840               	movf	_timeChange,w
  3355  0B03  1D03               	btfss	3,2
  3356  0B04  0008               	return
  3357  0B05  083F               	movf	_dateChange,w
  3358  0B06  1D03               	btfss	3,2
  3359  0B07  0008               	return
  3360  0B08  084A               	movf	_zoneCheck,w
  3361  0B09  1D03               	btfss	3,2
  3362  0B0A  0008               	return
  3363                           
  3364                           ;main.c: 327: clockInit();
  3365  0B0B  160A  118A  244D  120A  158A  	fcall	_clockInit
  3366                           
  3367                           ;main.c: 328: Cinit();
  3368  0B10  120A  158A  2001  120A  158A  	fcall	_Cinit
  3369                           
  3370                           ;main.c: 329: setTime();
  3371  0B15  120A  158A  22B5  120A  158A  	fcall	_setTime
  3372  0B1A                     l4797:	
  3373                           ;main.c: 330: while (1) {
  3374                           
  3375                           
  3376                           ;main.c: 331: getTime();
  3377  0B1A  120A  158A  220F  120A  158A  	fcall	_getTime
  3378                           
  3379                           ;main.c: 332: displayDate();
  3380  0B1F  120A  118A  2172  120A  158A  	fcall	_displayDate
  3381  0B24  2B1A               	goto	l4797
  3382  0B25                     __end_of_showDate:	
  3383                           
  3384                           	psect	text10
  3385  0AB5                     __ptext10:	
  3386 ;; *************** function _setTime *****************
  3387 ;; Defined at:
  3388 ;;		line 58 in file "clock.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  i               2    5[COMMON] int 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       0       0       0       0
  3403 ;;      Locals:         2       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0
  3405 ;;      Totals:         2       0       0       0       0       0
  3406 ;;Total ram usage:        2 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    1
  3409 ;; This function calls:
  3410 ;;		_writeTime
  3411 ;; This function is called by:
  3412 ;;		_showTime
  3413 ;;		_showDate
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _setTime
  3419  0AB5                     _setTime:	
  3420                           
  3421                           ;clock.c: 60: RB5 = 1;
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _setTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3425  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0AB7  1686               	bsf	6,5	;volatile
  3428                           
  3429                           ;clock.c: 61: writeTime(0xbe);
  3430  0AB8  30BE               	movlw	190
  3431  0AB9  120A  158A  2176  120A  158A  	fcall	_writeTime
  3432                           
  3433                           ;clock.c: 62: for(int i = 0; i < 8; ++i)
  3434  0ABE  01F5               	clrf	setTime@i
  3435  0ABF  01F6               	clrf	setTime@i+1
  3436  0AC0  0876               	movf	setTime@i+1,w
  3437  0AC1  3A80               	xorlw	128
  3438  0AC2  00FF               	movwf	127
  3439  0AC3  3080               	movlw	128
  3440  0AC4  027F               	subwf	127,w
  3441  0AC5  1D03               	skipz
  3442  0AC6  2AC9               	goto	u3555
  3443  0AC7  3008               	movlw	8
  3444  0AC8  0275               	subwf	setTime@i,w
  3445  0AC9                     u3555:	
  3446  0AC9  1803               	btfsc	3,0
  3447  0ACA  2AE9               	goto	l604
  3448  0ACB                     l3311:	
  3449                           
  3450                           ;clock.c: 63: {
  3451                           ;clock.c: 64: writeTime(table[i]);
  3452  0ACB  0875               	movf	setTime@i,w
  3453  0ACC  3E01               	addlw	low ((_table-__stringbase)| (0+32768))
  3454  0ACD  0084               	movwf	4
  3455  0ACE  160A  118A  2000  120A  158A  	fcall	stringdir
  3456  0AD3  120A  158A  2176  120A  158A  	fcall	_writeTime
  3457  0AD8  3001               	movlw	1
  3458  0AD9  07F5               	addwf	setTime@i,f
  3459  0ADA  1803               	skipnc
  3460  0ADB  0AF6               	incf	setTime@i+1,f
  3461  0ADC  3000               	movlw	0
  3462  0ADD  07F6               	addwf	setTime@i+1,f
  3463  0ADE  0876               	movf	setTime@i+1,w
  3464  0ADF  3A80               	xorlw	128
  3465  0AE0  00FF               	movwf	127
  3466  0AE1  3080               	movlw	128
  3467  0AE2  027F               	subwf	127,w
  3468  0AE3  1D03               	skipz
  3469  0AE4  2AE7               	goto	u3565
  3470  0AE5  3008               	movlw	8
  3471  0AE6  0275               	subwf	setTime@i,w
  3472  0AE7                     u3565:	
  3473  0AE7  1C03               	skipc
  3474  0AE8  2ACB               	goto	l3311
  3475  0AE9                     l604:	
  3476                           
  3477                           ;clock.c: 65: }
  3478                           ;clock.c: 66: RB5 = 0;
  3479  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0AEB  1286               	bcf	6,5	;volatile
  3482  0AEC  0008               	return
  3483  0AED                     __end_of_setTime:	
  3484                           
  3485                           	psect	text11
  3486  0A0F                     __ptext11:	
  3487 ;; *************** function _getTime *****************
  3488 ;; Defined at:
  3489 ;;		line 71 in file "clock.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  i               2    6[COMMON] int 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0       0
  3504 ;;      Locals:         2       0       0       0       0       0
  3505 ;;      Temps:          1       0       0       0       0       0
  3506 ;;      Totals:         3       0       0       0       0       0
  3507 ;;Total ram usage:        3 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    1
  3510 ;; This function calls:
  3511 ;;		_readTime
  3512 ;;		_writeTime
  3513 ;; This function is called by:
  3514 ;;		_showTime
  3515 ;;		_showDate
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function _getTime
  3521  0A0F                     _getTime:	
  3522                           
  3523                           ;clock.c: 73: RB5 = 1;
  3524                           
  3525                           ;incstack = 0
  3526                           ; Regs used in _getTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3527  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0A11  1686               	bsf	6,5	;volatile
  3530                           
  3531                           ;clock.c: 74: writeTime(0xbf);
  3532  0A12  30BF               	movlw	191
  3533  0A13  120A  158A  2176  120A  158A  	fcall	_writeTime
  3534                           
  3535                           ;clock.c: 75: for(int i = 0; i < 7; ++i)
  3536  0A18  01F6               	clrf	getTime@i
  3537  0A19  01F7               	clrf	getTime@i+1
  3538  0A1A  0877               	movf	getTime@i+1,w
  3539  0A1B  3A80               	xorlw	128
  3540  0A1C  00FF               	movwf	127
  3541  0A1D  3080               	movlw	128
  3542  0A1E  027F               	subwf	127,w
  3543  0A1F  1D03               	skipz
  3544  0A20  2A23               	goto	u3575
  3545  0A21  3007               	movlw	7
  3546  0A22  0276               	subwf	getTime@i,w
  3547  0A23                     u3575:	
  3548  0A23  1803               	btfsc	3,0
  3549  0A24  2A42               	goto	l609
  3550  0A25                     l3327:	
  3551                           
  3552                           ;clock.c: 76: {
  3553                           ;clock.c: 77: table1[i]=readTime();
  3554  0A25  120A  158A  23D1  120A  158A  	fcall	_readTime
  3555  0A2A  00F5               	movwf	??_getTime
  3556  0A2B  0876               	movf	getTime@i,w
  3557  0A2C  3E31               	addlw	(low (_table1| 0))& (0+255)
  3558  0A2D  0084               	movwf	4
  3559  0A2E  0875               	movf	??_getTime,w
  3560  0A2F  1383               	bcf	3,7	;select IRP bank0
  3561  0A30  0080               	movwf	0
  3562  0A31  3001               	movlw	1
  3563  0A32  07F6               	addwf	getTime@i,f
  3564  0A33  1803               	skipnc
  3565  0A34  0AF7               	incf	getTime@i+1,f
  3566  0A35  3000               	movlw	0
  3567  0A36  07F7               	addwf	getTime@i+1,f
  3568  0A37  0877               	movf	getTime@i+1,w
  3569  0A38  3A80               	xorlw	128
  3570  0A39  00FF               	movwf	127
  3571  0A3A  3080               	movlw	128
  3572  0A3B  027F               	subwf	127,w
  3573  0A3C  1D03               	skipz
  3574  0A3D  2A40               	goto	u3585
  3575  0A3E  3007               	movlw	7
  3576  0A3F  0276               	subwf	getTime@i,w
  3577  0A40                     u3585:	
  3578  0A40  1C03               	skipc
  3579  0A41  2A25               	goto	l3327
  3580  0A42                     l609:	
  3581                           
  3582                           ;clock.c: 78: }
  3583                           ;clock.c: 79: RB5 = 0;
  3584  0A42  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0A43  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0A44  1286               	bcf	6,5	;volatile
  3587  0A45  0008               	return
  3588  0A46                     __end_of_getTime:	
  3589                           
  3590                           	psect	text12
  3591  0BD1                     __ptext12:	
  3592 ;; *************** function _readTime *****************
  3593 ;; Defined at:
  3594 ;;		line 42 in file "clock.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  j               2    2[COMMON] int 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      unsigned char 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, btemp+1
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       0       0       0       0       0
  3609 ;;      Locals:         2       0       0       0       0       0
  3610 ;;      Temps:          2       0       0       0       0       0
  3611 ;;      Totals:         4       0       0       0       0       0
  3612 ;;Total ram usage:        4 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_getTime
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _readTime
  3623  0BD1                     _readTime:	
  3624                           
  3625                           ;clock.c: 45: TRISB4=1;
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _readTime: [wreg+status,2+status,0+btemp+1]
  3629  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  3631  0BD3  1606               	bsf	6,4	;volatile
  3632                           
  3633                           ;clock.c: 46: for(int j = 0; j < 8; j++)
  3634  0BD4  01F2               	clrf	readTime@j
  3635  0BD5  01F3               	clrf	readTime@j+1
  3636  0BD6  0873               	movf	readTime@j+1,w
  3637  0BD7  3A80               	xorlw	128
  3638  0BD8  00FF               	movwf	127
  3639  0BD9  3080               	movlw	128
  3640  0BDA  027F               	subwf	127,w
  3641  0BDB  1D03               	skipz
  3642  0BDC  2BDF               	goto	u2955
  3643  0BDD  3008               	movlw	8
  3644  0BDE  0272               	subwf	readTime@j,w
  3645  0BDF                     u2955:	
  3646  0BDF  1803               	btfsc	3,0
  3647  0BE0  2C06               	goto	l599
  3648  0BE1                     l598:	
  3649                           
  3650                           ;clock.c: 47: {
  3651                           ;clock.c: 48: RB0=0;
  3652  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0BE3  1006               	bcf	6,0	;volatile
  3655                           
  3656                           ;clock.c: 49: time_rx=time_rx>>1;
  3657  0BE4  0830               	movf	48,w
  3658  0BE5  00F0               	movwf	??_readTime
  3659  0BE6  1003               	clrc
  3660  0BE7  0C70               	rrf	??_readTime,w
  3661  0BE8  00F1               	movwf	??_readTime+1
  3662  0BE9  0871               	movf	??_readTime+1,w
  3663  0BEA  00B0               	movwf	48
  3664                           
  3665                           ;clock.c: 50: time_rx7=RB4;
  3666  0BEB  1E06               	btfss	6,4	;volatile
  3667  0BEC  2BF1               	goto	u2960
  3668  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0BEF  17B0               	bsf	48,7	;volatile
  3671  0BF0  2BF4               	goto	l2869
  3672  0BF1                     u2960:	
  3673  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  3675  0BF3  13B0               	bcf	48,7	;volatile
  3676  0BF4                     l2869:	
  3677                           
  3678                           ;clock.c: 51: RB0=1;
  3679  0BF4  1406               	bsf	6,0	;volatile
  3680  0BF5  3001               	movlw	1
  3681  0BF6  07F2               	addwf	readTime@j,f
  3682  0BF7  1803               	skipnc
  3683  0BF8  0AF3               	incf	readTime@j+1,f
  3684  0BF9  3000               	movlw	0
  3685  0BFA  07F3               	addwf	readTime@j+1,f
  3686  0BFB  0873               	movf	readTime@j+1,w
  3687  0BFC  3A80               	xorlw	128
  3688  0BFD  00FF               	movwf	127
  3689  0BFE  3080               	movlw	128
  3690  0BFF  027F               	subwf	127,w
  3691  0C00  1D03               	skipz
  3692  0C01  2C04               	goto	u2985
  3693  0C02  3008               	movlw	8
  3694  0C03  0272               	subwf	readTime@j,w
  3695  0C04                     u2985:	
  3696  0C04  1C03               	skipc
  3697  0C05  2BE1               	goto	l598
  3698  0C06                     l599:	
  3699                           
  3700                           ;clock.c: 52: }
  3701                           ;clock.c: 53: TRISB4=0;
  3702  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  3703  0C07  1303               	bcf	3,6	;RP1=0, select bank1
  3704  0C08  1206               	bcf	6,4	;volatile
  3705                           
  3706                           ;clock.c: 54: RB0=0;
  3707  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0C0B  1006               	bcf	6,0	;volatile
  3710                           
  3711                           ;clock.c: 55: return(time_rx);
  3712  0C0C  0830               	movf	48,w
  3713  0C0D  0008               	return
  3714  0C0E                     __end_of_readTime:	
  3715                           
  3716                           	psect	text13
  3717  0172                     __ptext13:	
  3718 ;; *************** function _displayDate *****************
  3719 ;; Defined at:
  3720 ;;		line 157 in file "clock.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  i               2    0        int 
  3725 ;;  value2          1    8[BANK0h] unsigned char 
  3726 ;;  value1          1    7[BANK0h] unsigned char 
  3727 ;;  value           1    6[BANK0h] unsigned char 
  3728 ;;  hoursUnits      1    5[BANK0h] unsigned char 
  3729 ;;  hoursTens       1    4[BANK0h] unsigned char 
  3730 ;;  minutesUnits    1    3[BANK0h] unsigned char 
  3731 ;;  minutesTens     1    2[BANK0h] unsigned char 
  3732 ;;  units           1    1[BANK0h] unsigned char 
  3733 ;;  tens            1    0[BANK0h] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, pclath, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3743 ;;      Params:         0       0       0       0       0       0
  3744 ;;      Locals:         0       9       0       0       0       0
  3745 ;;      Temps:          3       0       0       0       0       0
  3746 ;;      Totals:         3       9       0       0       0       0
  3747 ;;Total ram usage:       12 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    2
  3750 ;; This function calls:
  3751 ;;		___awdiv
  3752 ;;		_buttondelay
  3753 ;;		_writeChar
  3754 ;;		_writeCmd
  3755 ;; This function is called by:
  3756 ;;		_showDate
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function _displayDate
  3762  0172                     _displayDate:	
  3763                           
  3764                           ;clock.c: 159: int i;
  3765                           ;clock.c: 161: if(row == 4 && col == 1)
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _displayDate: [wreg+status,2+status,0+pclath+cstack]
  3769  0172  3004               	movlw	4
  3770  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0175  0638               	xorwf	_row,w
  3773  0176  0439               	iorwf	_row+1,w
  3774  0177  1D03               	btfss	3,2
  3775  0178  2989               	goto	l627
  3776  0179  033A               	decf	_col,w
  3777  017A  043B               	iorwf	_col+1,w
  3778  017B  1D03               	btfss	3,2
  3779  017C  2989               	goto	l627
  3780                           
  3781                           ;clock.c: 162: {
  3782                           ;clock.c: 163: table1[0]=table1[3];
  3783  017D  0834               	movf	_table1+3,w
  3784  017E  00F9               	movwf	??_displayDate
  3785  017F  0879               	movf	??_displayDate,w
  3786  0180  00B1               	movwf	_table1
  3787                           
  3788                           ;clock.c: 164: table1[1]=table1[4];
  3789  0181  0835               	movf	_table1+4,w
  3790  0182  00F9               	movwf	??_displayDate
  3791  0183  0879               	movf	??_displayDate,w
  3792  0184  00B2               	movwf	_table1+1
  3793                           
  3794                           ;clock.c: 165: table1[2]=table1[6];
  3795  0185  0837               	movf	_table1+6,w
  3796  0186  00F9               	movwf	??_displayDate
  3797  0187  0879               	movf	??_displayDate,w
  3798  0188  00B3               	movwf	_table1+2
  3799  0189                     l627:	
  3800                           
  3801                           ;clock.c: 166: }
  3802                           ;clock.c: 168: value = table1[0];
  3803  0189  0831               	movf	_table1,w
  3804  018A  00F9               	movwf	??_displayDate
  3805  018B  0879               	movf	??_displayDate,w
  3806  018C  00D1               	movwf	_value
  3807                           
  3808                           ;clock.c: 169: if (value > 100)
  3809  018D  3065               	movlw	101
  3810  018E  0251               	subwf	_value,w
  3811  018F  1C03               	skipc
  3812  0190  29A7               	goto	l4663
  3813                           
  3814                           ;clock.c: 170: {
  3815                           ;clock.c: 171: value = value / 100;
  3816  0191  3064               	movlw	100
  3817  0192  00F0               	movwf	___awdiv@divisor
  3818  0193  3000               	movlw	0
  3819  0194  00F1               	movwf	___awdiv@divisor+1
  3820  0195  0851               	movf	_value,w
  3821  0196  00F9               	movwf	??_displayDate
  3822  0197  01FA               	clrf	??_displayDate+1
  3823  0198  0879               	movf	??_displayDate,w
  3824  0199  00F2               	movwf	___awdiv@dividend
  3825  019A  087A               	movf	??_displayDate+1,w
  3826  019B  00F3               	movwf	___awdiv@dividend+1
  3827  019C  120A  158A  2500  120A  118A  	fcall	___awdiv
  3828  01A1  0870               	movf	?___awdiv,w
  3829  01A2  00FB               	movwf	??_displayDate+2
  3830  01A3  087B               	movf	??_displayDate+2,w
  3831  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3832  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3833  01A6  00D1               	movwf	_value
  3834  01A7                     l4663:	
  3835                           
  3836                           ;clock.c: 172: }
  3837                           ;clock.c: 174: char value = table1[3];
  3838  01A7  0834               	movf	_table1+3,w
  3839  01A8  00F9               	movwf	??_displayDate
  3840  01A9  0879               	movf	??_displayDate,w
  3841  01AA  00D8               	movwf	displayDate@value
  3842                           
  3843                           ;clock.c: 175: char tens = (value >> 4)&0x07;
  3844  01AB  0858               	movf	displayDate@value,w
  3845  01AC  00F9               	movwf	??_displayDate
  3846  01AD  3004               	movlw	4
  3847  01AE                     u5975:	
  3848  01AE  1003               	clrc
  3849  01AF  0CF9               	rrf	??_displayDate,f
  3850  01B0  3EFF               	addlw	-1
  3851  01B1  1D03               	skipz
  3852  01B2  29AE               	goto	u5975
  3853  01B3  0879               	movf	??_displayDate,w
  3854  01B4  3907               	andlw	7
  3855  01B5  00FA               	movwf	??_displayDate+1
  3856  01B6  087A               	movf	??_displayDate+1,w
  3857  01B7  00D2               	movwf	displayDate@tens
  3858                           
  3859                           ;clock.c: 176: char units = (value & 0x0f);
  3860  01B8  0858               	movf	displayDate@value,w
  3861  01B9  390F               	andlw	15
  3862  01BA  00F9               	movwf	??_displayDate
  3863  01BB  0879               	movf	??_displayDate,w
  3864  01BC  00D3               	movwf	displayDate@units
  3865                           
  3866                           ;clock.c: 178: char value1 = table1[4];
  3867  01BD  0835               	movf	_table1+4,w
  3868  01BE  00F9               	movwf	??_displayDate
  3869  01BF  0879               	movf	??_displayDate,w
  3870  01C0  00D9               	movwf	displayDate@value1
  3871                           
  3872                           ;clock.c: 179: char minutesTens = (value1 >> 4)&0x07;
  3873  01C1  0859               	movf	displayDate@value1,w
  3874  01C2  00F9               	movwf	??_displayDate
  3875  01C3  3004               	movlw	4
  3876  01C4                     u5985:	
  3877  01C4  1003               	clrc
  3878  01C5  0CF9               	rrf	??_displayDate,f
  3879  01C6  3EFF               	addlw	-1
  3880  01C7  1D03               	skipz
  3881  01C8  29C4               	goto	u5985
  3882  01C9  0879               	movf	??_displayDate,w
  3883  01CA  3907               	andlw	7
  3884  01CB  00FA               	movwf	??_displayDate+1
  3885  01CC  087A               	movf	??_displayDate+1,w
  3886  01CD  00D4               	movwf	displayDate@minutesTens
  3887                           
  3888                           ;clock.c: 180: char minutesUnits = (value1 & 0x0f);
  3889  01CE  0859               	movf	displayDate@value1,w
  3890  01CF  390F               	andlw	15
  3891  01D0  00F9               	movwf	??_displayDate
  3892  01D1  0879               	movf	??_displayDate,w
  3893  01D2  00D5               	movwf	displayDate@minutesUnits
  3894                           
  3895                           ;clock.c: 182: char value2 = table1[6];
  3896  01D3  0837               	movf	_table1+6,w
  3897  01D4  00F9               	movwf	??_displayDate
  3898  01D5  0879               	movf	??_displayDate,w
  3899  01D6  00DA               	movwf	displayDate@value2
  3900                           
  3901                           ;clock.c: 183: char hoursTens = (value2 >> 4)&0x07;
  3902  01D7  085A               	movf	displayDate@value2,w
  3903  01D8  00F9               	movwf	??_displayDate
  3904  01D9  3004               	movlw	4
  3905  01DA                     u5995:	
  3906  01DA  1003               	clrc
  3907  01DB  0CF9               	rrf	??_displayDate,f
  3908  01DC  3EFF               	addlw	-1
  3909  01DD  1D03               	skipz
  3910  01DE  29DA               	goto	u5995
  3911  01DF  0879               	movf	??_displayDate,w
  3912  01E0  3907               	andlw	7
  3913  01E1  00FA               	movwf	??_displayDate+1
  3914  01E2  087A               	movf	??_displayDate+1,w
  3915  01E3  00D6               	movwf	displayDate@hoursTens
  3916                           
  3917                           ;clock.c: 184: char hoursUnits = (value2 & 0x0f);
  3918  01E4  085A               	movf	displayDate@value2,w
  3919  01E5  390F               	andlw	15
  3920  01E6  00F9               	movwf	??_displayDate
  3921  01E7  0879               	movf	??_displayDate,w
  3922  01E8  00D7               	movwf	displayDate@hoursUnits
  3923                           
  3924                           ;clock.c: 186: __nop();
  3925  01E9  0000               	nop
  3926                           
  3927                           ;clock.c: 187: writeChar('\'' + tens - 30 + '\'');
  3928  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3929  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3930  01EC  0852               	movf	displayDate@tens,w
  3931  01ED  3E30               	addlw	48
  3932  01EE  160A  118A  2535  120A  118A  	fcall	_writeChar
  3933                           
  3934                           ;clock.c: 188: writeChar('\'' + units - 30 + '\'');
  3935  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3936  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3937  01F5  0853               	movf	displayDate@units,w
  3938  01F6  3E30               	addlw	48
  3939  01F7  160A  118A  2535  120A  118A  	fcall	_writeChar
  3940                           
  3941                           ;clock.c: 189: writeChar(':');
  3942  01FC  303A               	movlw	58
  3943  01FD  160A  118A  2535  120A  118A  	fcall	_writeChar
  3944                           
  3945                           ;clock.c: 190: writeChar('\'' + minutesTens - 30 + '\'');
  3946  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0203  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0204  0854               	movf	displayDate@minutesTens,w
  3949  0205  3E30               	addlw	48
  3950  0206  160A  118A  2535  120A  118A  	fcall	_writeChar
  3951                           
  3952                           ;clock.c: 191: writeChar('\'' + minutesUnits - 30 + '\'');
  3953  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3954  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3955  020D  0855               	movf	displayDate@minutesUnits,w
  3956  020E  3E30               	addlw	48
  3957  020F  160A  118A  2535  120A  118A  	fcall	_writeChar
  3958                           
  3959                           ;clock.c: 192: writeChar(':');
  3960  0214  303A               	movlw	58
  3961  0215  160A  118A  2535  120A  118A  	fcall	_writeChar
  3962                           
  3963                           ;clock.c: 193: writeChar('\'' + hoursTens - 30 + '\'');
  3964  021A  1283               	bcf	3,5	;RP0=0, select bank0
  3965  021B  1303               	bcf	3,6	;RP1=0, select bank0
  3966  021C  0856               	movf	displayDate@hoursTens,w
  3967  021D  3E30               	addlw	48
  3968  021E  160A  118A  2535  120A  118A  	fcall	_writeChar
  3969                           
  3970                           ;clock.c: 194: writeChar('\'' + hoursUnits - 30 + '\'');
  3971  0223  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0224  1303               	bcf	3,6	;RP1=0, select bank0
  3973  0225  0857               	movf	displayDate@hoursUnits,w
  3974  0226  3E30               	addlw	48
  3975  0227  160A  118A  2535  120A  118A  	fcall	_writeChar
  3976                           
  3977                           ;clock.c: 195: buttondelay();
  3978  022C  160A  118A  241C  120A  118A  	fcall	_buttondelay
  3979                           
  3980                           ;clock.c: 196: buttondelay();
  3981  0231  160A  118A  241C  120A  118A  	fcall	_buttondelay
  3982                           
  3983                           ;clock.c: 197: writeCmd(0x01);
  3984  0236  3001               	movlw	1
  3985  0237  160A  118A  2513   	fcall	_writeCmd
  3986  023A  0008               	return
  3987  023B                     __end_of_displayDate:	
  3988                           
  3989                           	psect	text14
  3990  141C                     __ptext14:	
  3991 ;; *************** function _buttondelay *****************
  3992 ;; Defined at:
  3993 ;;		line 121 in file "buttons.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  i               2    0[COMMON] unsigned int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4007 ;;      Params:         0       0       0       0       0       0
  4008 ;;      Locals:         2       0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0
  4010 ;;      Totals:         2       0       0       0       0       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_display
  4017 ;;		_displayDate
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function _buttondelay
  4023  141C                     _buttondelay:	
  4024                           
  4025                           ;buttons.c: 122: for (unsigned i=0; i<500; i++);
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in _buttondelay: [wreg+status,2]
  4029  141C  01F0               	clrf	buttondelay@i
  4030  141D  01F1               	clrf	buttondelay@i+1
  4031  141E                     L3:	
  4032  141E  3001               	movlw	1
  4033  141F  0271               	subwf	buttondelay@i+1,w
  4034  1420  30F4               	movlw	244
  4035  1421  1903               	skipnz
  4036  1422  0270               	subwf	buttondelay@i,w
  4037  1423  1803               	btfsc	3,0
  4038  1424  0008               	return
  4039  1425  3001               	movlw	1
  4040  1426  07F0               	addwf	buttondelay@i,f
  4041  1427  1803               	skipnc
  4042  1428  0AF1               	incf	buttondelay@i+1,f
  4043  1429  3000               	movlw	0
  4044  142A  07F1               	addwf	buttondelay@i+1,f
  4045  142B  2C1E               	goto	L3
  4046  142C                     __end_of_buttondelay:	
  4047                           
  4048                           	psect	text15
  4049  144D                     __ptext15:	
  4050 ;; *************** function _clockInit *****************
  4051 ;; Defined at:
  4052 ;;		line 87 in file "clock.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    1
  4073 ;; This function calls:
  4074 ;;		_writeTime
  4075 ;; This function is called by:
  4076 ;;		_showTime
  4077 ;;		_showDate
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function _clockInit
  4083  144D                     _clockInit:	
  4084                           
  4085                           ;clock.c: 89: RB0 = 0;
  4086                           
  4087                           ;incstack = 0
  4088                           ; Regs used in _clockInit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4089  144D  1283               	bcf	3,5	;RP0=0, select bank0
  4090  144E  1303               	bcf	3,6	;RP1=0, select bank0
  4091  144F  1006               	bcf	6,0	;volatile
  4092                           
  4093                           ;clock.c: 90: RB5 = 0;
  4094  1450  1286               	bcf	6,5	;volatile
  4095                           
  4096                           ;clock.c: 91: RB5 = 1;
  4097  1451  1686               	bsf	6,5	;volatile
  4098                           
  4099                           ;clock.c: 92: writeTime(0x8E);
  4100  1452  308E               	movlw	142
  4101  1453  120A  158A  2176  160A  118A  	fcall	_writeTime
  4102                           
  4103                           ;clock.c: 93: writeTime(0);
  4104  1458  3000               	movlw	0
  4105  1459  120A  158A  2176   	fcall	_writeTime
  4106                           
  4107                           ;clock.c: 94: RB5 = 0;
  4108  145C  1283               	bcf	3,5	;RP0=0, select bank0
  4109  145D  1303               	bcf	3,6	;RP1=0, select bank0
  4110  145E  1286               	bcf	6,5	;volatile
  4111  145F  0008               	return
  4112  1460                     __end_of_clockInit:	
  4113                           
  4114                           	psect	text16
  4115  0976                     __ptext16:	
  4116 ;; *************** function _writeTime *****************
  4117 ;; Defined at:
  4118 ;;		line 26 in file "clock.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  timeClock       1    wreg     unsigned char 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  timeClock       1    4[COMMON] unsigned char 
  4123 ;;  i               2    2[COMMON] int 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, btemp+1
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4133 ;;      Params:         0       0       0       0       0       0
  4134 ;;      Locals:         3       0       0       0       0       0
  4135 ;;      Temps:          2       0       0       0       0       0
  4136 ;;      Totals:         5       0       0       0       0       0
  4137 ;;Total ram usage:        5 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_setTime
  4143 ;;		_getTime
  4144 ;;		_clockInit
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _writeTime
  4150  0976                     _writeTime:	
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _writeTime: [wreg+status,2+status,0+btemp+1]
  4154                           ;writeTime@timeClock stored from wreg
  4155  0976  00F4               	movwf	writeTime@timeClock
  4156                           
  4157                           ;clock.c: 28: for(int i = 0; i < 8; ++i)
  4158  0977  01F2               	clrf	writeTime@i
  4159  0978  01F3               	clrf	writeTime@i+1
  4160  0979  0873               	movf	writeTime@i+1,w
  4161  097A  3A80               	xorlw	128
  4162  097B  00FF               	movwf	127
  4163  097C  3080               	movlw	128
  4164  097D  027F               	subwf	127,w
  4165  097E  1D03               	skipz
  4166  097F  2982               	goto	u2925
  4167  0980  3008               	movlw	8
  4168  0981  0272               	subwf	writeTime@i,w
  4169  0982                     u2925:	
  4170  0982  1803               	btfsc	3,0
  4171  0983  29A3               	goto	l593
  4172  0984                     l592:	
  4173                           
  4174                           ;clock.c: 29: {
  4175                           ;clock.c: 30: RB4 = 0;
  4176  0984  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0985  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0986  1206               	bcf	6,4	;volatile
  4179                           
  4180                           ;clock.c: 31: RB0 = 0;
  4181  0987  1006               	bcf	6,0	;volatile
  4182                           
  4183                           ;clock.c: 32: if(timeClock & 0x01)
  4184  0988  1874               	btfsc	writeTime@timeClock,0
  4185                           
  4186                           ;clock.c: 33: {
  4187                           ;clock.c: 34: RB4 = 1;
  4188  0989  1606               	bsf	6,4	;volatile
  4189                           
  4190                           ;clock.c: 35: }
  4191                           ;clock.c: 36: timeClock = timeClock>> 1;
  4192  098A  0874               	movf	writeTime@timeClock,w
  4193  098B  00F0               	movwf	??_writeTime
  4194  098C  1003               	clrc
  4195  098D  0C70               	rrf	??_writeTime,w
  4196  098E  00F1               	movwf	??_writeTime+1
  4197  098F  0871               	movf	??_writeTime+1,w
  4198  0990  00F4               	movwf	writeTime@timeClock
  4199                           
  4200                           ;clock.c: 37: RB0 = 1;
  4201  0991  1406               	bsf	6,0	;volatile
  4202  0992  3001               	movlw	1
  4203  0993  07F2               	addwf	writeTime@i,f
  4204  0994  1803               	skipnc
  4205  0995  0AF3               	incf	writeTime@i+1,f
  4206  0996  3000               	movlw	0
  4207  0997  07F3               	addwf	writeTime@i+1,f
  4208  0998  0873               	movf	writeTime@i+1,w
  4209  0999  3A80               	xorlw	128
  4210  099A  00FF               	movwf	127
  4211  099B  3080               	movlw	128
  4212  099C  027F               	subwf	127,w
  4213  099D  1D03               	skipz
  4214  099E  29A1               	goto	u2945
  4215  099F  3008               	movlw	8
  4216  09A0  0272               	subwf	writeTime@i,w
  4217  09A1                     u2945:	
  4218  09A1  1C03               	skipc
  4219  09A2  2984               	goto	l592
  4220  09A3                     l593:	
  4221                           
  4222                           ;clock.c: 38: }
  4223                           ;clock.c: 39: RB0 = 0;
  4224  09A3  1283               	bcf	3,5	;RP0=0, select bank0
  4225  09A4  1303               	bcf	3,6	;RP1=0, select bank0
  4226  09A5  1006               	bcf	6,0	;volatile
  4227  09A6  0008               	return
  4228  09A7                     __end_of_writeTime:	
  4229                           
  4230                           	psect	text17
  4231  0801                     __ptext17:	
  4232 ;; *************** function _Cinit *****************
  4233 ;; Defined at:
  4234 ;;		line 98 in file "clock.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		_writeCmd
  4257 ;; This function is called by:
  4258 ;;		_showTime
  4259 ;;		_showDate
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           
  4264                           ;psect for function _Cinit
  4265  0801                     _Cinit:	
  4266                           
  4267                           ;clock.c: 101: TRISA = 0x00;
  4268                           
  4269                           ;incstack = 0
  4270                           ; Regs used in _Cinit: [wreg+status,2+status,0+pclath+cstack]
  4271  0801  1683               	bsf	3,5	;RP0=1, select bank1
  4272  0802  1303               	bcf	3,6	;RP1=0, select bank1
  4273  0803  0185               	clrf	5	;volatile
  4274                           
  4275                           ;clock.c: 102: PORTA = 0xFF;
  4276  0804  30FF               	movlw	255
  4277  0805  1283               	bcf	3,5	;RP0=0, select bank0
  4278  0806  1303               	bcf	3,6	;RP1=0, select bank0
  4279  0807  0085               	movwf	5	;volatile
  4280                           
  4281                           ;clock.c: 104: TRISD = 0x00;
  4282  0808  1683               	bsf	3,5	;RP0=1, select bank1
  4283  0809  1303               	bcf	3,6	;RP1=0, select bank1
  4284  080A  0188               	clrf	8	;volatile
  4285                           
  4286                           ;clock.c: 105: PORTD = 0xFF;
  4287  080B  30FF               	movlw	255
  4288  080C  1283               	bcf	3,5	;RP0=0, select bank0
  4289  080D  1303               	bcf	3,6	;RP1=0, select bank0
  4290  080E  0088               	movwf	8	;volatile
  4291                           
  4292                           ;clock.c: 106: TRISB = 0x02;
  4293  080F  3002               	movlw	2
  4294  0810  1683               	bsf	3,5	;RP0=1, select bank1
  4295  0811  1303               	bcf	3,6	;RP1=0, select bank1
  4296  0812  0086               	movwf	6	;volatile
  4297                           
  4298                           ;clock.c: 107: ADCON1 = 0x06;
  4299  0813  3006               	movlw	6
  4300  0814  009F               	movwf	31	;volatile
  4301                           
  4302                           ;clock.c: 108: writeCmd(0x0f);
  4303  0815  300F               	movlw	15
  4304  0816  160A  118A  2513  120A  158A  	fcall	_writeCmd
  4305                           
  4306                           ;clock.c: 109: writeCmd(0x01);
  4307  081B  3001               	movlw	1
  4308  081C  160A  118A  2513  120A  158A  	fcall	_writeCmd
  4309                           
  4310                           ;clock.c: 110: writeCmd(0x38);
  4311  0821  3038               	movlw	56
  4312  0822  160A  118A  2513   	fcall	_writeCmd
  4313  0825  0008               	return
  4314  0826                     __end_of_Cinit:	
  4315                           
  4316                           	psect	text18
  4317  139E                     __ptext18:	
  4318 ;; *************** function _init *****************
  4319 ;; Defined at:
  4320 ;;		line 816 in file "main.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		status,2
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4334 ;;      Params:         0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _init
  4349  139E                     _init:	
  4350                           
  4351                           ;main.c: 817: TRISB = 0;
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _init: [status,2]
  4355  139E  1683               	bsf	3,5	;RP0=1, select bank1
  4356  139F  1303               	bcf	3,6	;RP1=0, select bank1
  4357  13A0  0186               	clrf	6	;volatile
  4358  13A1  0008               	return
  4359  13A2                     __end_of_init:	
  4360                           
  4361                           	psect	text19
  4362  09A7                     __ptext19:	
  4363 ;; *************** function _delaySeconds *****************
  4364 ;; Defined at:
  4365 ;;		line 9 in file "main.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  d               2    0[COMMON] int 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  j               2    5[COMMON] int 
  4370 ;;  i               2    3[COMMON] int 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, btemp+1
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4380 ;;      Params:         2       0       0       0       0       0
  4381 ;;      Locals:         4       0       0       0       0       0
  4382 ;;      Temps:          1       0       0       0       0       0
  4383 ;;      Totals:         7       0       0       0       0       0
  4384 ;;Total ram usage:        7 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_main
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _delaySeconds
  4395  09A7                     _delaySeconds:	
  4396                           
  4397                           ;main.c: 12: for(int i=0;i<d;i++){
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _delaySeconds: [wreg+status,2+btemp+1]
  4401  09A7  01F3               	clrf	delaySeconds@i
  4402  09A8  01F4               	clrf	delaySeconds@i+1
  4403  09A9                     l69:	
  4404  09A9  0874               	movf	delaySeconds@i+1,w
  4405  09AA  3A80               	xorlw	128
  4406  09AB  00F2               	movwf	??_delaySeconds
  4407  09AC  0871               	movf	delaySeconds@d+1,w
  4408  09AD  3A80               	xorlw	128
  4409  09AE  0272               	subwf	??_delaySeconds,w
  4410  09AF  1D03               	skipz
  4411  09B0  29B3               	goto	u3745
  4412  09B1  0870               	movf	delaySeconds@d,w
  4413  09B2  0273               	subwf	delaySeconds@i,w
  4414  09B3                     u3745:	
  4415  09B3  1803               	btfsc	3,0
  4416  09B4  0008               	return
  4417                           
  4418                           ;main.c: 13: for(int j=0;j<25000;j++);
  4419  09B5  01F5               	clrf	delaySeconds@j
  4420  09B6  01F6               	clrf	delaySeconds@j+1
  4421  09B7  0876               	movf	delaySeconds@j+1,w
  4422  09B8  3A80               	xorlw	128
  4423  09B9  00FF               	movwf	127
  4424  09BA  30E1               	movlw	225
  4425  09BB  027F               	subwf	127,w
  4426  09BC  1D03               	skipz
  4427  09BD  29C0               	goto	u3725
  4428  09BE  30A8               	movlw	168
  4429  09BF  0275               	subwf	delaySeconds@j,w
  4430  09C0                     u3725:	
  4431  09C0  1803               	btfsc	3,0
  4432  09C1  29D3               	goto	l3471
  4433  09C2                     l3467:	
  4434  09C2  3001               	movlw	1
  4435  09C3  07F5               	addwf	delaySeconds@j,f
  4436  09C4  1803               	skipnc
  4437  09C5  0AF6               	incf	delaySeconds@j+1,f
  4438  09C6  3000               	movlw	0
  4439  09C7  07F6               	addwf	delaySeconds@j+1,f
  4440  09C8  0876               	movf	delaySeconds@j+1,w
  4441  09C9  3A80               	xorlw	128
  4442  09CA  00FF               	movwf	127
  4443  09CB  30E1               	movlw	225
  4444  09CC  027F               	subwf	127,w
  4445  09CD  1D03               	skipz
  4446  09CE  29D1               	goto	u3735
  4447  09CF  30A8               	movlw	168
  4448  09D0  0275               	subwf	delaySeconds@j,w
  4449  09D1                     u3735:	
  4450  09D1  1C03               	skipc
  4451  09D2  29C2               	goto	l3467
  4452  09D3                     l3471:	
  4453  09D3  3001               	movlw	1
  4454  09D4  07F3               	addwf	delaySeconds@i,f
  4455  09D5  1803               	skipnc
  4456  09D6  0AF4               	incf	delaySeconds@i+1,f
  4457  09D7  3000               	movlw	0
  4458  09D8  07F4               	addwf	delaySeconds@i+1,f
  4459  09D9  29A9               	goto	l69
  4460  09DA                     __end_of_delaySeconds:	
  4461                           
  4462                           	psect	text20
  4463  0CA9                     __ptext20:	
  4464 ;; *************** function _deactivateZones *****************
  4465 ;; Defined at:
  4466 ;;		line 462 in file "main.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4480 ;;      Params:         0       0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    4
  4487 ;; This function calls:
  4488 ;;		_zone0Deactivate
  4489 ;;		_zone1Deactivate
  4490 ;;		_zone2Deactivate
  4491 ;;		_zone3Deactivate
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _deactivateZones
  4499  0CA9                     _deactivateZones:	
  4500                           
  4501                           ;main.c: 463: if (zoneActMode == 1) {
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in _deactivateZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4505  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  4506  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  4507  0CAB  034B               	decf	_zoneActMode,w
  4508  0CAC  1D03               	btfss	3,2
  4509  0CAD  0008               	return
  4510                           
  4511                           ;main.c: 464: if (row == 1 && col == 3) {
  4512  0CAE  0338               	decf	_row,w
  4513  0CAF  0439               	iorwf	_row+1,w
  4514  0CB0  1D03               	btfss	3,2
  4515  0CB1  2CC2               	goto	l4943
  4516  0CB2  3003               	movlw	3
  4517  0CB3  063A               	xorwf	_col,w
  4518  0CB4  043B               	iorwf	_col+1,w
  4519  0CB5  1D03               	btfss	3,2
  4520  0CB6  2CC2               	goto	l4943
  4521                           
  4522                           ;main.c: 465: if (zone0On == 1) {
  4523  0CB7  0349               	decf	_zone0On,w
  4524  0CB8  1D03               	btfss	3,2
  4525  0CB9  2CC2               	goto	l4943
  4526                           
  4527                           ;main.c: 466: zone0Deactivate();
  4528  0CBA  120A  158A  20F8  120A  158A  	fcall	_zone0Deactivate
  4529                           
  4530                           ;main.c: 467: zone0On = 0;
  4531  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0CC1  01C9               	clrf	_zone0On
  4534  0CC2                     l4943:	
  4535                           
  4536                           ;main.c: 468: }
  4537                           ;main.c: 469: }
  4538                           ;main.c: 470: if (row == 2 && col == 3) {
  4539  0CC2  3002               	movlw	2
  4540  0CC3  0638               	xorwf	_row,w
  4541  0CC4  0439               	iorwf	_row+1,w
  4542  0CC5  1D03               	btfss	3,2
  4543  0CC6  2CD7               	goto	l4953
  4544  0CC7  3003               	movlw	3
  4545  0CC8  063A               	xorwf	_col,w
  4546  0CC9  043B               	iorwf	_col+1,w
  4547  0CCA  1D03               	btfss	3,2
  4548  0CCB  2CD7               	goto	l4953
  4549                           
  4550                           ;main.c: 471: if (zone1On == 1) {
  4551  0CCC  0348               	decf	_zone1On,w
  4552  0CCD  1D03               	btfss	3,2
  4553  0CCE  2CD7               	goto	l4953
  4554                           
  4555                           ;main.c: 472: zone1Deactivate();
  4556  0CCF  120A  158A  2122  120A  158A  	fcall	_zone1Deactivate
  4557                           
  4558                           ;main.c: 473: zone1On = 0;
  4559  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0CD6  01C8               	clrf	_zone1On
  4562  0CD7                     l4953:	
  4563                           
  4564                           ;main.c: 475: }
  4565                           ;main.c: 476: }
  4566                           ;main.c: 477: if (row == 3 && col == 3) {
  4567  0CD7  3003               	movlw	3
  4568  0CD8  0638               	xorwf	_row,w
  4569  0CD9  0439               	iorwf	_row+1,w
  4570  0CDA  1D03               	btfss	3,2
  4571  0CDB  2CEC               	goto	l4963
  4572  0CDC  3003               	movlw	3
  4573  0CDD  063A               	xorwf	_col,w
  4574  0CDE  043B               	iorwf	_col+1,w
  4575  0CDF  1D03               	btfss	3,2
  4576  0CE0  2CEC               	goto	l4963
  4577                           
  4578                           ;main.c: 478: if (zone2On == 1) {
  4579  0CE1  0347               	decf	_zone2On,w
  4580  0CE2  1D03               	btfss	3,2
  4581  0CE3  2CEC               	goto	l4963
  4582                           
  4583                           ;main.c: 479: zone2Deactivate();
  4584  0CE4  120A  158A  214C  120A  158A  	fcall	_zone2Deactivate
  4585                           
  4586                           ;main.c: 480: zone2On = 0;
  4587  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0CEB  01C7               	clrf	_zone2On
  4590  0CEC                     l4963:	
  4591                           
  4592                           ;main.c: 481: }
  4593                           ;main.c: 482: }
  4594                           ;main.c: 483: if (row == 4 && col == 3) {
  4595  0CEC  3004               	movlw	4
  4596  0CED  0638               	xorwf	_row,w
  4597  0CEE  0439               	iorwf	_row+1,w
  4598  0CEF  1D03               	btfss	3,2
  4599  0CF0  0008               	return
  4600  0CF1  3003               	movlw	3
  4601  0CF2  063A               	xorwf	_col,w
  4602  0CF3  043B               	iorwf	_col+1,w
  4603  0CF4  1D03               	btfss	3,2
  4604  0CF5  0008               	return
  4605                           
  4606                           ;main.c: 484: if (zone3On == 1) {
  4607  0CF6  0346               	decf	_zone3On,w
  4608  0CF7  1D03               	btfss	3,2
  4609  0CF8  0008               	return
  4610                           
  4611                           ;main.c: 485: zone3Deactivate();
  4612  0CF9  120A  118A  2006   	fcall	_zone3Deactivate
  4613                           
  4614                           ;main.c: 486: zone3On = 0;
  4615  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  4616  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  4617  0CFE  01C6               	clrf	_zone3On
  4618  0CFF  0008               	return
  4619  0D00                     __end_of_deactivateZones:	
  4620                           
  4621                           	psect	text21
  4622  0006                     __ptext21:	
  4623 ;; *************** function _zone3Deactivate *****************
  4624 ;; Defined at:
  4625 ;;		line 174 in file "main.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  message        11    0[BANK0h] unsigned char [11]
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4639 ;;      Params:         0       0       0       0       0       0
  4640 ;;      Locals:         0      11       0       0       0       0
  4641 ;;      Temps:          4       0       0       0       0       0
  4642 ;;      Totals:         4      11       0       0       0       0
  4643 ;;Total ram usage:       15 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    3
  4646 ;; This function calls:
  4647 ;;		_LCDdelay3
  4648 ;;		_clearDisplay
  4649 ;;		_resetCursor
  4650 ;;		_writeMessage
  4651 ;; This function is called by:
  4652 ;;		_deactivateZones
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _zone3Deactivate
  4658  0006                     _zone3Deactivate:	
  4659                           
  4660                           ;main.c: 175: clearDisplay ();
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in _zone3Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4664  0006  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  4665                           
  4666                           ;main.c: 176: resetCursor ();
  4667  000B  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  4668                           
  4669                           ;main.c: 177: char message[] = "Zone 3 Off";
  4670  0010  3052               	movlw	zone3Deactivate@message& (0+255)
  4671  0011  0084               	movwf	4
  4672  0012  3090               	movlw	low zone3Deactivate@F1235
  4673  0013  00F7               	movwf	??_zone3Deactivate
  4674  0014  0804               	movf	4,w
  4675  0015  00F8               	movwf	??_zone3Deactivate+1
  4676  0016  300B               	movlw	11
  4677  0017  00F9               	movwf	??_zone3Deactivate+2
  4678  0018                     u5790:	
  4679  0018  0877               	movf	??_zone3Deactivate,w
  4680  0019  0084               	movwf	4
  4681  001A  1783               	bsf	3,7	;select IRP bank3
  4682  001B  0800               	movf	0,w
  4683  001C  00FA               	movwf	??_zone3Deactivate+3
  4684  001D  0AF7               	incf	??_zone3Deactivate,f
  4685  001E  0878               	movf	??_zone3Deactivate+1,w
  4686  001F  0084               	movwf	4
  4687  0020  1383               	bcf	3,7	;select IRP bank0
  4688  0021  087A               	movf	??_zone3Deactivate+3,w
  4689  0022  0080               	movwf	0
  4690  0023  0AF8               	incf	??_zone3Deactivate+1,f
  4691  0024  0BF9               	decfsz	??_zone3Deactivate+2,f
  4692  0025  2818               	goto	u5790
  4693                           
  4694                           ;main.c: 178: writeMessage(message);
  4695  0026  3052               	movlw	(low (zone3Deactivate@message| 0))& (0+255)
  4696  0027  160A  118A  24D4  120A  118A  	fcall	_writeMessage
  4697                           
  4698                           ;main.c: 179: LCDdelay3 ();
  4699  002C  160A  118A  23FC   	fcall	_LCDdelay3
  4700  002F  0008               	return
  4701  0030                     __end_of_zone3Deactivate:	
  4702                           
  4703                           	psect	text22
  4704  094C                     __ptext22:	
  4705 ;; *************** function _zone2Deactivate *****************
  4706 ;; Defined at:
  4707 ;;		line 167 in file "main.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  message        11    0[BANK0h] unsigned char [11]
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4721 ;;      Params:         0       0       0       0       0       0
  4722 ;;      Locals:         0      11       0       0       0       0
  4723 ;;      Temps:          4       0       0       0       0       0
  4724 ;;      Totals:         4      11       0       0       0       0
  4725 ;;Total ram usage:       15 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    3
  4728 ;; This function calls:
  4729 ;;		_LCDdelay3
  4730 ;;		_clearDisplay
  4731 ;;		_resetCursor
  4732 ;;		_writeMessage
  4733 ;; This function is called by:
  4734 ;;		_deactivateZones
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           
  4739                           ;psect for function _zone2Deactivate
  4740  094C                     _zone2Deactivate:	
  4741                           
  4742                           ;main.c: 168: clearDisplay ();
  4743                           
  4744                           ;incstack = 0
  4745                           ; Regs used in _zone2Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4746  094C  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  4747                           
  4748                           ;main.c: 169: resetCursor ();
  4749  0951  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  4750                           
  4751                           ;main.c: 170: char message[] = "Zone 2 Off";
  4752  0956  3052               	movlw	zone2Deactivate@message& (0+255)
  4753  0957  0084               	movwf	4
  4754  0958  309B               	movlw	low zone2Deactivate@F1232
  4755  0959  00F7               	movwf	??_zone2Deactivate
  4756  095A  0804               	movf	4,w
  4757  095B  00F8               	movwf	??_zone2Deactivate+1
  4758  095C  300B               	movlw	11
  4759  095D  00F9               	movwf	??_zone2Deactivate+2
  4760  095E                     u5780:	
  4761  095E  0877               	movf	??_zone2Deactivate,w
  4762  095F  0084               	movwf	4
  4763  0960  1783               	bsf	3,7	;select IRP bank3
  4764  0961  0800               	movf	0,w
  4765  0962  00FA               	movwf	??_zone2Deactivate+3
  4766  0963  0AF7               	incf	??_zone2Deactivate,f
  4767  0964  0878               	movf	??_zone2Deactivate+1,w
  4768  0965  0084               	movwf	4
  4769  0966  1383               	bcf	3,7	;select IRP bank0
  4770  0967  087A               	movf	??_zone2Deactivate+3,w
  4771  0968  0080               	movwf	0
  4772  0969  0AF8               	incf	??_zone2Deactivate+1,f
  4773  096A  0BF9               	decfsz	??_zone2Deactivate+2,f
  4774  096B  295E               	goto	u5780
  4775                           
  4776                           ;main.c: 171: writeMessage(message);
  4777  096C  3052               	movlw	(low (zone2Deactivate@message| 0))& (0+255)
  4778  096D  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  4779                           
  4780                           ;main.c: 172: LCDdelay3 ();
  4781  0972  160A  118A  23FC   	fcall	_LCDdelay3
  4782  0975  0008               	return
  4783  0976                     __end_of_zone2Deactivate:	
  4784                           
  4785                           	psect	text23
  4786  0922                     __ptext23:	
  4787 ;; *************** function _zone1Deactivate *****************
  4788 ;; Defined at:
  4789 ;;		line 160 in file "main.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  message        11    0[BANK0h] unsigned char [11]
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4803 ;;      Params:         0       0       0       0       0       0
  4804 ;;      Locals:         0      11       0       0       0       0
  4805 ;;      Temps:          4       0       0       0       0       0
  4806 ;;      Totals:         4      11       0       0       0       0
  4807 ;;Total ram usage:       15 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    3
  4810 ;; This function calls:
  4811 ;;		_LCDdelay3
  4812 ;;		_clearDisplay
  4813 ;;		_resetCursor
  4814 ;;		_writeMessage
  4815 ;; This function is called by:
  4816 ;;		_deactivateZones
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _zone1Deactivate
  4822  0922                     _zone1Deactivate:	
  4823                           
  4824                           ;main.c: 161: clearDisplay ();
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _zone1Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4828  0922  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  4829                           
  4830                           ;main.c: 162: resetCursor ();
  4831  0927  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  4832                           
  4833                           ;main.c: 163: char message[] = "Zone 1 Off";
  4834  092C  3052               	movlw	zone1Deactivate@message& (0+255)
  4835  092D  0084               	movwf	4
  4836  092E  30A6               	movlw	low zone1Deactivate@F1229
  4837  092F  00F7               	movwf	??_zone1Deactivate
  4838  0930  0804               	movf	4,w
  4839  0931  00F8               	movwf	??_zone1Deactivate+1
  4840  0932  300B               	movlw	11
  4841  0933  00F9               	movwf	??_zone1Deactivate+2
  4842  0934                     u5770:	
  4843  0934  0877               	movf	??_zone1Deactivate,w
  4844  0935  0084               	movwf	4
  4845  0936  1783               	bsf	3,7	;select IRP bank3
  4846  0937  0800               	movf	0,w
  4847  0938  00FA               	movwf	??_zone1Deactivate+3
  4848  0939  0AF7               	incf	??_zone1Deactivate,f
  4849  093A  0878               	movf	??_zone1Deactivate+1,w
  4850  093B  0084               	movwf	4
  4851  093C  1383               	bcf	3,7	;select IRP bank0
  4852  093D  087A               	movf	??_zone1Deactivate+3,w
  4853  093E  0080               	movwf	0
  4854  093F  0AF8               	incf	??_zone1Deactivate+1,f
  4855  0940  0BF9               	decfsz	??_zone1Deactivate+2,f
  4856  0941  2934               	goto	u5770
  4857                           
  4858                           ;main.c: 164: writeMessage(message);
  4859  0942  3052               	movlw	(low (zone1Deactivate@message| 0))& (0+255)
  4860  0943  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  4861                           
  4862                           ;main.c: 165: LCDdelay3 ();
  4863  0948  160A  118A  23FC   	fcall	_LCDdelay3
  4864  094B  0008               	return
  4865  094C                     __end_of_zone1Deactivate:	
  4866                           
  4867                           	psect	text24
  4868  08F8                     __ptext24:	
  4869 ;; *************** function _zone0Deactivate *****************
  4870 ;; Defined at:
  4871 ;;		line 153 in file "main.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;		None
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  message        11    0[BANK0h] unsigned char [11]
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4885 ;;      Params:         0       0       0       0       0       0
  4886 ;;      Locals:         0      11       0       0       0       0
  4887 ;;      Temps:          4       0       0       0       0       0
  4888 ;;      Totals:         4      11       0       0       0       0
  4889 ;;Total ram usage:       15 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:    3
  4892 ;; This function calls:
  4893 ;;		_LCDdelay3
  4894 ;;		_clearDisplay
  4895 ;;		_resetCursor
  4896 ;;		_writeMessage
  4897 ;; This function is called by:
  4898 ;;		_deactivateZones
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           
  4903                           ;psect for function _zone0Deactivate
  4904  08F8                     _zone0Deactivate:	
  4905                           
  4906                           ;main.c: 154: clearDisplay ();
  4907                           
  4908                           ;incstack = 0
  4909                           ; Regs used in _zone0Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4910  08F8  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  4911                           
  4912                           ;main.c: 155: resetCursor ();
  4913  08FD  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  4914                           
  4915                           ;main.c: 156: char message[] = "Zone 0 Off";
  4916  0902  3052               	movlw	zone0Deactivate@message& (0+255)
  4917  0903  0084               	movwf	4
  4918  0904  30B1               	movlw	low zone0Deactivate@F1226
  4919  0905  00F7               	movwf	??_zone0Deactivate
  4920  0906  0804               	movf	4,w
  4921  0907  00F8               	movwf	??_zone0Deactivate+1
  4922  0908  300B               	movlw	11
  4923  0909  00F9               	movwf	??_zone0Deactivate+2
  4924  090A                     u5760:	
  4925  090A  0877               	movf	??_zone0Deactivate,w
  4926  090B  0084               	movwf	4
  4927  090C  1783               	bsf	3,7	;select IRP bank3
  4928  090D  0800               	movf	0,w
  4929  090E  00FA               	movwf	??_zone0Deactivate+3
  4930  090F  0AF7               	incf	??_zone0Deactivate,f
  4931  0910  0878               	movf	??_zone0Deactivate+1,w
  4932  0911  0084               	movwf	4
  4933  0912  1383               	bcf	3,7	;select IRP bank0
  4934  0913  087A               	movf	??_zone0Deactivate+3,w
  4935  0914  0080               	movwf	0
  4936  0915  0AF8               	incf	??_zone0Deactivate+1,f
  4937  0916  0BF9               	decfsz	??_zone0Deactivate+2,f
  4938  0917  290A               	goto	u5760
  4939                           
  4940                           ;main.c: 157: writeMessage(message);
  4941  0918  3052               	movlw	(low (zone0Deactivate@message| 0))& (0+255)
  4942  0919  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  4943                           
  4944                           ;main.c: 158: LCDdelay3 ();
  4945  091E  160A  118A  23FC   	fcall	_LCDdelay3
  4946  0921  0008               	return
  4947  0922                     __end_of_zone0Deactivate:	
  4948                           
  4949                           	psect	text25
  4950  0E6B                     __ptext25:	
  4951 ;; *************** function _checkZones2 *****************
  4952 ;; Defined at:
  4953 ;;		line 381 in file "main.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4967 ;;      Params:         0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    4
  4974 ;; This function calls:
  4975 ;;		_zone0Alert
  4976 ;;		_zone0OK
  4977 ;;		_zone1Alert
  4978 ;;		_zone1OK
  4979 ;;		_zone2Alert
  4980 ;;		_zone2OK
  4981 ;;		_zone3Alert
  4982 ;;		_zone3OK
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _checkZones2
  4990  0E6B                     _checkZones2:	
  4991                           
  4992                           ;main.c: 383: if (row == 1 && col == 2) {
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _checkZones2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4996  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0E6D  0338               	decf	_row,w
  4999  0E6E  0439               	iorwf	_row+1,w
  5000  0E6F  1D03               	btfss	3,2
  5001  0E70  2E88               	goto	l4833
  5002  0E71  3002               	movlw	2
  5003  0E72  063A               	xorwf	_col,w
  5004  0E73  043B               	iorwf	_col+1,w
  5005  0E74  1D03               	btfss	3,2
  5006  0E75  2E88               	goto	l4833
  5007                           
  5008                           ;main.c: 384: if(zone0Alerted == 0) {
  5009  0E76  0845               	movf	_zone0Alerted,w
  5010  0E77  1D03               	btfss	3,2
  5011  0E78  2E7E               	goto	l4829
  5012                           
  5013                           ;main.c: 386: zone0OK();
  5014  0E79  160A  118A  268A  120A  158A  	fcall	_zone0OK
  5015  0E7E                     l4829:	
  5016                           
  5017                           ;main.c: 387: }
  5018                           ;main.c: 388: if (zone0Alerted == 1) {
  5019  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0E80  0345               	decf	_zone0Alerted,w
  5022  0E81  1D03               	btfss	3,2
  5023  0E82  2E88               	goto	l4833
  5024                           
  5025                           ;main.c: 389: zone0Alert();
  5026  0E83  120A  158A  2050  120A  158A  	fcall	_zone0Alert
  5027  0E88                     l4833:	
  5028                           
  5029                           ;main.c: 390: }
  5030                           ;main.c: 391: }
  5031                           ;main.c: 392: if (row == 2 && col == 2) {
  5032  0E88  3002               	movlw	2
  5033  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0E8B  0638               	xorwf	_row,w
  5036  0E8C  0439               	iorwf	_row+1,w
  5037  0E8D  1D03               	btfss	3,2
  5038  0E8E  2EA6               	goto	l4845
  5039  0E8F  3002               	movlw	2
  5040  0E90  063A               	xorwf	_col,w
  5041  0E91  043B               	iorwf	_col+1,w
  5042  0E92  1D03               	btfss	3,2
  5043  0E93  2EA6               	goto	l4845
  5044                           
  5045                           ;main.c: 394: if(zone1Alerted == 0) {
  5046  0E94  0844               	movf	_zone1Alerted,w
  5047  0E95  1D03               	btfss	3,2
  5048  0E96  2E9C               	goto	l4841
  5049                           
  5050                           ;main.c: 395: zone1OK();
  5051  0E97  160A  118A  26B3  120A  158A  	fcall	_zone1OK
  5052  0E9C                     l4841:	
  5053                           
  5054                           ;main.c: 396: }
  5055                           ;main.c: 397: if (zone1Alerted == 1) {
  5056  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  5058  0E9E  0344               	decf	_zone1Alerted,w
  5059  0E9F  1D03               	btfss	3,2
  5060  0EA0  2EA6               	goto	l4845
  5061                           
  5062                           ;main.c: 398: zone1Alert();
  5063  0EA1  120A  158A  207A  120A  158A  	fcall	_zone1Alert
  5064  0EA6                     l4845:	
  5065                           
  5066                           ;main.c: 399: }
  5067                           ;main.c: 400: }
  5068                           ;main.c: 401: if (row == 3 && col == 2) {
  5069  0EA6  3003               	movlw	3
  5070  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0EA9  0638               	xorwf	_row,w
  5073  0EAA  0439               	iorwf	_row+1,w
  5074  0EAB  1D03               	btfss	3,2
  5075  0EAC  2EC4               	goto	l4857
  5076  0EAD  3002               	movlw	2
  5077  0EAE  063A               	xorwf	_col,w
  5078  0EAF  043B               	iorwf	_col+1,w
  5079  0EB0  1D03               	btfss	3,2
  5080  0EB1  2EC4               	goto	l4857
  5081                           
  5082                           ;main.c: 403: if(zone2Alerted == 0) {
  5083  0EB2  0843               	movf	_zone2Alerted,w
  5084  0EB3  1D03               	btfss	3,2
  5085  0EB4  2EBA               	goto	l4853
  5086                           
  5087                           ;main.c: 404: zone2OK();
  5088  0EB5  160A  118A  26DC  120A  158A  	fcall	_zone2OK
  5089  0EBA                     l4853:	
  5090                           
  5091                           ;main.c: 405: }
  5092                           ;main.c: 406: if (zone2Alerted == 1) {
  5093  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0EBC  0343               	decf	_zone2Alerted,w
  5096  0EBD  1D03               	btfss	3,2
  5097  0EBE  2EC4               	goto	l4857
  5098                           
  5099                           ;main.c: 407: zone2Alert();
  5100  0EBF  120A  158A  20A4  120A  158A  	fcall	_zone2Alert
  5101  0EC4                     l4857:	
  5102                           
  5103                           ;main.c: 408: }
  5104                           ;main.c: 409: }
  5105                           ;main.c: 410: if (row == 4 && col == 2) {
  5106  0EC4  3004               	movlw	4
  5107  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5108  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5109  0EC7  0638               	xorwf	_row,w
  5110  0EC8  0439               	iorwf	_row+1,w
  5111  0EC9  1D03               	btfss	3,2
  5112  0ECA  0008               	return
  5113  0ECB  3002               	movlw	2
  5114  0ECC  063A               	xorwf	_col,w
  5115  0ECD  043B               	iorwf	_col+1,w
  5116  0ECE  1D03               	btfss	3,2
  5117  0ECF  0008               	return
  5118                           
  5119                           ;main.c: 412: if(zone3Alerted == 0) {
  5120  0ED0  0842               	movf	_zone3Alerted,w
  5121  0ED1  1D03               	btfss	3,2
  5122  0ED2  2ED8               	goto	l4865
  5123                           
  5124                           ;main.c: 413: zone3OK();
  5125  0ED3  160A  118A  2705  120A  158A  	fcall	_zone3OK
  5126  0ED8                     l4865:	
  5127                           
  5128                           ;main.c: 414: }
  5129                           ;main.c: 415: if (zone3Alerted == 1) {
  5130  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  5131  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  5132  0EDA  0342               	decf	_zone3Alerted,w
  5133  0EDB  1D03               	btfss	3,2
  5134  0EDC  0008               	return
  5135                           
  5136                           ;main.c: 416: zone3Alert();
  5137  0EDD  120A  158A  20CE   	fcall	_zone3Alert
  5138  0EE0  0008               	return
  5139  0EE1                     __end_of_checkZones2:	
  5140                           
  5141                           	psect	text26
  5142  1705                     __ptext26:	
  5143 ;; *************** function _zone3OK *****************
  5144 ;; Defined at:
  5145 ;;		line 65 in file "main.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  message        10    0[BANK0h] unsigned char [10]
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5159 ;;      Params:         0       0       0       0       0       0
  5160 ;;      Locals:         0      10       0       0       0       0
  5161 ;;      Temps:          4       0       0       0       0       0
  5162 ;;      Totals:         4      10       0       0       0       0
  5163 ;;Total ram usage:       14 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    3
  5166 ;; This function calls:
  5167 ;;		_LCDdelay3
  5168 ;;		_clearDisplay
  5169 ;;		_resetCursor
  5170 ;;		_writeMessage
  5171 ;; This function is called by:
  5172 ;;		_checkZones2
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _zone3OK
  5178  1705                     _zone3OK:	
  5179                           
  5180                           ;main.c: 66: clearDisplay ();
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _zone3OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5184  1705  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  5185                           
  5186                           ;main.c: 67: resetCursor ();
  5187  170A  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  5188                           
  5189                           ;main.c: 68: char message[] = "Zone 3 OK";
  5190  170F  3052               	movlw	zone3OK@message& (0+255)
  5191  1710  0084               	movwf	4
  5192  1711  30A0               	movlw	low zone3OK@F1188
  5193  1712  00F7               	movwf	??_zone3OK
  5194  1713  0804               	movf	4,w
  5195  1714  00F8               	movwf	??_zone3OK+1
  5196  1715  300A               	movlw	10
  5197  1716  00F9               	movwf	??_zone3OK+2
  5198  1717                     u5650:	
  5199  1717  0877               	movf	??_zone3OK,w
  5200  1718  0084               	movwf	4
  5201  1719  1383               	bcf	3,7	;select IRP bank1
  5202  171A  0800               	movf	0,w
  5203  171B  00FA               	movwf	??_zone3OK+3
  5204  171C  0AF7               	incf	??_zone3OK,f
  5205  171D  0878               	movf	??_zone3OK+1,w
  5206  171E  0084               	movwf	4
  5207  171F  087A               	movf	??_zone3OK+3,w
  5208  1720  0080               	movwf	0
  5209  1721  0AF8               	incf	??_zone3OK+1,f
  5210  1722  0BF9               	decfsz	??_zone3OK+2,f
  5211  1723  2F17               	goto	u5650
  5212                           
  5213                           ;main.c: 69: writeMessage(message);
  5214  1724  3052               	movlw	(low (zone3OK@message| 0))& (0+255)
  5215  1725  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  5216                           
  5217                           ;main.c: 70: LCDdelay3 ();
  5218  172A  160A  118A  23FC   	fcall	_LCDdelay3
  5219  172D  0008               	return
  5220  172E                     __end_of_zone3OK:	
  5221                           
  5222                           	psect	text27
  5223  08CE                     __ptext27:	
  5224 ;; *************** function _zone3Alert *****************
  5225 ;; Defined at:
  5226 ;;		line 93 in file "main.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  message        13    0[BANK0h] unsigned char [13]
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5240 ;;      Params:         0       0       0       0       0       0
  5241 ;;      Locals:         0      13       0       0       0       0
  5242 ;;      Temps:          4       0       0       0       0       0
  5243 ;;      Totals:         4      13       0       0       0       0
  5244 ;;Total ram usage:       17 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    3
  5247 ;; This function calls:
  5248 ;;		_LCDdelay3
  5249 ;;		_clearDisplay
  5250 ;;		_resetCursor
  5251 ;;		_writeMessage
  5252 ;; This function is called by:
  5253 ;;		_checkZones2
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           
  5258                           ;psect for function _zone3Alert
  5259  08CE                     _zone3Alert:	
  5260                           
  5261                           ;main.c: 94: clearDisplay ();
  5262                           
  5263                           ;incstack = 0
  5264                           ; Regs used in _zone3Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5265  08CE  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  5266                           
  5267                           ;main.c: 95: resetCursor ();
  5268  08D3  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  5269                           
  5270                           ;main.c: 96: char message[] = "Zone 3 Alert";
  5271  08D8  3052               	movlw	zone3Alert@message& (0+255)
  5272  08D9  0084               	movwf	4
  5273  08DA  301D               	movlw	low zone3Alert@F1200
  5274  08DB  00F7               	movwf	??_zone3Alert
  5275  08DC  0804               	movf	4,w
  5276  08DD  00F8               	movwf	??_zone3Alert+1
  5277  08DE  300D               	movlw	13
  5278  08DF  00F9               	movwf	??_zone3Alert+2
  5279  08E0                     u5690:	
  5280  08E0  0877               	movf	??_zone3Alert,w
  5281  08E1  0084               	movwf	4
  5282  08E2  1783               	bsf	3,7	;select IRP bank2
  5283  08E3  0800               	movf	0,w
  5284  08E4  00FA               	movwf	??_zone3Alert+3
  5285  08E5  0AF7               	incf	??_zone3Alert,f
  5286  08E6  0878               	movf	??_zone3Alert+1,w
  5287  08E7  0084               	movwf	4
  5288  08E8  1383               	bcf	3,7	;select IRP bank0
  5289  08E9  087A               	movf	??_zone3Alert+3,w
  5290  08EA  0080               	movwf	0
  5291  08EB  0AF8               	incf	??_zone3Alert+1,f
  5292  08EC  0BF9               	decfsz	??_zone3Alert+2,f
  5293  08ED  28E0               	goto	u5690
  5294                           
  5295                           ;main.c: 97: writeMessage(message);
  5296  08EE  3052               	movlw	(low (zone3Alert@message| 0))& (0+255)
  5297  08EF  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  5298                           
  5299                           ;main.c: 98: LCDdelay3 ();
  5300  08F4  160A  118A  23FC   	fcall	_LCDdelay3
  5301  08F7  0008               	return
  5302  08F8                     __end_of_zone3Alert:	
  5303                           
  5304                           	psect	text28
  5305  16DC                     __ptext28:	
  5306 ;; *************** function _zone2OK *****************
  5307 ;; Defined at:
  5308 ;;		line 58 in file "main.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  message        10    0[BANK0h] unsigned char [10]
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5322 ;;      Params:         0       0       0       0       0       0
  5323 ;;      Locals:         0      10       0       0       0       0
  5324 ;;      Temps:          4       0       0       0       0       0
  5325 ;;      Totals:         4      10       0       0       0       0
  5326 ;;Total ram usage:       14 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    3
  5329 ;; This function calls:
  5330 ;;		_LCDdelay3
  5331 ;;		_clearDisplay
  5332 ;;		_resetCursor
  5333 ;;		_writeMessage
  5334 ;; This function is called by:
  5335 ;;		_checkZones2
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           
  5340                           ;psect for function _zone2OK
  5341  16DC                     _zone2OK:	
  5342                           
  5343                           ;main.c: 59: clearDisplay ();
  5344                           
  5345                           ;incstack = 0
  5346                           ; Regs used in _zone2OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5347  16DC  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  5348                           
  5349                           ;main.c: 60: resetCursor ();
  5350  16E1  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  5351                           
  5352                           ;main.c: 61: char message[] = "Zone 2 OK";
  5353  16E6  3052               	movlw	zone2OK@message& (0+255)
  5354  16E7  0084               	movwf	4
  5355  16E8  30AA               	movlw	low zone2OK@F1185
  5356  16E9  00F7               	movwf	??_zone2OK
  5357  16EA  0804               	movf	4,w
  5358  16EB  00F8               	movwf	??_zone2OK+1
  5359  16EC  300A               	movlw	10
  5360  16ED  00F9               	movwf	??_zone2OK+2
  5361  16EE                     u5640:	
  5362  16EE  0877               	movf	??_zone2OK,w
  5363  16EF  0084               	movwf	4
  5364  16F0  1383               	bcf	3,7	;select IRP bank1
  5365  16F1  0800               	movf	0,w
  5366  16F2  00FA               	movwf	??_zone2OK+3
  5367  16F3  0AF7               	incf	??_zone2OK,f
  5368  16F4  0878               	movf	??_zone2OK+1,w
  5369  16F5  0084               	movwf	4
  5370  16F6  087A               	movf	??_zone2OK+3,w
  5371  16F7  0080               	movwf	0
  5372  16F8  0AF8               	incf	??_zone2OK+1,f
  5373  16F9  0BF9               	decfsz	??_zone2OK+2,f
  5374  16FA  2EEE               	goto	u5640
  5375                           
  5376                           ;main.c: 62: writeMessage(message);
  5377  16FB  3052               	movlw	(low (zone2OK@message| 0))& (0+255)
  5378  16FC  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  5379                           
  5380                           ;main.c: 63: LCDdelay3 ();
  5381  1701  160A  118A  23FC   	fcall	_LCDdelay3
  5382  1704  0008               	return
  5383  1705                     __end_of_zone2OK:	
  5384                           
  5385                           	psect	text29
  5386  08A4                     __ptext29:	
  5387 ;; *************** function _zone2Alert *****************
  5388 ;; Defined at:
  5389 ;;		line 86 in file "main.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  message        13    0[BANK0h] unsigned char [13]
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5403 ;;      Params:         0       0       0       0       0       0
  5404 ;;      Locals:         0      13       0       0       0       0
  5405 ;;      Temps:          4       0       0       0       0       0
  5406 ;;      Totals:         4      13       0       0       0       0
  5407 ;;Total ram usage:       17 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    3
  5410 ;; This function calls:
  5411 ;;		_LCDdelay3
  5412 ;;		_clearDisplay
  5413 ;;		_resetCursor
  5414 ;;		_writeMessage
  5415 ;; This function is called by:
  5416 ;;		_checkZones2
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           
  5421                           ;psect for function _zone2Alert
  5422  08A4                     _zone2Alert:	
  5423                           
  5424                           ;main.c: 87: clearDisplay ();
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in _zone2Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5428  08A4  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  5429                           
  5430                           ;main.c: 88: resetCursor ();
  5431  08A9  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  5432                           
  5433                           ;main.c: 89: char message[] = "Zone 2 Alert";
  5434  08AE  3052               	movlw	zone2Alert@message& (0+255)
  5435  08AF  0084               	movwf	4
  5436  08B0  302A               	movlw	low zone2Alert@F1197
  5437  08B1  00F7               	movwf	??_zone2Alert
  5438  08B2  0804               	movf	4,w
  5439  08B3  00F8               	movwf	??_zone2Alert+1
  5440  08B4  300D               	movlw	13
  5441  08B5  00F9               	movwf	??_zone2Alert+2
  5442  08B6                     u5680:	
  5443  08B6  0877               	movf	??_zone2Alert,w
  5444  08B7  0084               	movwf	4
  5445  08B8  1783               	bsf	3,7	;select IRP bank2
  5446  08B9  0800               	movf	0,w
  5447  08BA  00FA               	movwf	??_zone2Alert+3
  5448  08BB  0AF7               	incf	??_zone2Alert,f
  5449  08BC  0878               	movf	??_zone2Alert+1,w
  5450  08BD  0084               	movwf	4
  5451  08BE  1383               	bcf	3,7	;select IRP bank0
  5452  08BF  087A               	movf	??_zone2Alert+3,w
  5453  08C0  0080               	movwf	0
  5454  08C1  0AF8               	incf	??_zone2Alert+1,f
  5455  08C2  0BF9               	decfsz	??_zone2Alert+2,f
  5456  08C3  28B6               	goto	u5680
  5457                           
  5458                           ;main.c: 90: writeMessage(message);
  5459  08C4  3052               	movlw	(low (zone2Alert@message| 0))& (0+255)
  5460  08C5  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  5461                           
  5462                           ;main.c: 91: LCDdelay3 ();
  5463  08CA  160A  118A  23FC   	fcall	_LCDdelay3
  5464  08CD  0008               	return
  5465  08CE                     __end_of_zone2Alert:	
  5466                           
  5467                           	psect	text30
  5468  16B3                     __ptext30:	
  5469 ;; *************** function _zone1OK *****************
  5470 ;; Defined at:
  5471 ;;		line 51 in file "main.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  message        10    0[BANK0h] unsigned char [10]
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5485 ;;      Params:         0       0       0       0       0       0
  5486 ;;      Locals:         0      10       0       0       0       0
  5487 ;;      Temps:          4       0       0       0       0       0
  5488 ;;      Totals:         4      10       0       0       0       0
  5489 ;;Total ram usage:       14 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    3
  5492 ;; This function calls:
  5493 ;;		_LCDdelay3
  5494 ;;		_clearDisplay
  5495 ;;		_resetCursor
  5496 ;;		_writeMessage
  5497 ;; This function is called by:
  5498 ;;		_checkZones2
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           
  5503                           ;psect for function _zone1OK
  5504  16B3                     _zone1OK:	
  5505                           
  5506                           ;main.c: 52: clearDisplay ();
  5507                           
  5508                           ;incstack = 0
  5509                           ; Regs used in _zone1OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5510  16B3  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  5511                           
  5512                           ;main.c: 53: resetCursor ();
  5513  16B8  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  5514                           
  5515                           ;main.c: 54: char message[] = "Zone 1 OK";
  5516  16BD  3052               	movlw	zone1OK@message& (0+255)
  5517  16BE  0084               	movwf	4
  5518  16BF  30B4               	movlw	low zone1OK@F1182
  5519  16C0  00F7               	movwf	??_zone1OK
  5520  16C1  0804               	movf	4,w
  5521  16C2  00F8               	movwf	??_zone1OK+1
  5522  16C3  300A               	movlw	10
  5523  16C4  00F9               	movwf	??_zone1OK+2
  5524  16C5                     u5630:	
  5525  16C5  0877               	movf	??_zone1OK,w
  5526  16C6  0084               	movwf	4
  5527  16C7  1383               	bcf	3,7	;select IRP bank1
  5528  16C8  0800               	movf	0,w
  5529  16C9  00FA               	movwf	??_zone1OK+3
  5530  16CA  0AF7               	incf	??_zone1OK,f
  5531  16CB  0878               	movf	??_zone1OK+1,w
  5532  16CC  0084               	movwf	4
  5533  16CD  087A               	movf	??_zone1OK+3,w
  5534  16CE  0080               	movwf	0
  5535  16CF  0AF8               	incf	??_zone1OK+1,f
  5536  16D0  0BF9               	decfsz	??_zone1OK+2,f
  5537  16D1  2EC5               	goto	u5630
  5538                           
  5539                           ;main.c: 55: writeMessage(message);
  5540  16D2  3052               	movlw	(low (zone1OK@message| 0))& (0+255)
  5541  16D3  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  5542                           
  5543                           ;main.c: 56: LCDdelay3 ();
  5544  16D8  160A  118A  23FC   	fcall	_LCDdelay3
  5545  16DB  0008               	return
  5546  16DC                     __end_of_zone1OK:	
  5547                           
  5548                           	psect	text31
  5549  087A                     __ptext31:	
  5550 ;; *************** function _zone1Alert *****************
  5551 ;; Defined at:
  5552 ;;		line 79 in file "main.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;		None
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  message        13    0[BANK0h] unsigned char [13]
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5566 ;;      Params:         0       0       0       0       0       0
  5567 ;;      Locals:         0      13       0       0       0       0
  5568 ;;      Temps:          4       0       0       0       0       0
  5569 ;;      Totals:         4      13       0       0       0       0
  5570 ;;Total ram usage:       17 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    3
  5573 ;; This function calls:
  5574 ;;		_LCDdelay3
  5575 ;;		_clearDisplay
  5576 ;;		_resetCursor
  5577 ;;		_writeMessage
  5578 ;; This function is called by:
  5579 ;;		_checkZones2
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function _zone1Alert
  5585  087A                     _zone1Alert:	
  5586                           
  5587                           ;main.c: 80: clearDisplay ();
  5588                           
  5589                           ;incstack = 0
  5590                           ; Regs used in _zone1Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5591  087A  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  5592                           
  5593                           ;main.c: 81: resetCursor ();
  5594  087F  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  5595                           
  5596                           ;main.c: 82: char message[] = "Zone 1 Alert";
  5597  0884  3052               	movlw	zone1Alert@message& (0+255)
  5598  0885  0084               	movwf	4
  5599  0886  3037               	movlw	low zone1Alert@F1194
  5600  0887  00F7               	movwf	??_zone1Alert
  5601  0888  0804               	movf	4,w
  5602  0889  00F8               	movwf	??_zone1Alert+1
  5603  088A  300D               	movlw	13
  5604  088B  00F9               	movwf	??_zone1Alert+2
  5605  088C                     u5670:	
  5606  088C  0877               	movf	??_zone1Alert,w
  5607  088D  0084               	movwf	4
  5608  088E  1783               	bsf	3,7	;select IRP bank2
  5609  088F  0800               	movf	0,w
  5610  0890  00FA               	movwf	??_zone1Alert+3
  5611  0891  0AF7               	incf	??_zone1Alert,f
  5612  0892  0878               	movf	??_zone1Alert+1,w
  5613  0893  0084               	movwf	4
  5614  0894  1383               	bcf	3,7	;select IRP bank0
  5615  0895  087A               	movf	??_zone1Alert+3,w
  5616  0896  0080               	movwf	0
  5617  0897  0AF8               	incf	??_zone1Alert+1,f
  5618  0898  0BF9               	decfsz	??_zone1Alert+2,f
  5619  0899  288C               	goto	u5670
  5620                           
  5621                           ;main.c: 83: writeMessage(message);
  5622  089A  3052               	movlw	(low (zone1Alert@message| 0))& (0+255)
  5623  089B  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  5624                           
  5625                           ;main.c: 84: LCDdelay3 ();
  5626  08A0  160A  118A  23FC   	fcall	_LCDdelay3
  5627  08A3  0008               	return
  5628  08A4                     __end_of_zone1Alert:	
  5629                           
  5630                           	psect	text32
  5631  168A                     __ptext32:	
  5632 ;; *************** function _zone0OK *****************
  5633 ;; Defined at:
  5634 ;;		line 44 in file "main.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  message        10    0[BANK0h] unsigned char [10]
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5648 ;;      Params:         0       0       0       0       0       0
  5649 ;;      Locals:         0      10       0       0       0       0
  5650 ;;      Temps:          4       0       0       0       0       0
  5651 ;;      Totals:         4      10       0       0       0       0
  5652 ;;Total ram usage:       14 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    3
  5655 ;; This function calls:
  5656 ;;		_LCDdelay3
  5657 ;;		_clearDisplay
  5658 ;;		_resetCursor
  5659 ;;		_writeMessage
  5660 ;; This function is called by:
  5661 ;;		_checkZones2
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           
  5666                           ;psect for function _zone0OK
  5667  168A                     _zone0OK:	
  5668                           
  5669                           ;main.c: 45: clearDisplay ();
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _zone0OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5673  168A  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  5674                           
  5675                           ;main.c: 46: resetCursor ();
  5676  168F  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  5677                           
  5678                           ;main.c: 47: char message[] = "Zone 0 OK";
  5679  1694  3052               	movlw	zone0OK@message& (0+255)
  5680  1695  0084               	movwf	4
  5681  1696  30BE               	movlw	low zone0OK@F1179
  5682  1697  00F7               	movwf	??_zone0OK
  5683  1698  0804               	movf	4,w
  5684  1699  00F8               	movwf	??_zone0OK+1
  5685  169A  300A               	movlw	10
  5686  169B  00F9               	movwf	??_zone0OK+2
  5687  169C                     u5620:	
  5688  169C  0877               	movf	??_zone0OK,w
  5689  169D  0084               	movwf	4
  5690  169E  1383               	bcf	3,7	;select IRP bank1
  5691  169F  0800               	movf	0,w
  5692  16A0  00FA               	movwf	??_zone0OK+3
  5693  16A1  0AF7               	incf	??_zone0OK,f
  5694  16A2  0878               	movf	??_zone0OK+1,w
  5695  16A3  0084               	movwf	4
  5696  16A4  087A               	movf	??_zone0OK+3,w
  5697  16A5  0080               	movwf	0
  5698  16A6  0AF8               	incf	??_zone0OK+1,f
  5699  16A7  0BF9               	decfsz	??_zone0OK+2,f
  5700  16A8  2E9C               	goto	u5620
  5701                           
  5702                           ;main.c: 48: writeMessage(message);
  5703  16A9  3052               	movlw	(low (zone0OK@message| 0))& (0+255)
  5704  16AA  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  5705                           
  5706                           ;main.c: 49: LCDdelay3 ();
  5707  16AF  160A  118A  23FC   	fcall	_LCDdelay3
  5708  16B2  0008               	return
  5709  16B3                     __end_of_zone0OK:	
  5710                           
  5711                           	psect	text33
  5712  0850                     __ptext33:	
  5713 ;; *************** function _zone0Alert *****************
  5714 ;; Defined at:
  5715 ;;		line 72 in file "main.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  message        13    0[BANK0h] unsigned char [13]
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      void 
  5722 ;; Registers used:
  5723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5729 ;;      Params:         0       0       0       0       0       0
  5730 ;;      Locals:         0      13       0       0       0       0
  5731 ;;      Temps:          4       0       0       0       0       0
  5732 ;;      Totals:         4      13       0       0       0       0
  5733 ;;Total ram usage:       17 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    3
  5736 ;; This function calls:
  5737 ;;		_LCDdelay3
  5738 ;;		_clearDisplay
  5739 ;;		_resetCursor
  5740 ;;		_writeMessage
  5741 ;; This function is called by:
  5742 ;;		_checkZones2
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function _zone0Alert
  5748  0850                     _zone0Alert:	
  5749                           
  5750                           ;main.c: 73: clearDisplay ();
  5751                           
  5752                           ;incstack = 0
  5753                           ; Regs used in _zone0Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5754  0850  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  5755                           
  5756                           ;main.c: 74: resetCursor ();
  5757  0855  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  5758                           
  5759                           ;main.c: 75: char message[] = "Zone 0 Alert";
  5760  085A  3052               	movlw	zone0Alert@message& (0+255)
  5761  085B  0084               	movwf	4
  5762  085C  3044               	movlw	low zone0Alert@F1191
  5763  085D  00F7               	movwf	??_zone0Alert
  5764  085E  0804               	movf	4,w
  5765  085F  00F8               	movwf	??_zone0Alert+1
  5766  0860  300D               	movlw	13
  5767  0861  00F9               	movwf	??_zone0Alert+2
  5768  0862                     u5660:	
  5769  0862  0877               	movf	??_zone0Alert,w
  5770  0863  0084               	movwf	4
  5771  0864  1783               	bsf	3,7	;select IRP bank2
  5772  0865  0800               	movf	0,w
  5773  0866  00FA               	movwf	??_zone0Alert+3
  5774  0867  0AF7               	incf	??_zone0Alert,f
  5775  0868  0878               	movf	??_zone0Alert+1,w
  5776  0869  0084               	movwf	4
  5777  086A  1383               	bcf	3,7	;select IRP bank0
  5778  086B  087A               	movf	??_zone0Alert+3,w
  5779  086C  0080               	movwf	0
  5780  086D  0AF8               	incf	??_zone0Alert+1,f
  5781  086E  0BF9               	decfsz	??_zone0Alert+2,f
  5782  086F  2862               	goto	u5660
  5783                           
  5784                           ;main.c: 76: writeMessage(message);
  5785  0870  3052               	movlw	(low (zone0Alert@message| 0))& (0+255)
  5786  0871  160A  118A  24D4  120A  158A  	fcall	_writeMessage
  5787                           
  5788                           ;main.c: 77: LCDdelay3 ();
  5789  0876  160A  118A  23FC   	fcall	_LCDdelay3
  5790  0879  0008               	return
  5791  087A                     __end_of_zone0Alert:	
  5792                           
  5793                           	psect	text34
  5794  15A1                     __ptext34:	
  5795 ;; *************** function _checkZones *****************
  5796 ;; Defined at:
  5797 ;;		line 368 in file "main.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5811 ;;      Params:         0       0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0
  5814 ;;      Totals:         0       0       0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    5
  5818 ;; This function calls:
  5819 ;;		_checkZoneMessage
  5820 ;; This function is called by:
  5821 ;;		_main
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           
  5826                           ;psect for function _checkZones
  5827  15A1                     _checkZones:	
  5828                           
  5829                           ;main.c: 369: if (row == 1 && col == 1) {
  5830                           
  5831                           ;incstack = 0
  5832                           ; Regs used in _checkZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5833  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  5834  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  5835  15A3  0338               	decf	_row,w
  5836  15A4  0439               	iorwf	_row+1,w
  5837  15A5  1D03               	btfss	3,2
  5838  15A6  0008               	return
  5839  15A7  033A               	decf	_col,w
  5840  15A8  043B               	iorwf	_col+1,w
  5841  15A9  1D03               	btfss	3,2
  5842  15AA  0008               	return
  5843                           
  5844                           ;main.c: 370: if (zoneActMode == 0 && tempChange == 0 && tempChange == 0 && delayChange 
      +                          == 0 && timeChange == 0 && dateChange == 0) {
  5845  15AB  084B               	movf	_zoneActMode,w
  5846  15AC  1D03               	btfss	3,2
  5847  15AD  0008               	return
  5848  15AE  0841               	movf	_tempChange,w
  5849  15AF  1D03               	btfss	3,2
  5850  15B0  0008               	return
  5851  15B1  0841               	movf	_tempChange,w
  5852  15B2  1D03               	btfss	3,2
  5853  15B3  0008               	return
  5854  15B4  083E               	movf	_delayChange,w
  5855  15B5  1D03               	btfss	3,2
  5856  15B6  0008               	return
  5857  15B7  0840               	movf	_timeChange,w
  5858  15B8  1D03               	btfss	3,2
  5859  15B9  0008               	return
  5860  15BA  083F               	movf	_dateChange,w
  5861  15BB  1D03               	btfss	3,2
  5862  15BC  0008               	return
  5863                           
  5864                           ;main.c: 371: checkZoneMessage ();
  5865  15BD  160A  118A  2661   	fcall	_checkZoneMessage
  5866                           
  5867                           ;main.c: 372: zoneCheck = 1;
  5868  15C0  1283               	bcf	3,5	;RP0=0, select bank0
  5869  15C1  1303               	bcf	3,6	;RP1=0, select bank0
  5870  15C2  01CA               	clrf	_zoneCheck
  5871  15C3  0ACA               	incf	_zoneCheck,f
  5872  15C4  0008               	return
  5873  15C5                     __end_of_checkZones:	
  5874                           
  5875                           	psect	text35
  5876  1661                     __ptext35:	
  5877 ;; *************** function _checkZoneMessage *****************
  5878 ;; Defined at:
  5879 ;;		line 338 in file "main.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;		None
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  messagerow      6    8[COMMON] unsigned char [6]
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5893 ;;      Params:         0       0       0       0       0       0
  5894 ;;      Locals:         6       0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0       0
  5896 ;;      Totals:         6       0       0       0       0       0
  5897 ;;Total ram usage:        6 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    4
  5900 ;; This function calls:
  5901 ;;		_LCDdelay3
  5902 ;;		_clearDisplay
  5903 ;;		_resetCursor
  5904 ;;		_writeMessageline1
  5905 ;; This function is called by:
  5906 ;;		_checkZones
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _checkZoneMessage
  5912  1661                     _checkZoneMessage:	
  5913                           
  5914                           ;main.c: 339: clearDisplay ();
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _checkZoneMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5918  1661  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  5919                           
  5920                           ;main.c: 340: resetCursor();
  5921  1666  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  5922                           
  5923                           ;main.c: 341: char messagerow[] = "Check";
  5924  166B  3078               	movlw	checkZoneMessage@messagerow& (0+255)
  5925  166C  0084               	movwf	4
  5926  166D  1283               	bcf	3,5	;RP0=0, select bank0
  5927  166E  1303               	bcf	3,6	;RP1=0, select bank0
  5928  166F  0869               	movf	checkZoneMessage@F1255,w
  5929  1670  0080               	movwf	0
  5930  1671  0A84               	incf	4,f
  5931  1672  086A               	movf	checkZoneMessage@F1255+1,w
  5932  1673  0080               	movwf	0
  5933  1674  0A84               	incf	4,f
  5934  1675  086B               	movf	checkZoneMessage@F1255+2,w
  5935  1676  0080               	movwf	0
  5936  1677  0A84               	incf	4,f
  5937  1678  086C               	movf	checkZoneMessage@F1255+3,w
  5938  1679  0080               	movwf	0
  5939  167A  0A84               	incf	4,f
  5940  167B  086D               	movf	checkZoneMessage@F1255+4,w
  5941  167C  0080               	movwf	0
  5942  167D  0A84               	incf	4,f
  5943  167E  086E               	movf	checkZoneMessage@F1255+5,w
  5944  167F  0080               	movwf	0
  5945                           
  5946                           ;main.c: 342: writeMessageline1(messagerow);
  5947  1680  3078               	movlw	(low (checkZoneMessage@messagerow| 0))& (0+255)
  5948  1681  160A  118A  23B6  160A  118A  	fcall	_writeMessageline1
  5949                           
  5950                           ;main.c: 343: LCDdelay3 ();
  5951  1686  160A  118A  23FC   	fcall	_LCDdelay3
  5952  1689  0008               	return
  5953  168A                     __end_of_checkZoneMessage:	
  5954                           
  5955                           	psect	text36
  5956  0EE1                     __ptext36:	
  5957 ;; *************** function _checkButtons *****************
  5958 ;; Defined at:
  5959 ;;		line 29 in file "buttons.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;		None
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  rval            1    0[COMMON] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      unsigned char 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0, pclath, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5973 ;;      Params:         0       0       0       0       0       0
  5974 ;;      Locals:         1       0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0
  5976 ;;      Totals:         1       0       0       0       0       0
  5977 ;;Total ram usage:        1 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    1
  5980 ;; This function calls:
  5981 ;;		_buttonsetup
  5982 ;; This function is called by:
  5983 ;;		_main
  5984 ;;		_ButtonGrid
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           
  5989                           ;psect for function _checkButtons
  5990  0EE1                     _checkButtons:	
  5991                           
  5992                           ;buttons.c: 31: char rval = 0;
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in _checkButtons: [wreg+status,2+status,0+pclath+cstack]
  5996  0EE1  01F0               	clrf	checkButtons@rval
  5997                           
  5998                           ;buttons.c: 32: buttonsetup ();
  5999  0EE2  160A  118A  249F  120A  158A  	fcall	_buttonsetup
  6000                           
  6001                           ;buttons.c: 34: RC4 = 0;
  6002  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  6004  0EE9  1207               	bcf	7,4	;volatile
  6005                           
  6006                           ;buttons.c: 35: if (RC0 == 0) {
  6007  0EEA  1807               	btfsc	7,0	;volatile
  6008  0EEB  2EF4               	goto	l3483
  6009                           
  6010                           ;buttons.c: 36: col = 4;
  6011  0EEC  3004               	movlw	4
  6012  0EED  00BA               	movwf	_col
  6013  0EEE  3000               	movlw	0
  6014  0EEF  00BB               	movwf	_col+1
  6015                           
  6016                           ;buttons.c: 37: row = 1;
  6017  0EF0  3001               	movlw	1
  6018  0EF1  00B8               	movwf	_row
  6019  0EF2  3000               	movlw	0
  6020  0EF3  00B9               	movwf	_row+1
  6021  0EF4                     l3483:	
  6022                           
  6023                           ;buttons.c: 38: }
  6024                           ;buttons.c: 39: if (RC1 == 0) {
  6025  0EF4  1887               	btfsc	7,1	;volatile
  6026  0EF5  2EFE               	goto	l3487
  6027                           
  6028                           ;buttons.c: 40: col = 3;
  6029  0EF6  3003               	movlw	3
  6030  0EF7  00BA               	movwf	_col
  6031  0EF8  3000               	movlw	0
  6032  0EF9  00BB               	movwf	_col+1
  6033                           
  6034                           ;buttons.c: 41: row = 1;
  6035  0EFA  3001               	movlw	1
  6036  0EFB  00B8               	movwf	_row
  6037  0EFC  3000               	movlw	0
  6038  0EFD  00B9               	movwf	_row+1
  6039  0EFE                     l3487:	
  6040                           
  6041                           ;buttons.c: 42: }
  6042                           ;buttons.c: 43: if (RC2 == 0) {
  6043  0EFE  1907               	btfsc	7,2	;volatile
  6044  0EFF  2F08               	goto	l3491
  6045                           
  6046                           ;buttons.c: 44: col = 2;
  6047  0F00  3002               	movlw	2
  6048  0F01  00BA               	movwf	_col
  6049  0F02  3000               	movlw	0
  6050  0F03  00BB               	movwf	_col+1
  6051                           
  6052                           ;buttons.c: 45: row = 1;
  6053  0F04  3001               	movlw	1
  6054  0F05  00B8               	movwf	_row
  6055  0F06  3000               	movlw	0
  6056  0F07  00B9               	movwf	_row+1
  6057  0F08                     l3491:	
  6058                           
  6059                           ;buttons.c: 46: }
  6060                           ;buttons.c: 47: if (RC3 == 0) {
  6061  0F08  1987               	btfsc	7,3	;volatile
  6062  0F09  2F12               	goto	l3495
  6063                           
  6064                           ;buttons.c: 48: col = 1;
  6065  0F0A  3001               	movlw	1
  6066  0F0B  00BA               	movwf	_col
  6067  0F0C  3000               	movlw	0
  6068  0F0D  00BB               	movwf	_col+1
  6069                           
  6070                           ;buttons.c: 49: row = 1;
  6071  0F0E  3001               	movlw	1
  6072  0F0F  00B8               	movwf	_row
  6073  0F10  3000               	movlw	0
  6074  0F11  00B9               	movwf	_row+1
  6075  0F12                     l3495:	
  6076                           
  6077                           ;buttons.c: 50: }
  6078                           ;buttons.c: 51: RC4 = 1;
  6079  0F12  1607               	bsf	7,4	;volatile
  6080                           
  6081                           ;buttons.c: 54: RC5 = 0;
  6082  0F13  1287               	bcf	7,5	;volatile
  6083                           
  6084                           ;buttons.c: 55: if (RC0 == 0) {
  6085  0F14  1807               	btfsc	7,0	;volatile
  6086  0F15  2F18               	goto	l513
  6087                           
  6088                           ;buttons.c: 56: col = 4;
  6089  0F16  3004               	movlw	4
  6090  0F17  2F23               	goto	L6
  6091  0F18                     l513:	
  6092                           ;buttons.c: 58: }
  6093                           
  6094                           ;buttons.c: 57: row = 2;
  6095                           
  6096                           
  6097                           ;buttons.c: 59: else if (RC1 == 0) {
  6098  0F18  1887               	btfsc	7,1	;volatile
  6099  0F19  2F1C               	goto	l515
  6100                           
  6101                           ;buttons.c: 60: col = 3;
  6102  0F1A  3003               	movlw	3
  6103  0F1B  2F23               	goto	L6
  6104  0F1C                     l515:	
  6105                           ;buttons.c: 62: }
  6106                           
  6107                           ;buttons.c: 61: row = 2;
  6108                           
  6109                           
  6110                           ;buttons.c: 63: else if (RC2 == 0) {
  6111  0F1C  1907               	btfsc	7,2	;volatile
  6112  0F1D  2F20               	goto	l517
  6113                           
  6114                           ;buttons.c: 64: col = 2;
  6115  0F1E  3002               	movlw	2
  6116  0F1F  2F23               	goto	L6
  6117  0F20                     l517:	
  6118                           ;buttons.c: 66: }
  6119                           
  6120                           ;buttons.c: 65: row = 2;
  6121                           
  6122                           
  6123                           ;buttons.c: 67: else if (RC3 == 0) {
  6124  0F20  1987               	btfsc	7,3	;volatile
  6125  0F21  2F2A               	goto	l3509
  6126                           
  6127                           ;buttons.c: 68: col = 1;
  6128  0F22  3001               	movlw	1
  6129  0F23                     L6:	
  6130  0F23  00BA               	movwf	_col
  6131  0F24  3000               	movlw	0
  6132  0F25  00BB               	movwf	_col+1
  6133                           
  6134                           ;buttons.c: 69: row = 2;
  6135  0F26  3002               	movlw	2
  6136  0F27  00B8               	movwf	_row
  6137  0F28  3000               	movlw	0
  6138  0F29  00B9               	movwf	_row+1
  6139  0F2A                     l3509:	
  6140                           
  6141                           ;buttons.c: 70: }
  6142                           ;buttons.c: 71: RC5 =1;
  6143  0F2A  1687               	bsf	7,5	;volatile
  6144                           
  6145                           ;buttons.c: 72: RC6 = 0;
  6146  0F2B  1307               	bcf	7,6	;volatile
  6147                           
  6148                           ;buttons.c: 73: if (RC0 == 0) {
  6149  0F2C  1807               	btfsc	7,0	;volatile
  6150  0F2D  2F30               	goto	l520
  6151                           
  6152                           ;buttons.c: 74: col = 4;
  6153  0F2E  3004               	movlw	4
  6154  0F2F  2F3B               	goto	L9
  6155  0F30                     l520:	
  6156                           ;buttons.c: 76: }
  6157                           
  6158                           ;buttons.c: 75: row = 3;
  6159                           
  6160                           
  6161                           ;buttons.c: 77: else if (RC1 == 0) {
  6162  0F30  1887               	btfsc	7,1	;volatile
  6163  0F31  2F34               	goto	l522
  6164                           
  6165                           ;buttons.c: 78: col = 3;
  6166  0F32  3003               	movlw	3
  6167  0F33  2F3B               	goto	L9
  6168  0F34                     l522:	
  6169                           ;buttons.c: 80: }
  6170                           
  6171                           ;buttons.c: 79: row = 3;
  6172                           
  6173                           
  6174                           ;buttons.c: 81: else if (RC2 == 0) {
  6175  0F34  1907               	btfsc	7,2	;volatile
  6176  0F35  2F38               	goto	l524
  6177                           
  6178                           ;buttons.c: 82: col = 2;
  6179  0F36  3002               	movlw	2
  6180  0F37  2F3B               	goto	L9
  6181  0F38                     l524:	
  6182                           ;buttons.c: 84: }
  6183                           
  6184                           ;buttons.c: 83: row = 3;
  6185                           
  6186                           
  6187                           ;buttons.c: 85: else if (RC3 == 0) {
  6188  0F38  1987               	btfsc	7,3	;volatile
  6189  0F39  2F42               	goto	l3523
  6190                           
  6191                           ;buttons.c: 86: col = 1;
  6192  0F3A  3001               	movlw	1
  6193  0F3B                     L9:	
  6194  0F3B  00BA               	movwf	_col
  6195  0F3C  3000               	movlw	0
  6196  0F3D  00BB               	movwf	_col+1
  6197                           
  6198                           ;buttons.c: 87: row = 3;
  6199  0F3E  3003               	movlw	3
  6200  0F3F  00B8               	movwf	_row
  6201  0F40  3000               	movlw	0
  6202  0F41  00B9               	movwf	_row+1
  6203  0F42                     l3523:	
  6204                           
  6205                           ;buttons.c: 88: }
  6206                           ;buttons.c: 89: RC6 =1;
  6207  0F42  1707               	bsf	7,6	;volatile
  6208                           
  6209                           ;buttons.c: 91: RC7 = 0;
  6210  0F43  1387               	bcf	7,7	;volatile
  6211                           
  6212                           ;buttons.c: 92: if (RC0 == 0) {
  6213  0F44  1807               	btfsc	7,0	;volatile
  6214  0F45  2F48               	goto	l527
  6215                           
  6216                           ;buttons.c: 93: col = 4;
  6217  0F46  3004               	movlw	4
  6218  0F47  2F53               	goto	L12
  6219  0F48                     l527:	
  6220                           ;buttons.c: 95: }
  6221                           
  6222                           ;buttons.c: 94: row = 4;
  6223                           
  6224                           
  6225                           ;buttons.c: 96: else if (RC1 == 0) {
  6226  0F48  1887               	btfsc	7,1	;volatile
  6227  0F49  2F4C               	goto	l529
  6228                           
  6229                           ;buttons.c: 97: col = 3;
  6230  0F4A  3003               	movlw	3
  6231  0F4B  2F53               	goto	L12
  6232  0F4C                     l529:	
  6233                           ;buttons.c: 99: }
  6234                           
  6235                           ;buttons.c: 98: row = 4;
  6236                           
  6237                           
  6238                           ;buttons.c: 100: else if (RC2 == 0) {
  6239  0F4C  1907               	btfsc	7,2	;volatile
  6240  0F4D  2F50               	goto	l531
  6241                           
  6242                           ;buttons.c: 101: col = 2;
  6243  0F4E  3002               	movlw	2
  6244  0F4F  2F53               	goto	L12
  6245  0F50                     l531:	
  6246                           ;buttons.c: 103: }
  6247                           
  6248                           ;buttons.c: 102: row = 4;
  6249                           
  6250                           
  6251                           ;buttons.c: 104: else if (RC3 == 0) {
  6252  0F50  1987               	btfsc	7,3	;volatile
  6253  0F51  2F5A               	goto	l3537
  6254                           
  6255                           ;buttons.c: 105: col = 1;
  6256  0F52  3001               	movlw	1
  6257  0F53                     L12:	
  6258  0F53  00BA               	movwf	_col
  6259  0F54  3000               	movlw	0
  6260  0F55  00BB               	movwf	_col+1
  6261                           
  6262                           ;buttons.c: 106: row = 4;
  6263  0F56  3004               	movlw	4
  6264  0F57  00B8               	movwf	_row
  6265  0F58  3000               	movlw	0
  6266  0F59  00B9               	movwf	_row+1
  6267  0F5A                     l3537:	
  6268                           
  6269                           ;buttons.c: 107: }
  6270                           ;buttons.c: 108: RC7 =1;
  6271  0F5A  1787               	bsf	7,7	;volatile
  6272                           
  6273                           ;buttons.c: 110: if(col==0&&row==0){
  6274  0F5B  083A               	movf	_col,w
  6275  0F5C  043B               	iorwf	_col+1,w
  6276  0F5D  1D03               	btfss	3,2
  6277  0F5E  2F63               	goto	l534
  6278  0F5F  0838               	movf	_row,w
  6279  0F60  0439               	iorwf	_row+1,w
  6280  0F61  1903               	btfsc	3,2
  6281  0F62  2F65               	goto	l3545
  6282  0F63                     l534:	
  6283                           ;buttons.c: 111: }else{
  6284                           
  6285                           
  6286                           ;buttons.c: 112: rval = 1;
  6287  0F63  01F0               	clrf	checkButtons@rval
  6288  0F64  0AF0               	incf	checkButtons@rval,f
  6289  0F65                     l3545:	
  6290                           
  6291                           ;buttons.c: 113: }
  6292                           ;buttons.c: 116: return rval;
  6293  0F65  0870               	movf	checkButtons@rval,w
  6294  0F66  0008               	return
  6295  0F67                     __end_of_checkButtons:	
  6296                           
  6297                           	psect	text37
  6298  149F                     __ptext37:	
  6299 ;; *************** function _buttonsetup *****************
  6300 ;; Defined at:
  6301 ;;		line 7 in file "buttons.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6315 ;;      Params:         0       0       0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_checkButtons
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           
  6329                           ;psect for function _buttonsetup
  6330  149F                     _buttonsetup:	
  6331                           
  6332                           ;buttons.c: 8: ADCON1 = 0x06;
  6333                           
  6334                           ;incstack = 0
  6335                           ; Regs used in _buttonsetup: [wreg+status,2]
  6336  149F  3006               	movlw	6
  6337  14A0  1683               	bsf	3,5	;RP0=1, select bank1
  6338  14A1  1303               	bcf	3,6	;RP1=0, select bank1
  6339  14A2  009F               	movwf	31	;volatile
  6340                           
  6341                           ;buttons.c: 9: TRISA = 0x00;
  6342  14A3  0185               	clrf	5	;volatile
  6343                           
  6344                           ;buttons.c: 10: PORTA = 0x00;
  6345  14A4  1283               	bcf	3,5	;RP0=0, select bank0
  6346  14A5  1303               	bcf	3,6	;RP1=0, select bank0
  6347  14A6  0185               	clrf	5	;volatile
  6348                           
  6349                           ;buttons.c: 11: TRISC = 0x0f;
  6350  14A7  300F               	movlw	15
  6351  14A8  1683               	bsf	3,5	;RP0=1, select bank1
  6352  14A9  1303               	bcf	3,6	;RP1=0, select bank1
  6353  14AA  0087               	movwf	7	;volatile
  6354                           
  6355                           ;buttons.c: 12: PORTC = 0xf0;
  6356  14AB  30F0               	movlw	240
  6357  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  6358  14AD  1303               	bcf	3,6	;RP1=0, select bank0
  6359  14AE  0087               	movwf	7	;volatile
  6360                           
  6361                           ;buttons.c: 13: TRISD = 0x00;
  6362  14AF  1683               	bsf	3,5	;RP0=1, select bank1
  6363  14B0  1303               	bcf	3,6	;RP1=0, select bank1
  6364  14B1  0188               	clrf	8	;volatile
  6365                           
  6366                           ;buttons.c: 14: PORTD = 0x00;
  6367  14B2  1283               	bcf	3,5	;RP0=0, select bank0
  6368  14B3  1303               	bcf	3,6	;RP1=0, select bank0
  6369  14B4  0188               	clrf	8	;volatile
  6370  14B5  0008               	return
  6371  14B6                     __end_of_buttonsetup:	
  6372                           
  6373                           	psect	text38
  6374  157D                     __ptext38:	
  6375 ;; *************** function _changeTimeMode *****************
  6376 ;; Defined at:
  6377 ;;		line 529 in file "main.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;		None
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;		None
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6391 ;;      Params:         0       0       0       0       0       0
  6392 ;;      Locals:         0       0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0
  6394 ;;      Totals:         0       0       0       0       0       0
  6395 ;;Total ram usage:        0 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_main
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           
  6405                           ;psect for function _changeTimeMode
  6406  157D                     _changeTimeMode:	
  6407                           
  6408                           ;main.c: 530: if (row == 3 && col == 3) {
  6409                           
  6410                           ;incstack = 0
  6411                           ; Regs used in _changeTimeMode: [wreg+status,2+status,0]
  6412  157D  3003               	movlw	3
  6413  157E  1283               	bcf	3,5	;RP0=0, select bank0
  6414  157F  1303               	bcf	3,6	;RP1=0, select bank0
  6415  1580  0638               	xorwf	_row,w
  6416  1581  0439               	iorwf	_row+1,w
  6417  1582  1D03               	btfss	3,2
  6418  1583  0008               	return
  6419  1584  3003               	movlw	3
  6420  1585  063A               	xorwf	_col,w
  6421  1586  043B               	iorwf	_col+1,w
  6422  1587  1D03               	btfss	3,2
  6423  1588  0008               	return
  6424                           
  6425                           ;main.c: 532: if (zoneActMode == 0 && zoneCheck == 0 && durationChange == 0 && alertChan
      +                          ge == 0 && tempChange == 0 && delayChange == 0 && dateChange == 0) {
  6426  1589  084B               	movf	_zoneActMode,w
  6427  158A  1D03               	btfss	3,2
  6428  158B  0008               	return
  6429  158C  084A               	movf	_zoneCheck,w
  6430  158D  1D03               	btfss	3,2
  6431  158E  0008               	return
  6432  158F  082A               	movf	_durationChange,w
  6433  1590  1D03               	btfss	3,2
  6434  1591  0008               	return
  6435  1592  0829               	movf	_alertChange,w
  6436  1593  1D03               	btfss	3,2
  6437  1594  0008               	return
  6438  1595  0841               	movf	_tempChange,w
  6439  1596  1D03               	btfss	3,2
  6440  1597  0008               	return
  6441  1598  083E               	movf	_delayChange,w
  6442  1599  1D03               	btfss	3,2
  6443  159A  0008               	return
  6444  159B  083F               	movf	_dateChange,w
  6445  159C  1D03               	btfss	3,2
  6446  159D  0008               	return
  6447                           
  6448                           ;main.c: 533: timeChange = 1;
  6449  159E  01C0               	clrf	_timeChange
  6450  159F  0AC0               	incf	_timeChange,f
  6451  15A0  0008               	return
  6452  15A1                     __end_of_changeTimeMode:	
  6453                           
  6454                           	psect	text39
  6455  05D1                     __ptext39:	
  6456 ;; *************** function _changeTime *****************
  6457 ;; Defined at:
  6458 ;;		line 537 in file "main.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  hourunits       1    5[BANK0h] unsigned char 
  6463 ;;  hourtens        1    4[BANK0h] unsigned char 
  6464 ;;  minunits        1    3[BANK0h] unsigned char 
  6465 ;;  mintens         1    2[BANK0h] unsigned char 
  6466 ;;  secunits        1    1[BANK0h] unsigned char 
  6467 ;;  sectens         1    0[BANK0h] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0, pclath, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6477 ;;      Params:         0       0       0       0       0       0
  6478 ;;      Locals:         0       6       0       0       0       0
  6479 ;;      Temps:          3       0       0       0       0       0
  6480 ;;      Totals:         3       6       0       0       0       0
  6481 ;;Total ram usage:        9 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    4
  6484 ;; This function calls:
  6485 ;;		_LCDdelay2
  6486 ;;		_LCDsetup
  6487 ;;		___awdiv
  6488 ;;		___awmod
  6489 ;;		_clearDisplay
  6490 ;;		_resetCursor
  6491 ;;		_writeChar
  6492 ;; This function is called by:
  6493 ;;		_main
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function _changeTime
  6499  05D1                     _changeTime:	
  6500                           
  6501                           ;main.c: 538: char sectens = table1[0]/10;
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _changeTime: [wreg+status,2+status,0+pclath+cstack]
  6505  05D1  300A               	movlw	10
  6506  05D2  00F0               	movwf	___awdiv@divisor
  6507  05D3  3000               	movlw	0
  6508  05D4  00F1               	movwf	___awdiv@divisor+1
  6509  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  6510  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  6511  05D7  0831               	movf	_table1,w
  6512  05D8  00F9               	movwf	??_changeTime
  6513  05D9  01FA               	clrf	??_changeTime+1
  6514  05DA  0879               	movf	??_changeTime,w
  6515  05DB  00F2               	movwf	___awdiv@dividend
  6516  05DC  087A               	movf	??_changeTime+1,w
  6517  05DD  00F3               	movwf	___awdiv@dividend+1
  6518  05DE  120A  158A  2500  120A  118A  	fcall	___awdiv
  6519  05E3  0870               	movf	?___awdiv,w
  6520  05E4  00FB               	movwf	??_changeTime+2
  6521  05E5  087B               	movf	??_changeTime+2,w
  6522  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  6523  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  6524  05E8  00D2               	movwf	changeTime@sectens
  6525                           
  6526                           ;main.c: 539: char secunits = table1[0]%10;
  6527  05E9  300A               	movlw	10
  6528  05EA  00F0               	movwf	___awmod@divisor
  6529  05EB  3000               	movlw	0
  6530  05EC  00F1               	movwf	___awmod@divisor+1
  6531  05ED  0831               	movf	_table1,w
  6532  05EE  00F9               	movwf	??_changeTime
  6533  05EF  01FA               	clrf	??_changeTime+1
  6534  05F0  0879               	movf	??_changeTime,w
  6535  05F1  00F2               	movwf	___awmod@dividend
  6536  05F2  087A               	movf	??_changeTime+1,w
  6537  05F3  00F3               	movwf	___awmod@dividend+1
  6538  05F4  120A  158A  240E  120A  118A  	fcall	___awmod
  6539  05F9  0870               	movf	?___awmod,w
  6540  05FA  00FB               	movwf	??_changeTime+2
  6541  05FB  087B               	movf	??_changeTime+2,w
  6542  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  6543  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  6544  05FE  00D3               	movwf	changeTime@secunits
  6545                           
  6546                           ;main.c: 540: char mintens = table1[1]/10;
  6547  05FF  300A               	movlw	10
  6548  0600  00F0               	movwf	___awdiv@divisor
  6549  0601  3000               	movlw	0
  6550  0602  00F1               	movwf	___awdiv@divisor+1
  6551  0603  0832               	movf	_table1+1,w
  6552  0604  00F9               	movwf	??_changeTime
  6553  0605  01FA               	clrf	??_changeTime+1
  6554  0606  0879               	movf	??_changeTime,w
  6555  0607  00F2               	movwf	___awdiv@dividend
  6556  0608  087A               	movf	??_changeTime+1,w
  6557  0609  00F3               	movwf	___awdiv@dividend+1
  6558  060A  120A  158A  2500  120A  118A  	fcall	___awdiv
  6559  060F  0870               	movf	?___awdiv,w
  6560  0610  00FB               	movwf	??_changeTime+2
  6561  0611  087B               	movf	??_changeTime+2,w
  6562  0612  1283               	bcf	3,5	;RP0=0, select bank0
  6563  0613  1303               	bcf	3,6	;RP1=0, select bank0
  6564  0614  00D4               	movwf	changeTime@mintens
  6565                           
  6566                           ;main.c: 541: char minunits = table1[1]%10;
  6567  0615  300A               	movlw	10
  6568  0616  00F0               	movwf	___awmod@divisor
  6569  0617  3000               	movlw	0
  6570  0618  00F1               	movwf	___awmod@divisor+1
  6571  0619  0832               	movf	_table1+1,w
  6572  061A  00F9               	movwf	??_changeTime
  6573  061B  01FA               	clrf	??_changeTime+1
  6574  061C  0879               	movf	??_changeTime,w
  6575  061D  00F2               	movwf	___awmod@dividend
  6576  061E  087A               	movf	??_changeTime+1,w
  6577  061F  00F3               	movwf	___awmod@dividend+1
  6578  0620  120A  158A  240E  120A  118A  	fcall	___awmod
  6579  0625  0870               	movf	?___awmod,w
  6580  0626  00FB               	movwf	??_changeTime+2
  6581  0627  087B               	movf	??_changeTime+2,w
  6582  0628  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0629  1303               	bcf	3,6	;RP1=0, select bank0
  6584  062A  00D5               	movwf	changeTime@minunits
  6585                           
  6586                           ;main.c: 542: char hourtens = table1[2]/10;
  6587  062B  300A               	movlw	10
  6588  062C  00F0               	movwf	___awdiv@divisor
  6589  062D  3000               	movlw	0
  6590  062E  00F1               	movwf	___awdiv@divisor+1
  6591  062F  0833               	movf	_table1+2,w
  6592  0630  00F9               	movwf	??_changeTime
  6593  0631  01FA               	clrf	??_changeTime+1
  6594  0632  0879               	movf	??_changeTime,w
  6595  0633  00F2               	movwf	___awdiv@dividend
  6596  0634  087A               	movf	??_changeTime+1,w
  6597  0635  00F3               	movwf	___awdiv@dividend+1
  6598  0636  120A  158A  2500  120A  118A  	fcall	___awdiv
  6599  063B  0870               	movf	?___awdiv,w
  6600  063C  00FB               	movwf	??_changeTime+2
  6601  063D  087B               	movf	??_changeTime+2,w
  6602  063E  1283               	bcf	3,5	;RP0=0, select bank0
  6603  063F  1303               	bcf	3,6	;RP1=0, select bank0
  6604  0640  00D6               	movwf	changeTime@hourtens
  6605                           
  6606                           ;main.c: 543: char hourunits = table1[2]%10;
  6607  0641  300A               	movlw	10
  6608  0642  00F0               	movwf	___awmod@divisor
  6609  0643  3000               	movlw	0
  6610  0644  00F1               	movwf	___awmod@divisor+1
  6611  0645  0833               	movf	_table1+2,w
  6612  0646  00F9               	movwf	??_changeTime
  6613  0647  01FA               	clrf	??_changeTime+1
  6614  0648  0879               	movf	??_changeTime,w
  6615  0649  00F2               	movwf	___awmod@dividend
  6616  064A  087A               	movf	??_changeTime+1,w
  6617  064B  00F3               	movwf	___awmod@dividend+1
  6618  064C  120A  158A  240E  120A  118A  	fcall	___awmod
  6619  0651  0870               	movf	?___awmod,w
  6620  0652  00FB               	movwf	??_changeTime+2
  6621  0653  087B               	movf	??_changeTime+2,w
  6622  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6623  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6624  0656  00D7               	movwf	changeTime@hourunits
  6625                           
  6626                           ;main.c: 544: if (timeChange == 1) {
  6627  0657  0340               	decf	_timeChange,w
  6628  0658  1D03               	btfss	3,2
  6629  0659  0008               	return
  6630                           
  6631                           ;main.c: 545: if (row == 1 && col == 3) {
  6632  065A  0338               	decf	_row,w
  6633  065B  0439               	iorwf	_row+1,w
  6634  065C  1D03               	btfss	3,2
  6635  065D  2E92               	goto	l5061
  6636  065E  3003               	movlw	3
  6637  065F  063A               	xorwf	_col,w
  6638  0660  043B               	iorwf	_col+1,w
  6639  0661  1D03               	btfss	3,2
  6640  0662  2E92               	goto	l5061
  6641                           
  6642                           ;main.c: 546: table1[0] ++;
  6643  0663  3001               	movlw	1
  6644  0664  00F9               	movwf	??_changeTime
  6645  0665  0879               	movf	??_changeTime,w
  6646  0666  07B1               	addwf	_table1,f
  6647                           
  6648                           ;main.c: 547: LCDsetup ();
  6649  0667  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  6650                           
  6651                           ;main.c: 548: clearDisplay ();
  6652  066C  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  6653                           
  6654                           ;main.c: 549: resetCursor();
  6655  0671  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  6656                           
  6657                           ;main.c: 550: writeChar('\'' + sectens - 30 + '\'');
  6658  0676  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0677  1303               	bcf	3,6	;RP1=0, select bank0
  6660  0678  0852               	movf	changeTime@sectens,w
  6661  0679  3E30               	addlw	48
  6662  067A  160A  118A  2535  120A  118A  	fcall	_writeChar
  6663                           
  6664                           ;main.c: 551: writeChar('\''+secunits-30+'\'');
  6665  067F  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0680  1303               	bcf	3,6	;RP1=0, select bank0
  6667  0681  0853               	movf	changeTime@secunits,w
  6668  0682  3E30               	addlw	48
  6669  0683  160A  118A  2535  120A  118A  	fcall	_writeChar
  6670                           
  6671                           ;main.c: 552: LCDdelay2();
  6672  0688  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6673                           
  6674                           ;main.c: 553: LCDdelay2();
  6675  068D  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6676  0692                     l5061:	
  6677                           
  6678                           ;main.c: 554: }
  6679                           ;main.c: 558: if (row == 2 && col == 3) {
  6680  0692  3002               	movlw	2
  6681  0693  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0694  1303               	bcf	3,6	;RP1=0, select bank0
  6683  0695  0638               	xorwf	_row,w
  6684  0696  0439               	iorwf	_row+1,w
  6685  0697  1D03               	btfss	3,2
  6686  0698  2ECB               	goto	l5081
  6687  0699  3003               	movlw	3
  6688  069A  063A               	xorwf	_col,w
  6689  069B  043B               	iorwf	_col+1,w
  6690  069C  1D03               	btfss	3,2
  6691  069D  2ECB               	goto	l5081
  6692                           
  6693                           ;main.c: 559: table1[0] --;
  6694  069E  3001               	movlw	1
  6695  069F  02B1               	subwf	_table1,f
  6696                           
  6697                           ;main.c: 560: LCDsetup ();
  6698  06A0  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  6699                           
  6700                           ;main.c: 561: clearDisplay ();
  6701  06A5  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  6702                           
  6703                           ;main.c: 562: resetCursor();
  6704  06AA  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  6705                           
  6706                           ;main.c: 563: writeChar('\'' + sectens - 30 + '\'');
  6707  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  6708  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  6709  06B1  0852               	movf	changeTime@sectens,w
  6710  06B2  3E30               	addlw	48
  6711  06B3  160A  118A  2535  120A  118A  	fcall	_writeChar
  6712                           
  6713                           ;main.c: 564: writeChar('\''+secunits-30+'\'');
  6714  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  6715  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  6716  06BA  0853               	movf	changeTime@secunits,w
  6717  06BB  3E30               	addlw	48
  6718  06BC  160A  118A  2535  120A  118A  	fcall	_writeChar
  6719                           
  6720                           ;main.c: 565: LCDdelay2();
  6721  06C1  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6722                           
  6723                           ;main.c: 566: LCDdelay2();
  6724  06C6  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6725  06CB                     l5081:	
  6726                           
  6727                           ;main.c: 567: }
  6728                           ;main.c: 570: if (row == 1 && col == 2) {
  6729  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  6730  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  6731  06CD  0338               	decf	_row,w
  6732  06CE  0439               	iorwf	_row+1,w
  6733  06CF  1D03               	btfss	3,2
  6734  06D0  2F05               	goto	l5101
  6735  06D1  3002               	movlw	2
  6736  06D2  063A               	xorwf	_col,w
  6737  06D3  043B               	iorwf	_col+1,w
  6738  06D4  1D03               	btfss	3,2
  6739  06D5  2F05               	goto	l5101
  6740                           
  6741                           ;main.c: 571: table1[1] ++;
  6742  06D6  3001               	movlw	1
  6743  06D7  00F9               	movwf	??_changeTime
  6744  06D8  0879               	movf	??_changeTime,w
  6745  06D9  07B2               	addwf	_table1+1,f
  6746                           
  6747                           ;main.c: 572: LCDsetup ();
  6748  06DA  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  6749                           
  6750                           ;main.c: 573: clearDisplay ();
  6751  06DF  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  6752                           
  6753                           ;main.c: 574: resetCursor();
  6754  06E4  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  6755                           
  6756                           ;main.c: 575: writeChar('\'' + mintens - 30 + '\'');
  6757  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6758  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  6759  06EB  0854               	movf	changeTime@mintens,w
  6760  06EC  3E30               	addlw	48
  6761  06ED  160A  118A  2535  120A  118A  	fcall	_writeChar
  6762                           
  6763                           ;main.c: 576: writeChar('\''+minunits-30+'\'');
  6764  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  6765  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  6766  06F4  0855               	movf	changeTime@minunits,w
  6767  06F5  3E30               	addlw	48
  6768  06F6  160A  118A  2535  120A  118A  	fcall	_writeChar
  6769                           
  6770                           ;main.c: 577: LCDdelay2();
  6771  06FB  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6772                           
  6773                           ;main.c: 578: LCDdelay2();
  6774  0700  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6775  0705                     l5101:	
  6776                           
  6777                           ;main.c: 579: }
  6778                           ;main.c: 583: if (row == 2 && col == 2) {
  6779  0705  3002               	movlw	2
  6780  0706  1283               	bcf	3,5	;RP0=0, select bank0
  6781  0707  1303               	bcf	3,6	;RP1=0, select bank0
  6782  0708  0638               	xorwf	_row,w
  6783  0709  0439               	iorwf	_row+1,w
  6784  070A  1D03               	btfss	3,2
  6785  070B  2F3E               	goto	l5121
  6786  070C  3002               	movlw	2
  6787  070D  063A               	xorwf	_col,w
  6788  070E  043B               	iorwf	_col+1,w
  6789  070F  1D03               	btfss	3,2
  6790  0710  2F3E               	goto	l5121
  6791                           
  6792                           ;main.c: 584: table1[1] --;
  6793  0711  3001               	movlw	1
  6794  0712  02B2               	subwf	_table1+1,f
  6795                           
  6796                           ;main.c: 585: LCDsetup ();
  6797  0713  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  6798                           
  6799                           ;main.c: 586: clearDisplay ();
  6800  0718  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  6801                           
  6802                           ;main.c: 587: resetCursor();
  6803  071D  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  6804                           
  6805                           ;main.c: 588: writeChar('\'' + mintens - 30 + '\'');
  6806  0722  1283               	bcf	3,5	;RP0=0, select bank0
  6807  0723  1303               	bcf	3,6	;RP1=0, select bank0
  6808  0724  0854               	movf	changeTime@mintens,w
  6809  0725  3E30               	addlw	48
  6810  0726  160A  118A  2535  120A  118A  	fcall	_writeChar
  6811                           
  6812                           ;main.c: 589: writeChar('\''+minunits-30+'\'');
  6813  072B  1283               	bcf	3,5	;RP0=0, select bank0
  6814  072C  1303               	bcf	3,6	;RP1=0, select bank0
  6815  072D  0855               	movf	changeTime@minunits,w
  6816  072E  3E30               	addlw	48
  6817  072F  160A  118A  2535  120A  118A  	fcall	_writeChar
  6818                           
  6819                           ;main.c: 590: LCDdelay2();
  6820  0734  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6821                           
  6822                           ;main.c: 591: LCDdelay2();
  6823  0739  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6824  073E                     l5121:	
  6825                           
  6826                           ;main.c: 592: }
  6827                           ;main.c: 595: if (row == 1 && col == 1) {
  6828  073E  1283               	bcf	3,5	;RP0=0, select bank0
  6829  073F  1303               	bcf	3,6	;RP1=0, select bank0
  6830  0740  0338               	decf	_row,w
  6831  0741  0439               	iorwf	_row+1,w
  6832  0742  1D03               	btfss	3,2
  6833  0743  2F77               	goto	l5141
  6834  0744  033A               	decf	_col,w
  6835  0745  043B               	iorwf	_col+1,w
  6836  0746  1D03               	btfss	3,2
  6837  0747  2F77               	goto	l5141
  6838                           
  6839                           ;main.c: 596: table1[2] ++;
  6840  0748  3001               	movlw	1
  6841  0749  00F9               	movwf	??_changeTime
  6842  074A  0879               	movf	??_changeTime,w
  6843  074B  07B3               	addwf	_table1+2,f
  6844                           
  6845                           ;main.c: 597: LCDsetup ();
  6846  074C  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  6847                           
  6848                           ;main.c: 598: clearDisplay ();
  6849  0751  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  6850                           
  6851                           ;main.c: 599: resetCursor();
  6852  0756  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  6853                           
  6854                           ;main.c: 600: writeChar('\'' + hourtens - 30 + '\'');
  6855  075B  1283               	bcf	3,5	;RP0=0, select bank0
  6856  075C  1303               	bcf	3,6	;RP1=0, select bank0
  6857  075D  0856               	movf	changeTime@hourtens,w
  6858  075E  3E30               	addlw	48
  6859  075F  160A  118A  2535  120A  118A  	fcall	_writeChar
  6860                           
  6861                           ;main.c: 601: writeChar('\''+hourunits-30+'\'');
  6862  0764  1283               	bcf	3,5	;RP0=0, select bank0
  6863  0765  1303               	bcf	3,6	;RP1=0, select bank0
  6864  0766  0857               	movf	changeTime@hourunits,w
  6865  0767  3E30               	addlw	48
  6866  0768  160A  118A  2535  120A  118A  	fcall	_writeChar
  6867                           
  6868                           ;main.c: 602: LCDdelay2();
  6869  076D  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6870                           
  6871                           ;main.c: 603: LCDdelay2();
  6872  0772  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6873  0777                     l5141:	
  6874                           
  6875                           ;main.c: 604: }
  6876                           ;main.c: 608: if (row == 2 && col == 1) {
  6877  0777  3002               	movlw	2
  6878  0778  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0779  1303               	bcf	3,6	;RP1=0, select bank0
  6880  077A  0638               	xorwf	_row,w
  6881  077B  0439               	iorwf	_row+1,w
  6882  077C  1D03               	btfss	3,2
  6883  077D  0008               	return
  6884  077E  033A               	decf	_col,w
  6885  077F  043B               	iorwf	_col+1,w
  6886  0780  1D03               	btfss	3,2
  6887  0781  0008               	return
  6888                           
  6889                           ;main.c: 609: table1[2] --;
  6890  0782  3001               	movlw	1
  6891  0783  02B3               	subwf	_table1+2,f
  6892                           
  6893                           ;main.c: 610: LCDsetup ();
  6894  0784  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  6895                           
  6896                           ;main.c: 611: clearDisplay ();
  6897  0789  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  6898                           
  6899                           ;main.c: 612: resetCursor();
  6900  078E  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  6901                           
  6902                           ;main.c: 613: writeChar('\'' + hourtens - 30 + '\'');
  6903  0793  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0794  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0795  0856               	movf	changeTime@hourtens,w
  6906  0796  3E30               	addlw	48
  6907  0797  160A  118A  2535  120A  118A  	fcall	_writeChar
  6908                           
  6909                           ;main.c: 614: writeChar('\''+hourunits-30+'\'');
  6910  079C  1283               	bcf	3,5	;RP0=0, select bank0
  6911  079D  1303               	bcf	3,6	;RP1=0, select bank0
  6912  079E  0857               	movf	changeTime@hourunits,w
  6913  079F  3E30               	addlw	48
  6914  07A0  160A  118A  2535  120A  118A  	fcall	_writeChar
  6915                           
  6916                           ;main.c: 615: LCDdelay2();
  6917  07A5  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  6918                           
  6919                           ;main.c: 616: LCDdelay2();
  6920  07AA  160A  118A  240C   	fcall	_LCDdelay2
  6921  07AD  0008               	return
  6922  07AE                     __end_of_changeTime:	
  6923                           
  6924                           	psect	text40
  6925  15EA                     __ptext40:	
  6926 ;; *************** function _changeTempMode *****************
  6927 ;; Defined at:
  6928 ;;		line 492 in file "main.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6942 ;;      Params:         0       0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0
  6945 ;;      Totals:         0       0       0       0       0       0
  6946 ;;Total ram usage:        0 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    5
  6949 ;; This function calls:
  6950 ;;		_changeTriggerMessage
  6951 ;; This function is called by:
  6952 ;;		_main
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           
  6957                           ;psect for function _changeTempMode
  6958  15EA                     _changeTempMode:	
  6959                           
  6960                           ;main.c: 493: if (row == 1 && col == 2) {
  6961                           
  6962                           ;incstack = 0
  6963                           ; Regs used in _changeTempMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6964  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  6965  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  6966  15EC  0338               	decf	_row,w
  6967  15ED  0439               	iorwf	_row+1,w
  6968  15EE  1D03               	btfss	3,2
  6969  15EF  0008               	return
  6970  15F0  3002               	movlw	2
  6971  15F1  063A               	xorwf	_col,w
  6972  15F2  043B               	iorwf	_col+1,w
  6973  15F3  1D03               	btfss	3,2
  6974  15F4  0008               	return
  6975                           
  6976                           ;main.c: 495: if (zoneActMode == 0 && zoneCheck == 0 && tempChange == 0 && delayChange =
      +                          = 0 && timeChange == 0 && dateChange == 0) {
  6977  15F5  084B               	movf	_zoneActMode,w
  6978  15F6  1D03               	btfss	3,2
  6979  15F7  0008               	return
  6980  15F8  084A               	movf	_zoneCheck,w
  6981  15F9  1D03               	btfss	3,2
  6982  15FA  0008               	return
  6983  15FB  0841               	movf	_tempChange,w
  6984  15FC  1D03               	btfss	3,2
  6985  15FD  0008               	return
  6986  15FE  083E               	movf	_delayChange,w
  6987  15FF  1D03               	btfss	3,2
  6988  1600  0008               	return
  6989  1601  0840               	movf	_timeChange,w
  6990  1602  1D03               	btfss	3,2
  6991  1603  0008               	return
  6992  1604  083F               	movf	_dateChange,w
  6993  1605  1D03               	btfss	3,2
  6994  1606  0008               	return
  6995                           
  6996                           ;main.c: 496: changeTriggerMessage ();
  6997  1607  120A  158A  2026   	fcall	_changeTriggerMessage
  6998                           
  6999                           ;main.c: 497: tempChange = 1;
  7000  160A  1283               	bcf	3,5	;RP0=0, select bank0
  7001  160B  1303               	bcf	3,6	;RP1=0, select bank0
  7002  160C  01C1               	clrf	_tempChange
  7003  160D  0AC1               	incf	_tempChange,f
  7004  160E  0008               	return
  7005  160F                     __end_of_changeTempMode:	
  7006                           
  7007                           	psect	text41
  7008  0826                     __ptext41:	
  7009 ;; *************** function _changeTriggerMessage *****************
  7010 ;; Defined at:
  7011 ;;		line 345 in file "main.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  messagerow     12    0[BANK0h] unsigned char [12]
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      void 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7025 ;;      Params:         0       0       0       0       0       0
  7026 ;;      Locals:         0      12       0       0       0       0
  7027 ;;      Temps:          4       0       0       0       0       0
  7028 ;;      Totals:         4      12       0       0       0       0
  7029 ;;Total ram usage:       16 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    4
  7032 ;; This function calls:
  7033 ;;		_LCDdelay3
  7034 ;;		_clearDisplay
  7035 ;;		_resetCursor
  7036 ;;		_writeMessageline1
  7037 ;; This function is called by:
  7038 ;;		_changeTempMode
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _changeTriggerMessage
  7044  0826                     _changeTriggerMessage:	
  7045                           
  7046                           ;main.c: 346: clearDisplay ();
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _changeTriggerMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7050  0826  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  7051                           
  7052                           ;main.c: 347: resetCursor();
  7053  082B  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  7054                           
  7055                           ;main.c: 348: char messagerow[] = "Change Temp";
  7056  0830  3052               	movlw	changeTriggerMessage@messagerow& (0+255)
  7057  0831  0084               	movwf	4
  7058  0832  3051               	movlw	low changeTriggerMessage@F1258
  7059  0833  00F8               	movwf	??_changeTriggerMessage
  7060  0834  0804               	movf	4,w
  7061  0835  00F9               	movwf	??_changeTriggerMessage+1
  7062  0836  300C               	movlw	12
  7063  0837  00FA               	movwf	??_changeTriggerMessage+2
  7064  0838                     u6000:	
  7065  0838  0878               	movf	??_changeTriggerMessage,w
  7066  0839  0084               	movwf	4
  7067  083A  1783               	bsf	3,7	;select IRP bank2
  7068  083B  0800               	movf	0,w
  7069  083C  00FB               	movwf	??_changeTriggerMessage+3
  7070  083D  0AF8               	incf	??_changeTriggerMessage,f
  7071  083E  0879               	movf	??_changeTriggerMessage+1,w
  7072  083F  0084               	movwf	4
  7073  0840  1383               	bcf	3,7	;select IRP bank0
  7074  0841  087B               	movf	??_changeTriggerMessage+3,w
  7075  0842  0080               	movwf	0
  7076  0843  0AF9               	incf	??_changeTriggerMessage+1,f
  7077  0844  0BFA               	decfsz	??_changeTriggerMessage+2,f
  7078  0845  2838               	goto	u6000
  7079                           
  7080                           ;main.c: 349: writeMessageline1(messagerow);
  7081  0846  3052               	movlw	(low (changeTriggerMessage@messagerow| 0))& (0+255)
  7082  0847  160A  118A  23B6  120A  158A  	fcall	_writeMessageline1
  7083                           
  7084                           ;main.c: 350: LCDdelay3 ();
  7085  084C  160A  118A  23FC   	fcall	_LCDdelay3
  7086  084F  0008               	return
  7087  0850                     __end_of_changeTriggerMessage:	
  7088                           
  7089                           	psect	text42
  7090  0030                     __ptext42:	
  7091 ;; *************** function _changeTemp *****************
  7092 ;; Defined at:
  7093 ;;		line 501 in file "main.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  units           1   13[COMMON] unsigned char 
  7098 ;;  tens            1   12[COMMON] unsigned char 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0, pclath, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7108 ;;      Params:         0       0       0       0       0       0
  7109 ;;      Locals:         2       0       0       0       0       0
  7110 ;;      Temps:          3       0       0       0       0       0
  7111 ;;      Totals:         5       0       0       0       0       0
  7112 ;;Total ram usage:        5 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; Hardware stack levels required when called:    4
  7115 ;; This function calls:
  7116 ;;		_LCDdelay2
  7117 ;;		_LCDsetup
  7118 ;;		___awdiv
  7119 ;;		___awmod
  7120 ;;		_clearDisplay
  7121 ;;		_resetCursor
  7122 ;;		_writeChar
  7123 ;; This function is called by:
  7124 ;;		_main
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           
  7129                           ;psect for function _changeTemp
  7130  0030                     _changeTemp:	
  7131                           
  7132                           ;main.c: 502: char tens = TriggerTemp/10;
  7133                           
  7134                           ;incstack = 0
  7135                           ; Regs used in _changeTemp: [wreg+status,2+status,0+pclath+cstack]
  7136  0030  300A               	movlw	10
  7137  0031  00F0               	movwf	___awdiv@divisor
  7138  0032  3000               	movlw	0
  7139  0033  00F1               	movwf	___awdiv@divisor+1
  7140  0034  1283               	bcf	3,5	;RP0=0, select bank0
  7141  0035  1303               	bcf	3,6	;RP1=0, select bank0
  7142  0036  083D               	movf	_TriggerTemp,w
  7143  0037  00F9               	movwf	??_changeTemp
  7144  0038  01FA               	clrf	??_changeTemp+1
  7145  0039  0879               	movf	??_changeTemp,w
  7146  003A  00F2               	movwf	___awdiv@dividend
  7147  003B  087A               	movf	??_changeTemp+1,w
  7148  003C  00F3               	movwf	___awdiv@dividend+1
  7149  003D  120A  158A  2500  120A  118A  	fcall	___awdiv
  7150  0042  0870               	movf	?___awdiv,w
  7151  0043  00FB               	movwf	??_changeTemp+2
  7152  0044  087B               	movf	??_changeTemp+2,w
  7153  0045  00FC               	movwf	changeTemp@tens
  7154                           
  7155                           ;main.c: 503: char units = TriggerTemp%10;
  7156  0046  300A               	movlw	10
  7157  0047  00F0               	movwf	___awmod@divisor
  7158  0048  3000               	movlw	0
  7159  0049  00F1               	movwf	___awmod@divisor+1
  7160  004A  1283               	bcf	3,5	;RP0=0, select bank0
  7161  004B  1303               	bcf	3,6	;RP1=0, select bank0
  7162  004C  083D               	movf	_TriggerTemp,w
  7163  004D  00F9               	movwf	??_changeTemp
  7164  004E  01FA               	clrf	??_changeTemp+1
  7165  004F  0879               	movf	??_changeTemp,w
  7166  0050  00F2               	movwf	___awmod@dividend
  7167  0051  087A               	movf	??_changeTemp+1,w
  7168  0052  00F3               	movwf	___awmod@dividend+1
  7169  0053  120A  158A  240E  120A  118A  	fcall	___awmod
  7170  0058  0870               	movf	?___awmod,w
  7171  0059  00FB               	movwf	??_changeTemp+2
  7172  005A  087B               	movf	??_changeTemp+2,w
  7173  005B  00FD               	movwf	changeTemp@units
  7174                           
  7175                           ;main.c: 504: if (tempChange == 1) {
  7176  005C  1283               	bcf	3,5	;RP0=0, select bank0
  7177  005D  1303               	bcf	3,6	;RP1=0, select bank0
  7178  005E  0341               	decf	_tempChange,w
  7179  005F  1D03               	btfss	3,2
  7180  0060  2895               	goto	l5017
  7181                           
  7182                           ;main.c: 505: if (row == 1 && col == 3) {
  7183  0061  0338               	decf	_row,w
  7184  0062  0439               	iorwf	_row+1,w
  7185  0063  1D03               	btfss	3,2
  7186  0064  2895               	goto	l5017
  7187  0065  3003               	movlw	3
  7188  0066  063A               	xorwf	_col,w
  7189  0067  043B               	iorwf	_col+1,w
  7190  0068  1D03               	btfss	3,2
  7191  0069  2895               	goto	l5017
  7192                           
  7193                           ;main.c: 506: TriggerTemp ++;
  7194  006A  3001               	movlw	1
  7195  006B  00F9               	movwf	??_changeTemp
  7196  006C  0879               	movf	??_changeTemp,w
  7197  006D  07BD               	addwf	_TriggerTemp,f
  7198                           
  7199                           ;main.c: 507: LCDsetup ();
  7200  006E  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  7201                           
  7202                           ;main.c: 508: clearDisplay ();
  7203  0073  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  7204                           
  7205                           ;main.c: 509: resetCursor();
  7206  0078  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  7207                           
  7208                           ;main.c: 510: writeChar('\'' + tens - 30 + '\'');
  7209  007D  087C               	movf	changeTemp@tens,w
  7210  007E  3E30               	addlw	48
  7211  007F  160A  118A  2535  120A  118A  	fcall	_writeChar
  7212                           
  7213                           ;main.c: 511: writeChar('\''+units-30+'\'');
  7214  0084  087D               	movf	changeTemp@units,w
  7215  0085  3E30               	addlw	48
  7216  0086  160A  118A  2535  120A  118A  	fcall	_writeChar
  7217                           
  7218                           ;main.c: 512: LCDdelay2();
  7219  008B  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7220                           
  7221                           ;main.c: 513: LCDdelay2();
  7222  0090  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7223  0095                     l5017:	
  7224                           
  7225                           ;main.c: 514: }
  7226                           ;main.c: 515: }
  7227                           ;main.c: 518: if (row == 2 && col == 3) {
  7228  0095  3002               	movlw	2
  7229  0096  1283               	bcf	3,5	;RP0=0, select bank0
  7230  0097  1303               	bcf	3,6	;RP1=0, select bank0
  7231  0098  0638               	xorwf	_row,w
  7232  0099  0439               	iorwf	_row+1,w
  7233  009A  1D03               	btfss	3,2
  7234  009B  0008               	return
  7235  009C  3003               	movlw	3
  7236  009D  063A               	xorwf	_col,w
  7237  009E  043B               	iorwf	_col+1,w
  7238  009F  1D03               	btfss	3,2
  7239  00A0  0008               	return
  7240                           
  7241                           ;main.c: 519: TriggerTemp --;
  7242  00A1  3001               	movlw	1
  7243  00A2  02BD               	subwf	_TriggerTemp,f
  7244                           
  7245                           ;main.c: 520: LCDsetup ();
  7246  00A3  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  7247                           
  7248                           ;main.c: 521: clearDisplay ();
  7249  00A8  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  7250                           
  7251                           ;main.c: 522: resetCursor();
  7252  00AD  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  7253                           
  7254                           ;main.c: 523: writeChar('\'' + tens - 30 + '\'');
  7255  00B2  087C               	movf	changeTemp@tens,w
  7256  00B3  3E30               	addlw	48
  7257  00B4  160A  118A  2535  120A  118A  	fcall	_writeChar
  7258                           
  7259                           ;main.c: 524: writeChar('\''+units-30+'\'');
  7260  00B9  087D               	movf	changeTemp@units,w
  7261  00BA  3E30               	addlw	48
  7262  00BB  160A  118A  2535  120A  118A  	fcall	_writeChar
  7263                           
  7264                           ;main.c: 525: LCDdelay2();
  7265  00C0  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7266                           
  7267                           ;main.c: 526: LCDdelay2();
  7268  00C5  160A  118A  240C   	fcall	_LCDdelay2
  7269  00C8  0008               	return
  7270  00C9                     __end_of_changeTemp:	
  7271                           
  7272                           	psect	text43
  7273  14F3                     __ptext43:	
  7274 ;; *************** function _changeDelayMode *****************
  7275 ;; Defined at:
  7276 ;;		line 757 in file "main.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7290 ;;      Params:         0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_main
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function _changeDelayMode
  7305  14F3                     _changeDelayMode:	
  7306                           
  7307                           ;main.c: 758: if (row == 3 && col == 1) {
  7308                           
  7309                           ;incstack = 0
  7310                           ; Regs used in _changeDelayMode: [wreg+status,2+status,0]
  7311  14F3  3003               	movlw	3
  7312  14F4  1283               	bcf	3,5	;RP0=0, select bank0
  7313  14F5  1303               	bcf	3,6	;RP1=0, select bank0
  7314  14F6  0638               	xorwf	_row,w
  7315  14F7  0439               	iorwf	_row+1,w
  7316  14F8  1D03               	btfss	3,2
  7317  14F9  0008               	return
  7318  14FA  033A               	decf	_col,w
  7319  14FB  043B               	iorwf	_col+1,w
  7320  14FC  1D03               	btfss	3,2
  7321  14FD  0008               	return
  7322                           
  7323                           ;main.c: 760: if (zoneActMode == 0 && zoneCheck == 0 && tempChange == 0 && delayChange =
      +                          = 0 && timeChange == 0 && dateChange == 0) {
  7324  14FE  084B               	movf	_zoneActMode,w
  7325  14FF  1D03               	btfss	3,2
  7326  1500  0008               	return
  7327  1501  084A               	movf	_zoneCheck,w
  7328  1502  1D03               	btfss	3,2
  7329  1503  0008               	return
  7330  1504  0841               	movf	_tempChange,w
  7331  1505  1D03               	btfss	3,2
  7332  1506  0008               	return
  7333  1507  083E               	movf	_delayChange,w
  7334  1508  1D03               	btfss	3,2
  7335  1509  0008               	return
  7336  150A  0840               	movf	_timeChange,w
  7337  150B  1D03               	btfss	3,2
  7338  150C  0008               	return
  7339  150D  083F               	movf	_dateChange,w
  7340  150E  1D03               	btfss	3,2
  7341  150F  0008               	return
  7342                           
  7343                           ;main.c: 761: delayChange = 1;
  7344  1510  01BE               	clrf	_delayChange
  7345  1511  0ABE               	incf	_delayChange,f
  7346  1512  0008               	return
  7347  1513                     __end_of_changeDelayMode:	
  7348                           
  7349                           	psect	text44
  7350  0F67                     __ptext44:	
  7351 ;; *************** function _changeDelay *****************
  7352 ;; Defined at:
  7353 ;;		line 765 in file "main.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  units           1   13[COMMON] unsigned char 
  7358 ;;  tens            1   12[COMMON] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0, pclath, cstack
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7368 ;;      Params:         0       0       0       0       0       0
  7369 ;;      Locals:         2       0       0       0       0       0
  7370 ;;      Temps:          3       0       0       0       0       0
  7371 ;;      Totals:         5       0       0       0       0       0
  7372 ;;Total ram usage:        5 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    4
  7375 ;; This function calls:
  7376 ;;		_LCDdelay2
  7377 ;;		_LCDsetup
  7378 ;;		___awdiv
  7379 ;;		___awmod
  7380 ;;		_clearDisplay
  7381 ;;		_resetCursor
  7382 ;;		_writeChar
  7383 ;; This function is called by:
  7384 ;;		_main
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           
  7389                           ;psect for function _changeDelay
  7390  0F67                     _changeDelay:	
  7391                           
  7392                           ;main.c: 766: char tens = delayValue/10;
  7393                           
  7394                           ;incstack = 0
  7395                           ; Regs used in _changeDelay: [wreg+status,2+status,0+pclath+cstack]
  7396  0F67  300A               	movlw	10
  7397  0F68  00F0               	movwf	___awdiv@divisor
  7398  0F69  3000               	movlw	0
  7399  0F6A  00F1               	movwf	___awdiv@divisor+1
  7400  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  7402  0F6D  083C               	movf	_delayValue,w
  7403  0F6E  00F9               	movwf	??_changeDelay
  7404  0F6F  01FA               	clrf	??_changeDelay+1
  7405  0F70  0879               	movf	??_changeDelay,w
  7406  0F71  00F2               	movwf	___awdiv@dividend
  7407  0F72  087A               	movf	??_changeDelay+1,w
  7408  0F73  00F3               	movwf	___awdiv@dividend+1
  7409  0F74  120A  158A  2500  120A  158A  	fcall	___awdiv
  7410  0F79  0870               	movf	?___awdiv,w
  7411  0F7A  00FB               	movwf	??_changeDelay+2
  7412  0F7B  087B               	movf	??_changeDelay+2,w
  7413  0F7C  00FC               	movwf	changeDelay@tens
  7414                           
  7415                           ;main.c: 767: char units = delayValue%10;
  7416  0F7D  300A               	movlw	10
  7417  0F7E  00F0               	movwf	___awmod@divisor
  7418  0F7F  3000               	movlw	0
  7419  0F80  00F1               	movwf	___awmod@divisor+1
  7420  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  7421  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  7422  0F83  083C               	movf	_delayValue,w
  7423  0F84  00F9               	movwf	??_changeDelay
  7424  0F85  01FA               	clrf	??_changeDelay+1
  7425  0F86  0879               	movf	??_changeDelay,w
  7426  0F87  00F2               	movwf	___awmod@dividend
  7427  0F88  087A               	movf	??_changeDelay+1,w
  7428  0F89  00F3               	movwf	___awmod@dividend+1
  7429  0F8A  120A  158A  240E  120A  158A  	fcall	___awmod
  7430  0F8F  0870               	movf	?___awmod,w
  7431  0F90  00FB               	movwf	??_changeDelay+2
  7432  0F91  087B               	movf	??_changeDelay+2,w
  7433  0F92  00FD               	movwf	changeDelay@units
  7434                           
  7435                           ;main.c: 768: if (tempChange == 1) {
  7436  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  7437  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  7438  0F95  0341               	decf	_tempChange,w
  7439  0F96  1D03               	btfss	3,2
  7440  0F97  2FCC               	goto	l5309
  7441                           
  7442                           ;main.c: 769: if (row == 1 && col == 2) {
  7443  0F98  0338               	decf	_row,w
  7444  0F99  0439               	iorwf	_row+1,w
  7445  0F9A  1D03               	btfss	3,2
  7446  0F9B  2FCC               	goto	l5309
  7447  0F9C  3002               	movlw	2
  7448  0F9D  063A               	xorwf	_col,w
  7449  0F9E  043B               	iorwf	_col+1,w
  7450  0F9F  1D03               	btfss	3,2
  7451  0FA0  2FCC               	goto	l5309
  7452                           
  7453                           ;main.c: 770: delayValue ++;
  7454  0FA1  3001               	movlw	1
  7455  0FA2  00F9               	movwf	??_changeDelay
  7456  0FA3  0879               	movf	??_changeDelay,w
  7457  0FA4  07BC               	addwf	_delayValue,f
  7458                           
  7459                           ;main.c: 771: LCDsetup ();
  7460  0FA5  160A  118A  2488  120A  158A  	fcall	_LCDsetup
  7461                           
  7462                           ;main.c: 772: clearDisplay ();
  7463  0FAA  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  7464                           
  7465                           ;main.c: 773: resetCursor();
  7466  0FAF  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  7467                           
  7468                           ;main.c: 774: writeChar('\'' + tens - 30 + '\'');
  7469  0FB4  087C               	movf	changeDelay@tens,w
  7470  0FB5  3E30               	addlw	48
  7471  0FB6  160A  118A  2535  120A  158A  	fcall	_writeChar
  7472                           
  7473                           ;main.c: 775: writeChar('\''+units-30+'\'');
  7474  0FBB  087D               	movf	changeDelay@units,w
  7475  0FBC  3E30               	addlw	48
  7476  0FBD  160A  118A  2535  120A  158A  	fcall	_writeChar
  7477                           
  7478                           ;main.c: 776: LCDdelay2();
  7479  0FC2  160A  118A  240C  120A  158A  	fcall	_LCDdelay2
  7480                           
  7481                           ;main.c: 777: LCDdelay2();
  7482  0FC7  160A  118A  240C  120A  158A  	fcall	_LCDdelay2
  7483  0FCC                     l5309:	
  7484                           
  7485                           ;main.c: 778: }
  7486                           ;main.c: 779: }
  7487                           ;main.c: 782: if (row == 2 && col == 2) {
  7488  0FCC  3002               	movlw	2
  7489  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  7490  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  7491  0FCF  0638               	xorwf	_row,w
  7492  0FD0  0439               	iorwf	_row+1,w
  7493  0FD1  1D03               	btfss	3,2
  7494  0FD2  0008               	return
  7495  0FD3  3002               	movlw	2
  7496  0FD4  063A               	xorwf	_col,w
  7497  0FD5  043B               	iorwf	_col+1,w
  7498  0FD6  1D03               	btfss	3,2
  7499  0FD7  0008               	return
  7500                           
  7501                           ;main.c: 783: delayValue --;
  7502  0FD8  3001               	movlw	1
  7503  0FD9  02BC               	subwf	_delayValue,f
  7504                           
  7505                           ;main.c: 784: LCDsetup ();
  7506  0FDA  160A  118A  2488  120A  158A  	fcall	_LCDsetup
  7507                           
  7508                           ;main.c: 785: clearDisplay ();
  7509  0FDF  160A  118A  23A2  120A  158A  	fcall	_clearDisplay
  7510                           
  7511                           ;main.c: 786: resetCursor();
  7512  0FE4  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  7513                           
  7514                           ;main.c: 787: writeChar('\'' + tens - 30 + '\'');
  7515  0FE9  087C               	movf	changeDelay@tens,w
  7516  0FEA  3E30               	addlw	48
  7517  0FEB  160A  118A  2535  120A  158A  	fcall	_writeChar
  7518                           
  7519                           ;main.c: 788: writeChar('\''+units-30+'\'');
  7520  0FF0  087D               	movf	changeDelay@units,w
  7521  0FF1  3E30               	addlw	48
  7522  0FF2  160A  118A  2535  120A  158A  	fcall	_writeChar
  7523                           
  7524                           ;main.c: 789: LCDdelay2();
  7525  0FF7  160A  118A  240C  120A  158A  	fcall	_LCDdelay2
  7526                           
  7527                           ;main.c: 790: LCDdelay2();
  7528  0FFC  160A  118A  240C   	fcall	_LCDdelay2
  7529  0FFF  0008               	return
  7530  1000                     __end_of_changeDelay:	
  7531                           
  7532                           	psect	text45
  7533  1559                     __ptext45:	
  7534 ;; *************** function _changeDateMode *****************
  7535 ;; Defined at:
  7536 ;;		line 621 in file "main.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;		None
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg, status,2, status,0
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7550 ;;      Params:         0       0       0       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0
  7553 ;;      Totals:         0       0       0       0       0       0
  7554 ;;Total ram usage:        0 bytes
  7555 ;; Hardware stack levels used:    1
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_main
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           
  7564                           ;psect for function _changeDateMode
  7565  1559                     _changeDateMode:	
  7566                           
  7567                           ;main.c: 622: if (row == 4 && col == 3) {
  7568                           
  7569                           ;incstack = 0
  7570                           ; Regs used in _changeDateMode: [wreg+status,2+status,0]
  7571  1559  3004               	movlw	4
  7572  155A  1283               	bcf	3,5	;RP0=0, select bank0
  7573  155B  1303               	bcf	3,6	;RP1=0, select bank0
  7574  155C  0638               	xorwf	_row,w
  7575  155D  0439               	iorwf	_row+1,w
  7576  155E  1D03               	btfss	3,2
  7577  155F  0008               	return
  7578  1560  3003               	movlw	3
  7579  1561  063A               	xorwf	_col,w
  7580  1562  043B               	iorwf	_col+1,w
  7581  1563  1D03               	btfss	3,2
  7582  1564  0008               	return
  7583                           
  7584                           ;main.c: 624: if (zoneActMode == 0 && zoneCheck == 0 && durationChange == 0 && alertChan
      +                          ge == 0 && tempChange == 0 && timeChange == 0 && delayChange == 0) {
  7585  1565  084B               	movf	_zoneActMode,w
  7586  1566  1D03               	btfss	3,2
  7587  1567  0008               	return
  7588  1568  084A               	movf	_zoneCheck,w
  7589  1569  1D03               	btfss	3,2
  7590  156A  0008               	return
  7591  156B  082A               	movf	_durationChange,w
  7592  156C  1D03               	btfss	3,2
  7593  156D  0008               	return
  7594  156E  0829               	movf	_alertChange,w
  7595  156F  1D03               	btfss	3,2
  7596  1570  0008               	return
  7597  1571  0841               	movf	_tempChange,w
  7598  1572  1D03               	btfss	3,2
  7599  1573  0008               	return
  7600  1574  0840               	movf	_timeChange,w
  7601  1575  1D03               	btfss	3,2
  7602  1576  0008               	return
  7603  1577  083E               	movf	_delayChange,w
  7604  1578  1D03               	btfss	3,2
  7605  1579  0008               	return
  7606                           
  7607                           ;main.c: 625: dateChange = 1;
  7608  157A  01BF               	clrf	_dateChange
  7609  157B  0ABF               	incf	_dateChange,f
  7610  157C  0008               	return
  7611  157D                     __end_of_changeDateMode:	
  7612                           
  7613                           	psect	text46
  7614  03F4                     __ptext46:	
  7615 ;; *************** function _changeDate *****************
  7616 ;; Defined at:
  7617 ;;		line 629 in file "main.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;		None
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  yearunits       1    5[BANK0h] unsigned char 
  7622 ;;  yeartens        1    4[BANK0h] unsigned char 
  7623 ;;  monunits        1    3[BANK0h] unsigned char 
  7624 ;;  montens         1    2[BANK0h] unsigned char 
  7625 ;;  dayunits        1    1[BANK0h] unsigned char 
  7626 ;;  daytens         1    0[BANK0h] unsigned char 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      void 
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0, pclath, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7636 ;;      Params:         0       0       0       0       0       0
  7637 ;;      Locals:         0       6       0       0       0       0
  7638 ;;      Temps:          3       0       0       0       0       0
  7639 ;;      Totals:         3       6       0       0       0       0
  7640 ;;Total ram usage:        9 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    4
  7643 ;; This function calls:
  7644 ;;		_LCDdelay2
  7645 ;;		_LCDsetup
  7646 ;;		___awdiv
  7647 ;;		___awmod
  7648 ;;		_clearDisplay
  7649 ;;		_resetCursor
  7650 ;;		_writeChar
  7651 ;; This function is called by:
  7652 ;;		_main
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function _changeDate
  7658  03F4                     _changeDate:	
  7659                           
  7660                           ;main.c: 630: char daytens = table1[3]/10;
  7661                           
  7662                           ;incstack = 0
  7663                           ; Regs used in _changeDate: [wreg+status,2+status,0+pclath+cstack]
  7664  03F4  300A               	movlw	10
  7665  03F5  00F0               	movwf	___awdiv@divisor
  7666  03F6  3000               	movlw	0
  7667  03F7  00F1               	movwf	___awdiv@divisor+1
  7668  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  7669  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  7670  03FA  0834               	movf	_table1+3,w
  7671  03FB  00F9               	movwf	??_changeDate
  7672  03FC  01FA               	clrf	??_changeDate+1
  7673  03FD  0879               	movf	??_changeDate,w
  7674  03FE  00F2               	movwf	___awdiv@dividend
  7675  03FF  087A               	movf	??_changeDate+1,w
  7676  0400  00F3               	movwf	___awdiv@dividend+1
  7677  0401  120A  158A  2500  120A  118A  	fcall	___awdiv
  7678  0406  0870               	movf	?___awdiv,w
  7679  0407  00FB               	movwf	??_changeDate+2
  7680  0408  087B               	movf	??_changeDate+2,w
  7681  0409  1283               	bcf	3,5	;RP0=0, select bank0
  7682  040A  1303               	bcf	3,6	;RP1=0, select bank0
  7683  040B  00D2               	movwf	changeDate@daytens
  7684                           
  7685                           ;main.c: 631: char dayunits = table1[3]%10;
  7686  040C  300A               	movlw	10
  7687  040D  00F0               	movwf	___awmod@divisor
  7688  040E  3000               	movlw	0
  7689  040F  00F1               	movwf	___awmod@divisor+1
  7690  0410  0834               	movf	_table1+3,w
  7691  0411  00F9               	movwf	??_changeDate
  7692  0412  01FA               	clrf	??_changeDate+1
  7693  0413  0879               	movf	??_changeDate,w
  7694  0414  00F2               	movwf	___awmod@dividend
  7695  0415  087A               	movf	??_changeDate+1,w
  7696  0416  00F3               	movwf	___awmod@dividend+1
  7697  0417  120A  158A  240E  120A  118A  	fcall	___awmod
  7698  041C  0870               	movf	?___awmod,w
  7699  041D  00FB               	movwf	??_changeDate+2
  7700  041E  087B               	movf	??_changeDate+2,w
  7701  041F  1283               	bcf	3,5	;RP0=0, select bank0
  7702  0420  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0421  00D3               	movwf	changeDate@dayunits
  7704                           
  7705                           ;main.c: 632: char montens = table1[4]/10;
  7706  0422  300A               	movlw	10
  7707  0423  00F0               	movwf	___awdiv@divisor
  7708  0424  3000               	movlw	0
  7709  0425  00F1               	movwf	___awdiv@divisor+1
  7710  0426  0835               	movf	_table1+4,w
  7711  0427  00F9               	movwf	??_changeDate
  7712  0428  01FA               	clrf	??_changeDate+1
  7713  0429  0879               	movf	??_changeDate,w
  7714  042A  00F2               	movwf	___awdiv@dividend
  7715  042B  087A               	movf	??_changeDate+1,w
  7716  042C  00F3               	movwf	___awdiv@dividend+1
  7717  042D  120A  158A  2500  120A  118A  	fcall	___awdiv
  7718  0432  0870               	movf	?___awdiv,w
  7719  0433  00FB               	movwf	??_changeDate+2
  7720  0434  087B               	movf	??_changeDate+2,w
  7721  0435  1283               	bcf	3,5	;RP0=0, select bank0
  7722  0436  1303               	bcf	3,6	;RP1=0, select bank0
  7723  0437  00D4               	movwf	changeDate@montens
  7724                           
  7725                           ;main.c: 633: char monunits = table1[4]%10;
  7726  0438  300A               	movlw	10
  7727  0439  00F0               	movwf	___awmod@divisor
  7728  043A  3000               	movlw	0
  7729  043B  00F1               	movwf	___awmod@divisor+1
  7730  043C  0835               	movf	_table1+4,w
  7731  043D  00F9               	movwf	??_changeDate
  7732  043E  01FA               	clrf	??_changeDate+1
  7733  043F  0879               	movf	??_changeDate,w
  7734  0440  00F2               	movwf	___awmod@dividend
  7735  0441  087A               	movf	??_changeDate+1,w
  7736  0442  00F3               	movwf	___awmod@dividend+1
  7737  0443  120A  158A  240E  120A  118A  	fcall	___awmod
  7738  0448  0870               	movf	?___awmod,w
  7739  0449  00FB               	movwf	??_changeDate+2
  7740  044A  087B               	movf	??_changeDate+2,w
  7741  044B  1283               	bcf	3,5	;RP0=0, select bank0
  7742  044C  1303               	bcf	3,6	;RP1=0, select bank0
  7743  044D  00D5               	movwf	changeDate@monunits
  7744                           
  7745                           ;main.c: 634: char yeartens = table1[6]/10;
  7746  044E  300A               	movlw	10
  7747  044F  00F0               	movwf	___awdiv@divisor
  7748  0450  3000               	movlw	0
  7749  0451  00F1               	movwf	___awdiv@divisor+1
  7750  0452  0837               	movf	_table1+6,w
  7751  0453  00F9               	movwf	??_changeDate
  7752  0454  01FA               	clrf	??_changeDate+1
  7753  0455  0879               	movf	??_changeDate,w
  7754  0456  00F2               	movwf	___awdiv@dividend
  7755  0457  087A               	movf	??_changeDate+1,w
  7756  0458  00F3               	movwf	___awdiv@dividend+1
  7757  0459  120A  158A  2500  120A  118A  	fcall	___awdiv
  7758  045E  0870               	movf	?___awdiv,w
  7759  045F  00FB               	movwf	??_changeDate+2
  7760  0460  087B               	movf	??_changeDate+2,w
  7761  0461  1283               	bcf	3,5	;RP0=0, select bank0
  7762  0462  1303               	bcf	3,6	;RP1=0, select bank0
  7763  0463  00D6               	movwf	changeDate@yeartens
  7764                           
  7765                           ;main.c: 635: char yearunits = table1[6]%10;
  7766  0464  300A               	movlw	10
  7767  0465  00F0               	movwf	___awmod@divisor
  7768  0466  3000               	movlw	0
  7769  0467  00F1               	movwf	___awmod@divisor+1
  7770  0468  0837               	movf	_table1+6,w
  7771  0469  00F9               	movwf	??_changeDate
  7772  046A  01FA               	clrf	??_changeDate+1
  7773  046B  0879               	movf	??_changeDate,w
  7774  046C  00F2               	movwf	___awmod@dividend
  7775  046D  087A               	movf	??_changeDate+1,w
  7776  046E  00F3               	movwf	___awmod@dividend+1
  7777  046F  120A  158A  240E  120A  118A  	fcall	___awmod
  7778  0474  0870               	movf	?___awmod,w
  7779  0475  00FB               	movwf	??_changeDate+2
  7780  0476  087B               	movf	??_changeDate+2,w
  7781  0477  1283               	bcf	3,5	;RP0=0, select bank0
  7782  0478  1303               	bcf	3,6	;RP1=0, select bank0
  7783  0479  00D7               	movwf	changeDate@yearunits
  7784                           
  7785                           ;main.c: 636: if (dateChange == 1) {
  7786  047A  033F               	decf	_dateChange,w
  7787  047B  1D03               	btfss	3,2
  7788  047C  0008               	return
  7789                           
  7790                           ;main.c: 637: if (row == 1 && col == 3) {
  7791  047D  0338               	decf	_row,w
  7792  047E  0439               	iorwf	_row+1,w
  7793  047F  1D03               	btfss	3,2
  7794  0480  2CB5               	goto	l5185
  7795  0481  3003               	movlw	3
  7796  0482  063A               	xorwf	_col,w
  7797  0483  043B               	iorwf	_col+1,w
  7798  0484  1D03               	btfss	3,2
  7799  0485  2CB5               	goto	l5185
  7800                           
  7801                           ;main.c: 638: table1[3] ++;
  7802  0486  3001               	movlw	1
  7803  0487  00F9               	movwf	??_changeDate
  7804  0488  0879               	movf	??_changeDate,w
  7805  0489  07B4               	addwf	_table1+3,f
  7806                           
  7807                           ;main.c: 639: LCDsetup ();
  7808  048A  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  7809                           
  7810                           ;main.c: 640: clearDisplay ();
  7811  048F  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  7812                           
  7813                           ;main.c: 641: resetCursor();
  7814  0494  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  7815                           
  7816                           ;main.c: 642: writeChar('\'' + daytens - 30 + '\'');
  7817  0499  1283               	bcf	3,5	;RP0=0, select bank0
  7818  049A  1303               	bcf	3,6	;RP1=0, select bank0
  7819  049B  0852               	movf	changeDate@daytens,w
  7820  049C  3E30               	addlw	48
  7821  049D  160A  118A  2535  120A  118A  	fcall	_writeChar
  7822                           
  7823                           ;main.c: 643: writeChar('\''+dayunits-30+'\'');
  7824  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  7825  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  7826  04A4  0853               	movf	changeDate@dayunits,w
  7827  04A5  3E30               	addlw	48
  7828  04A6  160A  118A  2535  120A  118A  	fcall	_writeChar
  7829                           
  7830                           ;main.c: 644: LCDdelay2();
  7831  04AB  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7832                           
  7833                           ;main.c: 645: LCDdelay2();
  7834  04B0  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7835  04B5                     l5185:	
  7836                           
  7837                           ;main.c: 646: }
  7838                           ;main.c: 650: if (row == 2 && col == 3) {
  7839  04B5  3002               	movlw	2
  7840  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  7841  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  7842  04B8  0638               	xorwf	_row,w
  7843  04B9  0439               	iorwf	_row+1,w
  7844  04BA  1D03               	btfss	3,2
  7845  04BB  2CEE               	goto	l5205
  7846  04BC  3003               	movlw	3
  7847  04BD  063A               	xorwf	_col,w
  7848  04BE  043B               	iorwf	_col+1,w
  7849  04BF  1D03               	btfss	3,2
  7850  04C0  2CEE               	goto	l5205
  7851                           
  7852                           ;main.c: 651: table1[3] --;
  7853  04C1  3001               	movlw	1
  7854  04C2  02B4               	subwf	_table1+3,f
  7855                           
  7856                           ;main.c: 652: LCDsetup ();
  7857  04C3  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  7858                           
  7859                           ;main.c: 653: clearDisplay ();
  7860  04C8  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  7861                           
  7862                           ;main.c: 654: resetCursor();
  7863  04CD  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  7864                           
  7865                           ;main.c: 655: writeChar('\'' + daytens - 30 + '\'');
  7866  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  7867  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  7868  04D4  0852               	movf	changeDate@daytens,w
  7869  04D5  3E30               	addlw	48
  7870  04D6  160A  118A  2535  120A  118A  	fcall	_writeChar
  7871                           
  7872                           ;main.c: 656: writeChar('\''+dayunits-30+'\'');
  7873  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  7874  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  7875  04DD  0853               	movf	changeDate@dayunits,w
  7876  04DE  3E30               	addlw	48
  7877  04DF  160A  118A  2535  120A  118A  	fcall	_writeChar
  7878                           
  7879                           ;main.c: 657: LCDdelay2();
  7880  04E4  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7881                           
  7882                           ;main.c: 658: LCDdelay2();
  7883  04E9  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7884  04EE                     l5205:	
  7885                           
  7886                           ;main.c: 659: }
  7887                           ;main.c: 662: if (row == 1 && col == 2) {
  7888  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  7889  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  7890  04F0  0338               	decf	_row,w
  7891  04F1  0439               	iorwf	_row+1,w
  7892  04F2  1D03               	btfss	3,2
  7893  04F3  2D28               	goto	l5225
  7894  04F4  3002               	movlw	2
  7895  04F5  063A               	xorwf	_col,w
  7896  04F6  043B               	iorwf	_col+1,w
  7897  04F7  1D03               	btfss	3,2
  7898  04F8  2D28               	goto	l5225
  7899                           
  7900                           ;main.c: 663: table1[4] ++;
  7901  04F9  3001               	movlw	1
  7902  04FA  00F9               	movwf	??_changeDate
  7903  04FB  0879               	movf	??_changeDate,w
  7904  04FC  07B5               	addwf	_table1+4,f
  7905                           
  7906                           ;main.c: 664: LCDsetup ();
  7907  04FD  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  7908                           
  7909                           ;main.c: 665: clearDisplay ();
  7910  0502  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  7911                           
  7912                           ;main.c: 666: resetCursor();
  7913  0507  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  7914                           
  7915                           ;main.c: 667: writeChar('\'' + montens - 30 + '\'');
  7916  050C  1283               	bcf	3,5	;RP0=0, select bank0
  7917  050D  1303               	bcf	3,6	;RP1=0, select bank0
  7918  050E  0854               	movf	changeDate@montens,w
  7919  050F  3E30               	addlw	48
  7920  0510  160A  118A  2535  120A  118A  	fcall	_writeChar
  7921                           
  7922                           ;main.c: 668: writeChar('\''+monunits-30+'\'');
  7923  0515  1283               	bcf	3,5	;RP0=0, select bank0
  7924  0516  1303               	bcf	3,6	;RP1=0, select bank0
  7925  0517  0855               	movf	changeDate@monunits,w
  7926  0518  3E30               	addlw	48
  7927  0519  160A  118A  2535  120A  118A  	fcall	_writeChar
  7928                           
  7929                           ;main.c: 669: LCDdelay2();
  7930  051E  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7931                           
  7932                           ;main.c: 670: LCDdelay2();
  7933  0523  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7934  0528                     l5225:	
  7935                           
  7936                           ;main.c: 671: }
  7937                           ;main.c: 675: if (row == 2 && col == 2) {
  7938  0528  3002               	movlw	2
  7939  0529  1283               	bcf	3,5	;RP0=0, select bank0
  7940  052A  1303               	bcf	3,6	;RP1=0, select bank0
  7941  052B  0638               	xorwf	_row,w
  7942  052C  0439               	iorwf	_row+1,w
  7943  052D  1D03               	btfss	3,2
  7944  052E  2D61               	goto	l5245
  7945  052F  3002               	movlw	2
  7946  0530  063A               	xorwf	_col,w
  7947  0531  043B               	iorwf	_col+1,w
  7948  0532  1D03               	btfss	3,2
  7949  0533  2D61               	goto	l5245
  7950                           
  7951                           ;main.c: 676: table1[4] --;
  7952  0534  3001               	movlw	1
  7953  0535  02B5               	subwf	_table1+4,f
  7954                           
  7955                           ;main.c: 677: LCDsetup ();
  7956  0536  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  7957                           
  7958                           ;main.c: 678: clearDisplay ();
  7959  053B  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  7960                           
  7961                           ;main.c: 679: resetCursor();
  7962  0540  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  7963                           
  7964                           ;main.c: 680: writeChar('\'' + montens - 30 + '\'');
  7965  0545  1283               	bcf	3,5	;RP0=0, select bank0
  7966  0546  1303               	bcf	3,6	;RP1=0, select bank0
  7967  0547  0854               	movf	changeDate@montens,w
  7968  0548  3E30               	addlw	48
  7969  0549  160A  118A  2535  120A  118A  	fcall	_writeChar
  7970                           
  7971                           ;main.c: 681: writeChar('\''+monunits-30+'\'');
  7972  054E  1283               	bcf	3,5	;RP0=0, select bank0
  7973  054F  1303               	bcf	3,6	;RP1=0, select bank0
  7974  0550  0855               	movf	changeDate@monunits,w
  7975  0551  3E30               	addlw	48
  7976  0552  160A  118A  2535  120A  118A  	fcall	_writeChar
  7977                           
  7978                           ;main.c: 682: LCDdelay2();
  7979  0557  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7980                           
  7981                           ;main.c: 683: LCDdelay2();
  7982  055C  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  7983  0561                     l5245:	
  7984                           
  7985                           ;main.c: 684: }
  7986                           ;main.c: 687: if (row == 1 && col == 1) {
  7987  0561  1283               	bcf	3,5	;RP0=0, select bank0
  7988  0562  1303               	bcf	3,6	;RP1=0, select bank0
  7989  0563  0338               	decf	_row,w
  7990  0564  0439               	iorwf	_row+1,w
  7991  0565  1D03               	btfss	3,2
  7992  0566  2D9A               	goto	l5265
  7993  0567  033A               	decf	_col,w
  7994  0568  043B               	iorwf	_col+1,w
  7995  0569  1D03               	btfss	3,2
  7996  056A  2D9A               	goto	l5265
  7997                           
  7998                           ;main.c: 688: table1[6] ++;
  7999  056B  3001               	movlw	1
  8000  056C  00F9               	movwf	??_changeDate
  8001  056D  0879               	movf	??_changeDate,w
  8002  056E  07B7               	addwf	_table1+6,f
  8003                           
  8004                           ;main.c: 689: LCDsetup ();
  8005  056F  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  8006                           
  8007                           ;main.c: 690: clearDisplay ();
  8008  0574  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  8009                           
  8010                           ;main.c: 691: resetCursor();
  8011  0579  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  8012                           
  8013                           ;main.c: 692: writeChar('\'' + yeartens - 30 + '\'');
  8014  057E  1283               	bcf	3,5	;RP0=0, select bank0
  8015  057F  1303               	bcf	3,6	;RP1=0, select bank0
  8016  0580  0856               	movf	changeDate@yeartens,w
  8017  0581  3E30               	addlw	48
  8018  0582  160A  118A  2535  120A  118A  	fcall	_writeChar
  8019                           
  8020                           ;main.c: 693: writeChar('\''+yearunits-30+'\'');
  8021  0587  1283               	bcf	3,5	;RP0=0, select bank0
  8022  0588  1303               	bcf	3,6	;RP1=0, select bank0
  8023  0589  0857               	movf	changeDate@yearunits,w
  8024  058A  3E30               	addlw	48
  8025  058B  160A  118A  2535  120A  118A  	fcall	_writeChar
  8026                           
  8027                           ;main.c: 694: LCDdelay2();
  8028  0590  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  8029                           
  8030                           ;main.c: 695: LCDdelay2();
  8031  0595  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  8032  059A                     l5265:	
  8033                           
  8034                           ;main.c: 696: }
  8035                           ;main.c: 700: if (row == 2 && col == 1) {
  8036  059A  3002               	movlw	2
  8037  059B  1283               	bcf	3,5	;RP0=0, select bank0
  8038  059C  1303               	bcf	3,6	;RP1=0, select bank0
  8039  059D  0638               	xorwf	_row,w
  8040  059E  0439               	iorwf	_row+1,w
  8041  059F  1D03               	btfss	3,2
  8042  05A0  0008               	return
  8043  05A1  033A               	decf	_col,w
  8044  05A2  043B               	iorwf	_col+1,w
  8045  05A3  1D03               	btfss	3,2
  8046  05A4  0008               	return
  8047                           
  8048                           ;main.c: 701: table1[6] --;
  8049  05A5  3001               	movlw	1
  8050  05A6  02B7               	subwf	_table1+6,f
  8051                           
  8052                           ;main.c: 702: LCDsetup ();
  8053  05A7  160A  118A  2488  120A  118A  	fcall	_LCDsetup
  8054                           
  8055                           ;main.c: 703: clearDisplay ();
  8056  05AC  160A  118A  23A2  120A  118A  	fcall	_clearDisplay
  8057                           
  8058                           ;main.c: 704: resetCursor();
  8059  05B1  160A  118A  23A7  120A  118A  	fcall	_resetCursor
  8060                           
  8061                           ;main.c: 705: writeChar('\'' + yeartens - 30 + '\'');
  8062  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  8063  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  8064  05B8  0856               	movf	changeDate@yeartens,w
  8065  05B9  3E30               	addlw	48
  8066  05BA  160A  118A  2535  120A  118A  	fcall	_writeChar
  8067                           
  8068                           ;main.c: 706: writeChar('\''+yearunits-30+'\'');
  8069  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  8070  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  8071  05C1  0857               	movf	changeDate@yearunits,w
  8072  05C2  3E30               	addlw	48
  8073  05C3  160A  118A  2535  120A  118A  	fcall	_writeChar
  8074                           
  8075                           ;main.c: 707: LCDdelay2();
  8076  05C8  160A  118A  240C  120A  118A  	fcall	_LCDdelay2
  8077                           
  8078                           ;main.c: 708: LCDdelay2();
  8079  05CD  160A  118A  240C   	fcall	_LCDdelay2
  8080  05D0  0008               	return
  8081  05D1                     __end_of_changeDate:	
  8082                           
  8083                           	psect	text47
  8084  0C0E                     __ptext47:	
  8085 ;; *************** function ___awmod *****************
  8086 ;; Defined at:
  8087 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  divisor         2    0[COMMON] int 
  8090 ;;  dividend        2    2[COMMON] int 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  sign            1    6[COMMON] unsigned char 
  8093 ;;  counter         1    5[COMMON] unsigned char 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  2    0[COMMON] int 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8103 ;;      Params:         4       0       0       0       0       0
  8104 ;;      Locals:         2       0       0       0       0       0
  8105 ;;      Temps:          1       0       0       0       0       0
  8106 ;;      Totals:         7       0       0       0       0       0
  8107 ;;Total ram usage:        7 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_changeTemp
  8113 ;;		_changeTime
  8114 ;;		_changeDate
  8115 ;;		_changeDelay
  8116 ;;		_getTemperature
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           
  8121                           ;psect for function ___awmod
  8122  0C0E                     ___awmod:	
  8123                           
  8124                           ;incstack = 0
  8125                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8126  0C0E  01F6               	clrf	___awmod@sign
  8127  0C0F  1FF3               	btfss	___awmod@dividend+1,7
  8128  0C10  2C18               	goto	l3039
  8129  0C11  09F2               	comf	___awmod@dividend,f
  8130  0C12  09F3               	comf	___awmod@dividend+1,f
  8131  0C13  0AF2               	incf	___awmod@dividend,f
  8132  0C14  1903               	skipnz
  8133  0C15  0AF3               	incf	___awmod@dividend+1,f
  8134  0C16  01F6               	clrf	___awmod@sign
  8135  0C17  0AF6               	incf	___awmod@sign,f
  8136  0C18                     l3039:	
  8137  0C18  1FF1               	btfss	___awmod@divisor+1,7
  8138  0C19  2C1F               	goto	l3043
  8139  0C1A  09F0               	comf	___awmod@divisor,f
  8140  0C1B  09F1               	comf	___awmod@divisor+1,f
  8141  0C1C  0AF0               	incf	___awmod@divisor,f
  8142  0C1D  1903               	skipnz
  8143  0C1E  0AF1               	incf	___awmod@divisor+1,f
  8144  0C1F                     l3043:	
  8145  0C1F  0870               	movf	___awmod@divisor,w
  8146  0C20  0471               	iorwf	___awmod@divisor+1,w
  8147  0C21  1903               	btfsc	3,2
  8148  0C22  2C4C               	goto	l3061
  8149  0C23  01F5               	clrf	___awmod@counter
  8150  0C24  0AF5               	incf	___awmod@counter,f
  8151  0C25                     l3051:	
  8152  0C25  1BF1               	btfsc	___awmod@divisor+1,7
  8153  0C26  2C33               	goto	l3053
  8154  0C27  3001               	movlw	1
  8155  0C28                     u3215:	
  8156  0C28  1003               	clrc
  8157  0C29  0DF0               	rlf	___awmod@divisor,f
  8158  0C2A  0DF1               	rlf	___awmod@divisor+1,f
  8159  0C2B  3EFF               	addlw	-1
  8160  0C2C  1D03               	skipz
  8161  0C2D  2C28               	goto	u3215
  8162  0C2E  3001               	movlw	1
  8163  0C2F  00F4               	movwf	??___awmod
  8164  0C30  0874               	movf	??___awmod,w
  8165  0C31  07F5               	addwf	___awmod@counter,f
  8166  0C32  2C25               	goto	l3051
  8167  0C33                     l3053:	
  8168  0C33  0871               	movf	___awmod@divisor+1,w
  8169  0C34  0273               	subwf	___awmod@dividend+1,w
  8170  0C35  1D03               	skipz
  8171  0C36  2C39               	goto	u3235
  8172  0C37  0870               	movf	___awmod@divisor,w
  8173  0C38  0272               	subwf	___awmod@dividend,w
  8174  0C39                     u3235:	
  8175  0C39  1C03               	skipc
  8176  0C3A  2C41               	goto	l3057
  8177  0C3B  0870               	movf	___awmod@divisor,w
  8178  0C3C  02F2               	subwf	___awmod@dividend,f
  8179  0C3D  0871               	movf	___awmod@divisor+1,w
  8180  0C3E  1C03               	skipc
  8181  0C3F  03F3               	decf	___awmod@dividend+1,f
  8182  0C40  02F3               	subwf	___awmod@dividend+1,f
  8183  0C41                     l3057:	
  8184  0C41  3001               	movlw	1
  8185  0C42                     u3245:	
  8186  0C42  1003               	clrc
  8187  0C43  0CF1               	rrf	___awmod@divisor+1,f
  8188  0C44  0CF0               	rrf	___awmod@divisor,f
  8189  0C45  3EFF               	addlw	-1
  8190  0C46  1D03               	skipz
  8191  0C47  2C42               	goto	u3245
  8192  0C48  3001               	movlw	1
  8193  0C49  02F5               	subwf	___awmod@counter,f
  8194  0C4A  1D03               	btfss	3,2
  8195  0C4B  2C33               	goto	l3053
  8196  0C4C                     l3061:	
  8197  0C4C  0876               	movf	___awmod@sign,w
  8198  0C4D  1903               	btfsc	3,2
  8199  0C4E  2C54               	goto	l3065
  8200  0C4F  09F2               	comf	___awmod@dividend,f
  8201  0C50  09F3               	comf	___awmod@dividend+1,f
  8202  0C51  0AF2               	incf	___awmod@dividend,f
  8203  0C52  1903               	skipnz
  8204  0C53  0AF3               	incf	___awmod@dividend+1,f
  8205  0C54                     l3065:	
  8206  0C54  0873               	movf	___awmod@dividend+1,w
  8207  0C55  00F1               	movwf	?___awmod+1
  8208  0C56  0872               	movf	___awmod@dividend,w
  8209  0C57  00F0               	movwf	?___awmod
  8210  0C58  0008               	return
  8211  0C59                     __end_of___awmod:	
  8212                           
  8213                           	psect	text48
  8214  0D00                     __ptext48:	
  8215 ;; *************** function ___awdiv *****************
  8216 ;; Defined at:
  8217 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  divisor         2    0[COMMON] int 
  8220 ;;  dividend        2    2[COMMON] int 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;  quotient        2    7[COMMON] int 
  8223 ;;  sign            1    6[COMMON] unsigned char 
  8224 ;;  counter         1    5[COMMON] unsigned char 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  2    0[COMMON] int 
  8227 ;; Registers used:
  8228 ;;		wreg, status,2, status,0
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8234 ;;      Params:         4       0       0       0       0       0
  8235 ;;      Locals:         4       0       0       0       0       0
  8236 ;;      Temps:          1       0       0       0       0       0
  8237 ;;      Totals:         9       0       0       0       0       0
  8238 ;;Total ram usage:        9 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_changeTemp
  8244 ;;		_changeTime
  8245 ;;		_changeDate
  8246 ;;		_changeDelay
  8247 ;;		_display
  8248 ;;		_displayDate
  8249 ;;		_getTemperature
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function ___awdiv
  8255  0D00                     ___awdiv:	
  8256                           
  8257                           ;incstack = 0
  8258                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8259  0D00  01F6               	clrf	___awdiv@sign
  8260  0D01  1FF1               	btfss	___awdiv@divisor+1,7
  8261  0D02  2D0A               	goto	l2995
  8262  0D03  09F0               	comf	___awdiv@divisor,f
  8263  0D04  09F1               	comf	___awdiv@divisor+1,f
  8264  0D05  0AF0               	incf	___awdiv@divisor,f
  8265  0D06  1903               	skipnz
  8266  0D07  0AF1               	incf	___awdiv@divisor+1,f
  8267  0D08  01F6               	clrf	___awdiv@sign
  8268  0D09  0AF6               	incf	___awdiv@sign,f
  8269  0D0A                     l2995:	
  8270  0D0A  1FF3               	btfss	___awdiv@dividend+1,7
  8271  0D0B  2D15               	goto	l3001
  8272  0D0C  09F2               	comf	___awdiv@dividend,f
  8273  0D0D  09F3               	comf	___awdiv@dividend+1,f
  8274  0D0E  0AF2               	incf	___awdiv@dividend,f
  8275  0D0F  1903               	skipnz
  8276  0D10  0AF3               	incf	___awdiv@dividend+1,f
  8277  0D11  3001               	movlw	1
  8278  0D12  00F4               	movwf	??___awdiv
  8279  0D13  0874               	movf	??___awdiv,w
  8280  0D14  06F6               	xorwf	___awdiv@sign,f
  8281  0D15                     l3001:	
  8282  0D15  01F7               	clrf	___awdiv@quotient
  8283  0D16  01F8               	clrf	___awdiv@quotient+1
  8284  0D17  0870               	movf	___awdiv@divisor,w
  8285  0D18  0471               	iorwf	___awdiv@divisor+1,w
  8286  0D19  1903               	btfsc	3,2
  8287  0D1A  2D4C               	goto	l3023
  8288  0D1B  01F5               	clrf	___awdiv@counter
  8289  0D1C  0AF5               	incf	___awdiv@counter,f
  8290  0D1D                     l3011:	
  8291  0D1D  1BF1               	btfsc	___awdiv@divisor+1,7
  8292  0D1E  2D2B               	goto	l3013
  8293  0D1F  3001               	movlw	1
  8294  0D20                     u3115:	
  8295  0D20  1003               	clrc
  8296  0D21  0DF0               	rlf	___awdiv@divisor,f
  8297  0D22  0DF1               	rlf	___awdiv@divisor+1,f
  8298  0D23  3EFF               	addlw	-1
  8299  0D24  1D03               	skipz
  8300  0D25  2D20               	goto	u3115
  8301  0D26  3001               	movlw	1
  8302  0D27  00F4               	movwf	??___awdiv
  8303  0D28  0874               	movf	??___awdiv,w
  8304  0D29  07F5               	addwf	___awdiv@counter,f
  8305  0D2A  2D1D               	goto	l3011
  8306  0D2B                     l3013:	
  8307  0D2B  3001               	movlw	1
  8308  0D2C                     u3135:	
  8309  0D2C  1003               	clrc
  8310  0D2D  0DF7               	rlf	___awdiv@quotient,f
  8311  0D2E  0DF8               	rlf	___awdiv@quotient+1,f
  8312  0D2F  3EFF               	addlw	-1
  8313  0D30  1D03               	skipz
  8314  0D31  2D2C               	goto	u3135
  8315  0D32  0871               	movf	___awdiv@divisor+1,w
  8316  0D33  0273               	subwf	___awdiv@dividend+1,w
  8317  0D34  1D03               	skipz
  8318  0D35  2D38               	goto	u3145
  8319  0D36  0870               	movf	___awdiv@divisor,w
  8320  0D37  0272               	subwf	___awdiv@dividend,w
  8321  0D38                     u3145:	
  8322  0D38  1C03               	skipc
  8323  0D39  2D41               	goto	l3019
  8324  0D3A  0870               	movf	___awdiv@divisor,w
  8325  0D3B  02F2               	subwf	___awdiv@dividend,f
  8326  0D3C  0871               	movf	___awdiv@divisor+1,w
  8327  0D3D  1C03               	skipc
  8328  0D3E  03F3               	decf	___awdiv@dividend+1,f
  8329  0D3F  02F3               	subwf	___awdiv@dividend+1,f
  8330  0D40  1477               	bsf	___awdiv@quotient,0
  8331  0D41                     l3019:	
  8332  0D41  3001               	movlw	1
  8333  0D42                     u3155:	
  8334  0D42  1003               	clrc
  8335  0D43  0CF1               	rrf	___awdiv@divisor+1,f
  8336  0D44  0CF0               	rrf	___awdiv@divisor,f
  8337  0D45  3EFF               	addlw	-1
  8338  0D46  1D03               	skipz
  8339  0D47  2D42               	goto	u3155
  8340  0D48  3001               	movlw	1
  8341  0D49  02F5               	subwf	___awdiv@counter,f
  8342  0D4A  1D03               	btfss	3,2
  8343  0D4B  2D2B               	goto	l3013
  8344  0D4C                     l3023:	
  8345  0D4C  0876               	movf	___awdiv@sign,w
  8346  0D4D  1903               	btfsc	3,2
  8347  0D4E  2D54               	goto	l3027
  8348  0D4F  09F7               	comf	___awdiv@quotient,f
  8349  0D50  09F8               	comf	___awdiv@quotient+1,f
  8350  0D51  0AF7               	incf	___awdiv@quotient,f
  8351  0D52  1903               	skipnz
  8352  0D53  0AF8               	incf	___awdiv@quotient+1,f
  8353  0D54                     l3027:	
  8354  0D54  0878               	movf	___awdiv@quotient+1,w
  8355  0D55  00F1               	movwf	?___awdiv+1
  8356  0D56  0877               	movf	___awdiv@quotient,w
  8357  0D57  00F0               	movwf	?___awdiv
  8358  0D58  0008               	return
  8359  0D59                     __end_of___awdiv:	
  8360                           
  8361                           	psect	text49
  8362  1488                     __ptext49:	
  8363 ;; *************** function _LCDsetup *****************
  8364 ;; Defined at:
  8365 ;;		line 4 in file "LCD.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2, status,0, pclath, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8379 ;;      Params:         0       0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    3
  8386 ;; This function calls:
  8387 ;;		_displayOn
  8388 ;;		_turnon2linemode
  8389 ;; This function is called by:
  8390 ;;		_changeTemp
  8391 ;;		_changeTime
  8392 ;;		_changeDate
  8393 ;;		_changeDelay
  8394 ;;		_main
  8395 ;;		_ButtonGrid
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           
  8400                           ;psect for function _LCDsetup
  8401  1488                     _LCDsetup:	
  8402                           
  8403                           ;LCD.c: 5: ADCON1 = 0x06;
  8404                           
  8405                           ;incstack = 0
  8406                           ; Regs used in _LCDsetup: [wreg+status,2+status,0+pclath+cstack]
  8407  1488  3006               	movlw	6
  8408  1489  1683               	bsf	3,5	;RP0=1, select bank1
  8409  148A  1303               	bcf	3,6	;RP1=0, select bank1
  8410  148B  009F               	movwf	31	;volatile
  8411                           
  8412                           ;LCD.c: 6: TRISA = 0x00;
  8413  148C  0185               	clrf	5	;volatile
  8414                           
  8415                           ;LCD.c: 7: PORTA = 0x00;
  8416  148D  1283               	bcf	3,5	;RP0=0, select bank0
  8417  148E  1303               	bcf	3,6	;RP1=0, select bank0
  8418  148F  0185               	clrf	5	;volatile
  8419                           
  8420                           ;LCD.c: 8: TRISD = 0x00;
  8421  1490  1683               	bsf	3,5	;RP0=1, select bank1
  8422  1491  1303               	bcf	3,6	;RP1=0, select bank1
  8423  1492  0188               	clrf	8	;volatile
  8424                           
  8425                           ;LCD.c: 9: PORTD = 0x00;
  8426  1493  1283               	bcf	3,5	;RP0=0, select bank0
  8427  1494  1303               	bcf	3,6	;RP1=0, select bank0
  8428  1495  0188               	clrf	8	;volatile
  8429                           
  8430                           ;LCD.c: 10: displayOn ();
  8431  1496  160A  118A  23AC  160A  118A  	fcall	_displayOn
  8432                           
  8433                           ;LCD.c: 11: turnon2linemode();
  8434  149B  160A  118A  23B1   	fcall	_turnon2linemode
  8435  149E  0008               	return
  8436  149F                     __end_of_LCDsetup:	
  8437                           
  8438                           	psect	text50
  8439  13B1                     __ptext50:	
  8440 ;; *************** function _turnon2linemode *****************
  8441 ;; Defined at:
  8442 ;;		line 94 in file "LCD.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8456 ;;      Params:         0       0       0       0       0       0
  8457 ;;      Locals:         0       0       0       0       0       0
  8458 ;;      Temps:          0       0       0       0       0       0
  8459 ;;      Totals:         0       0       0       0       0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:    2
  8463 ;; This function calls:
  8464 ;;		_writeCmd
  8465 ;; This function is called by:
  8466 ;;		_LCDsetup
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           
  8471                           ;psect for function _turnon2linemode
  8472  13B1                     _turnon2linemode:	
  8473                           
  8474                           ;LCD.c: 95: writeCmd(0x38);
  8475                           
  8476                           ;incstack = 0
  8477                           ; Regs used in _turnon2linemode: [wreg+status,2+status,0+pclath+cstack]
  8478  13B1  3038               	movlw	56
  8479  13B2  160A  118A  2513   	fcall	_writeCmd
  8480  13B5  0008               	return
  8481  13B6                     __end_of_turnon2linemode:	
  8482                           
  8483                           	psect	text51
  8484  13AC                     __ptext51:	
  8485 ;; *************** function _displayOn *****************
  8486 ;; Defined at:
  8487 ;;		line 86 in file "LCD.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;		None
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		wreg, status,2, status,0, pclath, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8501 ;;      Params:         0       0       0       0       0       0
  8502 ;;      Locals:         0       0       0       0       0       0
  8503 ;;      Temps:          0       0       0       0       0       0
  8504 ;;      Totals:         0       0       0       0       0       0
  8505 ;;Total ram usage:        0 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    2
  8508 ;; This function calls:
  8509 ;;		_writeCmd
  8510 ;; This function is called by:
  8511 ;;		_LCDsetup
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           
  8516                           ;psect for function _displayOn
  8517  13AC                     _displayOn:	
  8518                           
  8519                           ;LCD.c: 87: writeCmd(0x0F);
  8520                           
  8521                           ;incstack = 0
  8522                           ; Regs used in _displayOn: [wreg+status,2+status,0+pclath+cstack]
  8523  13AC  300F               	movlw	15
  8524  13AD  160A  118A  2513   	fcall	_writeCmd
  8525  13B0  0008               	return
  8526  13B1                     __end_of_displayOn:	
  8527                           
  8528                           	psect	text52
  8529  1474                     __ptext52:	
  8530 ;; *************** function _buzzer2 *****************
  8531 ;; Defined at:
  8532 ;;		line 809 in file "main.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8546 ;;      Params:         0       0       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0
  8549 ;;      Totals:         0       0       0       0       0       0
  8550 ;;Total ram usage:        0 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    1
  8553 ;; This function calls:
  8554 ;;		_delay
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function _buzzer2
  8562  1474                     _buzzer2:	
  8563                           
  8564                           ;main.c: 810: RB7 = 1;
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in _buzzer2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8568  1474  1283               	bcf	3,5	;RP0=0, select bank0
  8569  1475  1303               	bcf	3,6	;RP1=0, select bank0
  8570  1476  1786               	bsf	6,7	;volatile
  8571                           
  8572                           ;main.c: 811: delay();
  8573  1477  160A  118A  2460  160A  118A  	fcall	_delay
  8574                           
  8575                           ;main.c: 812: delay();
  8576  147C  160A  118A  2460  160A  118A  	fcall	_delay
  8577                           
  8578                           ;main.c: 813: delay();
  8579  1481  160A  118A  2460   	fcall	_delay
  8580                           
  8581                           ;main.c: 814: RB7 =0;
  8582  1484  1283               	bcf	3,5	;RP0=0, select bank0
  8583  1485  1303               	bcf	3,6	;RP1=0, select bank0
  8584  1486  1386               	bcf	6,7	;volatile
  8585  1487  0008               	return
  8586  1488                     __end_of_buzzer2:	
  8587                           
  8588                           	psect	text53
  8589  1460                     __ptext53:	
  8590 ;; *************** function _delay *****************
  8591 ;; Defined at:
  8592 ;;		line 28 in file "temperature.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;		None
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;  i               2    0[COMMON] int 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, btemp+1
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8606 ;;      Params:         0       0       0       0       0       0
  8607 ;;      Locals:         2       0       0       0       0       0
  8608 ;;      Temps:          0       0       0       0       0       0
  8609 ;;      Totals:         2       0       0       0       0       0
  8610 ;;Total ram usage:        2 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; This function calls:
  8613 ;;		Nothing
  8614 ;; This function is called by:
  8615 ;;		_buzzer2
  8616 ;;		_getTemperature
  8617 ;;		_buzzer
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           
  8622                           ;psect for function _delay
  8623  1460                     _delay:	
  8624                           
  8625                           ;temperature.c: 30: for (int i = 0; i< 500; ++i);
  8626                           
  8627                           ;incstack = 0
  8628                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  8629  1460  01F0               	clrf	delay@i
  8630  1461  01F1               	clrf	delay@i+1
  8631  1462                     L13:	
  8632  1462  0871               	movf	delay@i+1,w
  8633  1463  3A80               	xorlw	128
  8634  1464  00FF               	movwf	127
  8635  1465  3081               	movlw	129
  8636  1466  027F               	subwf	127,w
  8637  1467  1D03               	skipz
  8638  1468  2C6B               	goto	u2885
  8639  1469  30F4               	movlw	244
  8640  146A  0270               	subwf	delay@i,w
  8641  146B                     u2885:	
  8642  146B  1803               	btfsc	3,0
  8643  146C  0008               	return
  8644  146D  3001               	movlw	1
  8645  146E  07F0               	addwf	delay@i,f
  8646  146F  1803               	skipnc
  8647  1470  0AF1               	incf	delay@i+1,f
  8648  1471  3000               	movlw	0
  8649  1472  07F1               	addwf	delay@i+1,f
  8650  1473  2C62               	goto	L13
  8651  1474                     __end_of_delay:	
  8652                           
  8653                           	psect	text54
  8654  0A7D                     __ptext54:	
  8655 ;; *************** function _alarmOnOff *****************
  8656 ;; Defined at:
  8657 ;;		line 266 in file "main.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;		None
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;		None
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  1    wreg      void 
  8664 ;; Registers used:
  8665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8671 ;;      Params:         0       0       0       0       0       0
  8672 ;;      Locals:         0       0       0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0
  8674 ;;      Totals:         0       0       0       0       0       0
  8675 ;;Total ram usage:        0 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    5
  8678 ;; This function calls:
  8679 ;;		_LCDdelay2
  8680 ;;		_alarmOff
  8681 ;;		_alarmOn
  8682 ;;		_modeSelect
  8683 ;; This function is called by:
  8684 ;;		_main
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           
  8689                           ;psect for function _alarmOnOff
  8690  0A7D                     _alarmOnOff:	
  8691                           
  8692                           ;main.c: 268: if (row == 4 && col == 4){
  8693                           
  8694                           ;incstack = 0
  8695                           ; Regs used in _alarmOnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8696  0A7D  3004               	movlw	4
  8697  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  8698  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  8699  0A80  0638               	xorwf	_row,w
  8700  0A81  0439               	iorwf	_row+1,w
  8701  0A82  1D03               	btfss	3,2
  8702  0A83  2A9F               	goto	l4733
  8703  0A84  3004               	movlw	4
  8704  0A85  063A               	xorwf	_col,w
  8705  0A86  043B               	iorwf	_col+1,w
  8706  0A87  1D03               	btfss	3,2
  8707  0A88  2A9F               	goto	l4733
  8708                           
  8709                           ;main.c: 269: alarmOnOrOff = 1;
  8710  0A89  01CC               	clrf	_alarmOnOrOff
  8711  0A8A  0ACC               	incf	_alarmOnOrOff,f
  8712                           
  8713                           ;main.c: 270: alarmOn ();
  8714  0A8B  160A  118A  2638  120A  158A  	fcall	_alarmOn
  8715                           
  8716                           ;main.c: 271: LCDdelay2();
  8717  0A90  160A  118A  240C  120A  158A  	fcall	_LCDdelay2
  8718                           
  8719                           ;main.c: 272: modeSelect();
  8720  0A95  120A  158A  2396  120A  158A  	fcall	_modeSelect
  8721                           
  8722                           ;main.c: 273: LCDdelay2();
  8723  0A9A  160A  118A  240C  120A  158A  	fcall	_LCDdelay2
  8724  0A9F                     l4733:	
  8725                           
  8726                           ;main.c: 275: }
  8727                           ;main.c: 276: if (row == 3 && col == 4) {
  8728  0A9F  3003               	movlw	3
  8729  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  8730  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  8731  0AA2  0638               	xorwf	_row,w
  8732  0AA3  0439               	iorwf	_row+1,w
  8733  0AA4  1D03               	btfss	3,2
  8734  0AA5  0008               	return
  8735  0AA6  3004               	movlw	4
  8736  0AA7  063A               	xorwf	_col,w
  8737  0AA8  043B               	iorwf	_col+1,w
  8738  0AA9  1D03               	btfss	3,2
  8739  0AAA  0008               	return
  8740                           
  8741                           ;main.c: 277: alarmOnOrOff = 0;
  8742  0AAB  01CC               	clrf	_alarmOnOrOff
  8743                           
  8744                           ;main.c: 278: alarmOff ();
  8745  0AAC  160A  118A  27D6  120A  158A  	fcall	_alarmOff
  8746                           
  8747                           ;main.c: 279: LCDdelay2();
  8748  0AB1  160A  118A  240C   	fcall	_LCDdelay2
  8749  0AB4  0008               	return
  8750  0AB5                     __end_of_alarmOnOff:	
  8751                           
  8752                           	psect	text55
  8753  0B96                     __ptext55:	
  8754 ;; *************** function _modeSelect *****************
  8755 ;; Defined at:
  8756 ;;		line 237 in file "main.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  messagecol     12    0[BANK0h] unsigned char [12]
  8761 ;;  messagerow      9   12[BANK0h] unsigned char [9]
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8771 ;;      Params:         0       0       0       0       0       0
  8772 ;;      Locals:         0      21       0       0       0       0
  8773 ;;      Temps:          4       0       0       0       0       0
  8774 ;;      Totals:         4      21       0       0       0       0
  8775 ;;Total ram usage:       25 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    4
  8778 ;; This function calls:
  8779 ;;		_resetCursor
  8780 ;;		_writeMessageline1
  8781 ;;		_writeMessageline2
  8782 ;; This function is called by:
  8783 ;;		_alarmOnOff
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           
  8788                           ;psect for function _modeSelect
  8789  0B96                     _modeSelect:	
  8790                           
  8791                           ;main.c: 238: resetCursor ();
  8792                           
  8793                           ;incstack = 0
  8794                           ; Regs used in _modeSelect: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8795  0B96  160A  118A  23A7  120A  158A  	fcall	_resetCursor
  8796                           
  8797                           ;main.c: 239: char messagerow[] = "Select a";
  8798  0B9B  305E               	movlw	modeSelect@messagerow& (0+255)
  8799  0B9C  0084               	movwf	4
  8800  0B9D  30C8               	movlw	low modeSelect@F1246
  8801  0B9E  00F8               	movwf	??_modeSelect
  8802  0B9F  0804               	movf	4,w
  8803  0BA0  00F9               	movwf	??_modeSelect+1
  8804  0BA1  3009               	movlw	9
  8805  0BA2  00FA               	movwf	??_modeSelect+2
  8806  0BA3                     u5810:	
  8807  0BA3  0878               	movf	??_modeSelect,w
  8808  0BA4  0084               	movwf	4
  8809  0BA5  1383               	bcf	3,7	;select IRP bank1
  8810  0BA6  0800               	movf	0,w
  8811  0BA7  00FB               	movwf	??_modeSelect+3
  8812  0BA8  0AF8               	incf	??_modeSelect,f
  8813  0BA9  0879               	movf	??_modeSelect+1,w
  8814  0BAA  0084               	movwf	4
  8815  0BAB  087B               	movf	??_modeSelect+3,w
  8816  0BAC  0080               	movwf	0
  8817  0BAD  0AF9               	incf	??_modeSelect+1,f
  8818  0BAE  0BFA               	decfsz	??_modeSelect+2,f
  8819  0BAF  2BA3               	goto	u5810
  8820                           
  8821                           ;main.c: 240: char messagecol[] = "Function...";
  8822  0BB0  3052               	movlw	modeSelect@messagecol& (0+255)
  8823  0BB1  0084               	movwf	4
  8824  0BB2  305D               	movlw	low modeSelect@F1248
  8825  0BB3  00F8               	movwf	??_modeSelect
  8826  0BB4  0804               	movf	4,w
  8827  0BB5  00F9               	movwf	??_modeSelect+1
  8828  0BB6  300C               	movlw	12
  8829  0BB7  00FA               	movwf	??_modeSelect+2
  8830  0BB8                     u5820:	
  8831  0BB8  0878               	movf	??_modeSelect,w
  8832  0BB9  0084               	movwf	4
  8833  0BBA  1783               	bsf	3,7	;select IRP bank2
  8834  0BBB  0800               	movf	0,w
  8835  0BBC  00FB               	movwf	??_modeSelect+3
  8836  0BBD  0AF8               	incf	??_modeSelect,f
  8837  0BBE  0879               	movf	??_modeSelect+1,w
  8838  0BBF  0084               	movwf	4
  8839  0BC0  1383               	bcf	3,7	;select IRP bank0
  8840  0BC1  087B               	movf	??_modeSelect+3,w
  8841  0BC2  0080               	movwf	0
  8842  0BC3  0AF9               	incf	??_modeSelect+1,f
  8843  0BC4  0BFA               	decfsz	??_modeSelect+2,f
  8844  0BC5  2BB8               	goto	u5820
  8845                           
  8846                           ;main.c: 241: writeMessageline1(messagerow);
  8847  0BC6  305E               	movlw	(low (modeSelect@messagerow| 0))& (0+255)
  8848  0BC7  160A  118A  23B6  120A  158A  	fcall	_writeMessageline1
  8849                           
  8850                           ;main.c: 242: writeMessageline2(messagecol);
  8851  0BCC  3052               	movlw	(low (modeSelect@messagecol| 0))& (0+255)
  8852  0BCD  160A  118A  23D2   	fcall	_writeMessageline2
  8853  0BD0  0008               	return
  8854  0BD1                     __end_of_modeSelect:	
  8855                           
  8856                           	psect	text56
  8857  13D2                     __ptext56:	
  8858 ;; *************** function _writeMessageline2 *****************
  8859 ;; Defined at:
  8860 ;;		line 54 in file "LCD.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  message         1    wreg     PTR unsigned char 
  8863 ;;		 -> modeSelect@messagecol(12), ButtonGrid@messagecol(6), currentTemp@message2(13), 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  message         1    7[COMMON] PTR unsigned char 
  8866 ;;		 -> modeSelect@messagecol(12), ButtonGrid@messagecol(6), currentTemp@message2(13), 
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      void 
  8869 ;; Registers used:
  8870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8876 ;;      Params:         0       0       0       0       0       0
  8877 ;;      Locals:         1       0       0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0       0
  8879 ;;      Totals:         1       0       0       0       0       0
  8880 ;;Total ram usage:        1 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    3
  8883 ;; This function calls:
  8884 ;;		_writeCmd
  8885 ;;		_writeMessage
  8886 ;; This function is called by:
  8887 ;;		_modeSelect
  8888 ;;		_currentTemp
  8889 ;;		_ButtonGrid
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _writeMessageline2
  8895  13D2                     _writeMessageline2:	
  8896                           
  8897                           ;incstack = 0
  8898                           ; Regs used in _writeMessageline2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8899                           ;writeMessageline2@message stored from wreg
  8900  13D2  00F7               	movwf	writeMessageline2@message
  8901                           
  8902                           ;LCD.c: 62: writeCmd(0x80+40);
  8903  13D3  30A8               	movlw	168
  8904  13D4  160A  118A  2513  160A  118A  	fcall	_writeCmd
  8905                           
  8906                           ;LCD.c: 63: writeMessage(message);
  8907  13D9  0877               	movf	writeMessageline2@message,w
  8908  13DA  160A  118A  24D4   	fcall	_writeMessage
  8909  13DD  0008               	return
  8910  13DE                     __end_of_writeMessageline2:	
  8911                           
  8912                           	psect	text57
  8913  13B6                     __ptext57:	
  8914 ;; *************** function _writeMessageline1 *****************
  8915 ;; Defined at:
  8916 ;;		line 49 in file "LCD.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  message         1    wreg     PTR unsigned char 
  8919 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagerow(9), ButtonGrid@messag
      +erow(6), 
  8920 ;;		 -> currentTemp@message1(7), 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  message         1    7[COMMON] PTR unsigned char 
  8923 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagerow(9), ButtonGrid@messag
      +erow(6), 
  8924 ;;		 -> currentTemp@message1(7), 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8934 ;;      Params:         0       0       0       0       0       0
  8935 ;;      Locals:         1       0       0       0       0       0
  8936 ;;      Temps:          0       0       0       0       0       0
  8937 ;;      Totals:         1       0       0       0       0       0
  8938 ;;Total ram usage:        1 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    3
  8941 ;; This function calls:
  8942 ;;		_writeMessage
  8943 ;; This function is called by:
  8944 ;;		_modeSelect
  8945 ;;		_checkZoneMessage
  8946 ;;		_changeTriggerMessage
  8947 ;;		_currentTemp
  8948 ;;		_ButtonGrid
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function _writeMessageline1
  8954  13B6                     _writeMessageline1:	
  8955                           
  8956                           ;incstack = 0
  8957                           ; Regs used in _writeMessageline1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8958                           ;writeMessageline1@message stored from wreg
  8959  13B6  00F7               	movwf	writeMessageline1@message
  8960                           
  8961                           ;LCD.c: 51: writeMessage(message);
  8962  13B7  0877               	movf	writeMessageline1@message,w
  8963  13B8  160A  118A  24D4   	fcall	_writeMessage
  8964  13BB  0008               	return
  8965  13BC                     __end_of_writeMessageline1:	
  8966                           
  8967                           	psect	text58
  8968  1638                     __ptext58:	
  8969 ;; *************** function _alarmOn *****************
  8970 ;; Defined at:
  8971 ;;		line 111 in file "main.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  message         9    0[BANK0h] unsigned char [9]
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8985 ;;      Params:         0       0       0       0       0       0
  8986 ;;      Locals:         0       9       0       0       0       0
  8987 ;;      Temps:          4       0       0       0       0       0
  8988 ;;      Totals:         4       9       0       0       0       0
  8989 ;;Total ram usage:       13 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    3
  8992 ;; This function calls:
  8993 ;;		_LCDdelay3
  8994 ;;		_clearDisplay
  8995 ;;		_resetCursor
  8996 ;;		_writeMessage
  8997 ;; This function is called by:
  8998 ;;		_alarmOnOff
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function _alarmOn
  9004  1638                     _alarmOn:	
  9005                           
  9006                           ;main.c: 112: clearDisplay ();
  9007                           
  9008                           ;incstack = 0
  9009                           ; Regs used in _alarmOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9010  1638  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9011                           
  9012                           ;main.c: 113: resetCursor ();
  9013  163D  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9014                           
  9015                           ;main.c: 114: char message[] = "Alarm On";
  9016  1642  3052               	movlw	alarmOn@message& (0+255)
  9017  1643  0084               	movwf	4
  9018  1644  30DA               	movlw	low alarmOn@F1208
  9019  1645  00F7               	movwf	??_alarmOn
  9020  1646  0804               	movf	4,w
  9021  1647  00F8               	movwf	??_alarmOn+1
  9022  1648  3009               	movlw	9
  9023  1649  00F9               	movwf	??_alarmOn+2
  9024  164A                     u5700:	
  9025  164A  0877               	movf	??_alarmOn,w
  9026  164B  0084               	movwf	4
  9027  164C  1383               	bcf	3,7	;select IRP bank1
  9028  164D  0800               	movf	0,w
  9029  164E  00FA               	movwf	??_alarmOn+3
  9030  164F  0AF7               	incf	??_alarmOn,f
  9031  1650  0878               	movf	??_alarmOn+1,w
  9032  1651  0084               	movwf	4
  9033  1652  087A               	movf	??_alarmOn+3,w
  9034  1653  0080               	movwf	0
  9035  1654  0AF8               	incf	??_alarmOn+1,f
  9036  1655  0BF9               	decfsz	??_alarmOn+2,f
  9037  1656  2E4A               	goto	u5700
  9038                           
  9039                           ;main.c: 115: writeMessage(message);
  9040  1657  3052               	movlw	(low (alarmOn@message| 0))& (0+255)
  9041  1658  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9042                           
  9043                           ;main.c: 116: LCDdelay3 ();
  9044  165D  160A  118A  23FC   	fcall	_LCDdelay3
  9045  1660  0008               	return
  9046  1661                     __end_of_alarmOn:	
  9047                           
  9048                           	psect	text59
  9049  17D6                     __ptext59:	
  9050 ;; *************** function _alarmOff *****************
  9051 ;; Defined at:
  9052 ;;		line 118 in file "main.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  message        10    0[BANK0h] unsigned char [10]
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9066 ;;      Params:         0       0       0       0       0       0
  9067 ;;      Locals:         0      10       0       0       0       0
  9068 ;;      Temps:          4       0       0       0       0       0
  9069 ;;      Totals:         4      10       0       0       0       0
  9070 ;;Total ram usage:       14 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    3
  9073 ;; This function calls:
  9074 ;;		_LCDdelay3
  9075 ;;		_clearDisplay
  9076 ;;		_resetCursor
  9077 ;;		_writeMessage
  9078 ;; This function is called by:
  9079 ;;		_alarmOnOff
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           
  9084                           ;psect for function _alarmOff
  9085  17D6                     _alarmOff:	
  9086                           
  9087                           ;main.c: 119: clearDisplay ();
  9088                           
  9089                           ;incstack = 0
  9090                           ; Regs used in _alarmOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9091  17D6  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9092                           
  9093                           ;main.c: 120: resetCursor ();
  9094  17DB  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9095                           
  9096                           ;main.c: 121: char message[] = "Alarm Off";
  9097  17E0  3052               	movlw	alarmOff@message& (0+255)
  9098  17E1  0084               	movwf	4
  9099  17E2  30E4               	movlw	low alarmOff@F1211
  9100  17E3  00F7               	movwf	??_alarmOff
  9101  17E4  0804               	movf	4,w
  9102  17E5  00F8               	movwf	??_alarmOff+1
  9103  17E6  300A               	movlw	10
  9104  17E7  00F9               	movwf	??_alarmOff+2
  9105  17E8                     u5710:	
  9106  17E8  0877               	movf	??_alarmOff,w
  9107  17E9  0084               	movwf	4
  9108  17EA  1783               	bsf	3,7	;select IRP bank3
  9109  17EB  0800               	movf	0,w
  9110  17EC  00FA               	movwf	??_alarmOff+3
  9111  17ED  0AF7               	incf	??_alarmOff,f
  9112  17EE  0878               	movf	??_alarmOff+1,w
  9113  17EF  0084               	movwf	4
  9114  17F0  1383               	bcf	3,7	;select IRP bank0
  9115  17F1  087A               	movf	??_alarmOff+3,w
  9116  17F2  0080               	movwf	0
  9117  17F3  0AF8               	incf	??_alarmOff+1,f
  9118  17F4  0BF9               	decfsz	??_alarmOff+2,f
  9119  17F5  2FE8               	goto	u5710
  9120                           
  9121                           ;main.c: 122: writeMessage(message);
  9122  17F6  3052               	movlw	(low (alarmOff@message| 0))& (0+255)
  9123  17F7  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9124                           
  9125                           ;main.c: 123: LCDdelay3 ();
  9126  17FC  160A  118A  23FC   	fcall	_LCDdelay3
  9127  17FF  0008               	return
  9128  1800                     __end_of_alarmOff:	
  9129                           
  9130                           	psect	text60
  9131  140C                     __ptext60:	
  9132 ;; *************** function _LCDdelay2 *****************
  9133 ;; Defined at:
  9134 ;;		line 18 in file "LCD.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  i               2    0[COMMON] unsigned int 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9148 ;;      Params:         0       0       0       0       0       0
  9149 ;;      Locals:         2       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0
  9151 ;;      Totals:         2       0       0       0       0       0
  9152 ;;Total ram usage:        2 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_alarmOnOff
  9158 ;;		_changeTemp
  9159 ;;		_changeTime
  9160 ;;		_changeDate
  9161 ;;		_changeDelay
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           
  9166                           ;psect for function _LCDdelay2
  9167  140C                     _LCDdelay2:	
  9168                           
  9169                           ;LCD.c: 19: for (unsigned i=0; i<50000; i++);
  9170                           
  9171                           ;incstack = 0
  9172                           ; Regs used in _LCDdelay2: [wreg+status,2]
  9173  140C  01F0               	clrf	LCDdelay2@i
  9174  140D  01F1               	clrf	LCDdelay2@i+1
  9175  140E                     L14:	
  9176  140E  30C3               	movlw	195
  9177  140F  0271               	subwf	LCDdelay2@i+1,w
  9178  1410  3050               	movlw	80
  9179  1411  1903               	skipnz
  9180  1412  0270               	subwf	LCDdelay2@i,w
  9181  1413  1803               	btfsc	3,0
  9182  1414  0008               	return
  9183  1415  3001               	movlw	1
  9184  1416  07F0               	addwf	LCDdelay2@i,f
  9185  1417  1803               	skipnc
  9186  1418  0AF1               	incf	LCDdelay2@i+1,f
  9187  1419  3000               	movlw	0
  9188  141A  07F1               	addwf	LCDdelay2@i+1,f
  9189  141B  2C0E               	goto	L14
  9190  141C                     __end_of_LCDdelay2:	
  9191                           
  9192                           	psect	text61
  9193  15C5                     __ptext61:	
  9194 ;; *************** function _activateZonesMode *****************
  9195 ;; Defined at:
  9196 ;;		line 424 in file "main.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9210 ;;      Params:         0       0       0       0       0       0
  9211 ;;      Locals:         0       0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0
  9213 ;;      Totals:         0       0       0       0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    4
  9217 ;; This function calls:
  9218 ;;		_zoneActivate
  9219 ;; This function is called by:
  9220 ;;		_main
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           
  9225                           ;psect for function _activateZonesMode
  9226  15C5                     _activateZonesMode:	
  9227                           
  9228                           ;main.c: 425: if (row == 2 && col == 1) {
  9229                           
  9230                           ;incstack = 0
  9231                           ; Regs used in _activateZonesMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9232  15C5  3002               	movlw	2
  9233  15C6  1283               	bcf	3,5	;RP0=0, select bank0
  9234  15C7  1303               	bcf	3,6	;RP1=0, select bank0
  9235  15C8  0638               	xorwf	_row,w
  9236  15C9  0439               	iorwf	_row+1,w
  9237  15CA  1D03               	btfss	3,2
  9238  15CB  0008               	return
  9239  15CC  033A               	decf	_col,w
  9240  15CD  043B               	iorwf	_col+1,w
  9241  15CE  1D03               	btfss	3,2
  9242  15CF  0008               	return
  9243                           
  9244                           ;main.c: 426: if (zoneCheck == 0 && tempChange == 0 && tempChange == 0 && delayChange ==
      +                           0 && timeChange == 0 && dateChange == 0) {
  9245  15D0  084A               	movf	_zoneCheck,w
  9246  15D1  1D03               	btfss	3,2
  9247  15D2  0008               	return
  9248  15D3  0841               	movf	_tempChange,w
  9249  15D4  1D03               	btfss	3,2
  9250  15D5  0008               	return
  9251  15D6  0841               	movf	_tempChange,w
  9252  15D7  1D03               	btfss	3,2
  9253  15D8  0008               	return
  9254  15D9  083E               	movf	_delayChange,w
  9255  15DA  1D03               	btfss	3,2
  9256  15DB  0008               	return
  9257  15DC  0840               	movf	_timeChange,w
  9258  15DD  1D03               	btfss	3,2
  9259  15DE  0008               	return
  9260  15DF  083F               	movf	_dateChange,w
  9261  15E0  1D03               	btfss	3,2
  9262  15E1  0008               	return
  9263                           
  9264                           ;main.c: 427: zoneActivate();
  9265  15E2  160A  118A  260F   	fcall	_zoneActivate
  9266                           
  9267                           ;main.c: 428: zoneActMode = 1;
  9268  15E5  1283               	bcf	3,5	;RP0=0, select bank0
  9269  15E6  1303               	bcf	3,6	;RP1=0, select bank0
  9270  15E7  01CB               	clrf	_zoneActMode
  9271  15E8  0ACB               	incf	_zoneActMode,f
  9272  15E9  0008               	return
  9273  15EA                     __end_of_activateZonesMode:	
  9274                           
  9275                           	psect	text62
  9276  160F                     __ptext62:	
  9277 ;; *************** function _zoneActivate *****************
  9278 ;; Defined at:
  9279 ;;		line 182 in file "main.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;  message         9    0[BANK0h] unsigned char [9]
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      void 
  9286 ;; Registers used:
  9287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9293 ;;      Params:         0       0       0       0       0       0
  9294 ;;      Locals:         0       9       0       0       0       0
  9295 ;;      Temps:          4       0       0       0       0       0
  9296 ;;      Totals:         4       9       0       0       0       0
  9297 ;;Total ram usage:       13 bytes
  9298 ;; Hardware stack levels used:    1
  9299 ;; Hardware stack levels required when called:    3
  9300 ;; This function calls:
  9301 ;;		_LCDdelay3
  9302 ;;		_clearDisplay
  9303 ;;		_resetCursor
  9304 ;;		_writeMessage
  9305 ;; This function is called by:
  9306 ;;		_activateZonesMode
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           
  9311                           ;psect for function _zoneActivate
  9312  160F                     _zoneActivate:	
  9313                           
  9314                           ;main.c: 183: clearDisplay ();
  9315                           
  9316                           ;incstack = 0
  9317                           ; Regs used in _zoneActivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9318  160F  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9319                           
  9320                           ;main.c: 184: resetCursor ();
  9321  1614  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9322                           
  9323                           ;main.c: 185: char message[] = "Activate";
  9324  1619  3052               	movlw	zoneActivate@message& (0+255)
  9325  161A  0084               	movwf	4
  9326  161B  30D1               	movlw	low zoneActivate@F1238
  9327  161C  00F7               	movwf	??_zoneActivate
  9328  161D  0804               	movf	4,w
  9329  161E  00F8               	movwf	??_zoneActivate+1
  9330  161F  3009               	movlw	9
  9331  1620  00F9               	movwf	??_zoneActivate+2
  9332  1621                     u5800:	
  9333  1621  0877               	movf	??_zoneActivate,w
  9334  1622  0084               	movwf	4
  9335  1623  1383               	bcf	3,7	;select IRP bank1
  9336  1624  0800               	movf	0,w
  9337  1625  00FA               	movwf	??_zoneActivate+3
  9338  1626  0AF7               	incf	??_zoneActivate,f
  9339  1627  0878               	movf	??_zoneActivate+1,w
  9340  1628  0084               	movwf	4
  9341  1629  087A               	movf	??_zoneActivate+3,w
  9342  162A  0080               	movwf	0
  9343  162B  0AF8               	incf	??_zoneActivate+1,f
  9344  162C  0BF9               	decfsz	??_zoneActivate+2,f
  9345  162D  2E21               	goto	u5800
  9346                           
  9347                           ;main.c: 186: writeMessage(message);
  9348  162E  3052               	movlw	(low (zoneActivate@message| 0))& (0+255)
  9349  162F  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9350                           
  9351                           ;main.c: 187: LCDdelay3 ();
  9352  1634  160A  118A  23FC   	fcall	_LCDdelay3
  9353  1637  0008               	return
  9354  1638                     __end_of_zoneActivate:	
  9355                           
  9356                           	psect	text63
  9357  0DB2                     __ptext63:	
  9358 ;; *************** function _activateZones *****************
  9359 ;; Defined at:
  9360 ;;		line 432 in file "main.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9374 ;;      Params:         0       0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0
  9376 ;;      Temps:          0       0       0       0       0       0
  9377 ;;      Totals:         0       0       0       0       0       0
  9378 ;;Total ram usage:        0 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    4
  9381 ;; This function calls:
  9382 ;;		_zone0Activate
  9383 ;;		_zone1Activate
  9384 ;;		_zone2Activate
  9385 ;;		_zone3Activate
  9386 ;; This function is called by:
  9387 ;;		_main
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           
  9392                           ;psect for function _activateZones
  9393  0DB2                     _activateZones:	
  9394                           
  9395                           ;main.c: 433: if (zoneActMode == 1) {
  9396                           
  9397                           ;incstack = 0
  9398                           ; Regs used in _activateZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9399  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  9400  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  9401  0DB4  034B               	decf	_zoneActMode,w
  9402  0DB5  1D03               	btfss	3,2
  9403  0DB6  0008               	return
  9404                           
  9405                           ;main.c: 434: if (row == 1 && col == 2) {
  9406  0DB7  0338               	decf	_row,w
  9407  0DB8  0439               	iorwf	_row+1,w
  9408  0DB9  1D03               	btfss	3,2
  9409  0DBA  2DCC               	goto	l4901
  9410  0DBB  3002               	movlw	2
  9411  0DBC  063A               	xorwf	_col,w
  9412  0DBD  043B               	iorwf	_col+1,w
  9413  0DBE  1D03               	btfss	3,2
  9414  0DBF  2DCC               	goto	l4901
  9415                           
  9416                           ;main.c: 435: if (zone0On == 0) {
  9417  0DC0  0849               	movf	_zone0On,w
  9418  0DC1  1D03               	btfss	3,2
  9419  0DC2  2DCC               	goto	l4901
  9420                           
  9421                           ;main.c: 436: zone0Activate();
  9422  0DC3  160A  118A  272E  120A  158A  	fcall	_zone0Activate
  9423                           
  9424                           ;main.c: 437: zone0On = 1;
  9425  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  9426  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  9427  0DCA  01C9               	clrf	_zone0On
  9428  0DCB  0AC9               	incf	_zone0On,f
  9429  0DCC                     l4901:	
  9430                           
  9431                           ;main.c: 438: }
  9432                           ;main.c: 439: }
  9433                           ;main.c: 440: if (row == 2 && col == 2) {
  9434  0DCC  3002               	movlw	2
  9435  0DCD  0638               	xorwf	_row,w
  9436  0DCE  0439               	iorwf	_row+1,w
  9437  0DCF  1D03               	btfss	3,2
  9438  0DD0  2DE0               	goto	l4911
  9439  0DD1  3002               	movlw	2
  9440  0DD2  063A               	xorwf	_col,w
  9441  0DD3  043B               	iorwf	_col+1,w
  9442  0DD4  1D03               	btfss	3,2
  9443  0DD5  2DE0               	goto	l4911
  9444                           
  9445                           ;main.c: 441: if (zone1On == 0) {
  9446  0DD6  0848               	movf	_zone1On,w
  9447  0DD7  1D03               	btfss	3,2
  9448  0DD8  2DE0               	goto	l4911
  9449                           
  9450                           ;main.c: 442: zone1On = 1;
  9451  0DD9  01C8               	clrf	_zone1On
  9452  0DDA  0AC8               	incf	_zone1On,f
  9453                           
  9454                           ;main.c: 443: zone1Activate();
  9455  0DDB  160A  118A  2758  120A  158A  	fcall	_zone1Activate
  9456  0DE0                     l4911:	
  9457                           
  9458                           ;main.c: 445: }
  9459                           ;main.c: 446: }
  9460                           ;main.c: 447: if (row == 3 && col == 2) {
  9461  0DE0  3003               	movlw	3
  9462  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  9463  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  9464  0DE3  0638               	xorwf	_row,w
  9465  0DE4  0439               	iorwf	_row+1,w
  9466  0DE5  1D03               	btfss	3,2
  9467  0DE6  2DF8               	goto	l4921
  9468  0DE7  3002               	movlw	2
  9469  0DE8  063A               	xorwf	_col,w
  9470  0DE9  043B               	iorwf	_col+1,w
  9471  0DEA  1D03               	btfss	3,2
  9472  0DEB  2DF8               	goto	l4921
  9473                           
  9474                           ;main.c: 448: if (zone2On == 0) {
  9475  0DEC  0847               	movf	_zone2On,w
  9476  0DED  1D03               	btfss	3,2
  9477  0DEE  2DF8               	goto	l4921
  9478                           
  9479                           ;main.c: 449: zone2Activate();
  9480  0DEF  160A  118A  2782  120A  158A  	fcall	_zone2Activate
  9481                           
  9482                           ;main.c: 450: zone2On = 1;
  9483  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  9484  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  9485  0DF6  01C7               	clrf	_zone2On
  9486  0DF7  0AC7               	incf	_zone2On,f
  9487  0DF8                     l4921:	
  9488                           
  9489                           ;main.c: 451: }
  9490                           ;main.c: 452: }
  9491                           ;main.c: 453: if (row == 4 && col == 2) {
  9492  0DF8  3004               	movlw	4
  9493  0DF9  0638               	xorwf	_row,w
  9494  0DFA  0439               	iorwf	_row+1,w
  9495  0DFB  1D03               	btfss	3,2
  9496  0DFC  0008               	return
  9497  0DFD  3002               	movlw	2
  9498  0DFE  063A               	xorwf	_col,w
  9499  0DFF  043B               	iorwf	_col+1,w
  9500  0E00  1D03               	btfss	3,2
  9501  0E01  0008               	return
  9502                           
  9503                           ;main.c: 454: if (zone3On == 0) {
  9504  0E02  0846               	movf	_zone3On,w
  9505  0E03  1D03               	btfss	3,2
  9506  0E04  0008               	return
  9507                           
  9508                           ;main.c: 455: zone3Activate();
  9509  0E05  160A  118A  27AC   	fcall	_zone3Activate
  9510                           
  9511                           ;main.c: 456: zone3On = 1;
  9512  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  9513  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  9514  0E0A  01C6               	clrf	_zone3On
  9515  0E0B  0AC6               	incf	_zone3On,f
  9516  0E0C  0008               	return
  9517  0E0D                     __end_of_activateZones:	
  9518                           
  9519                           	psect	text64
  9520  17AC                     __ptext64:	
  9521 ;; *************** function _zone3Activate *****************
  9522 ;; Defined at:
  9523 ;;		line 146 in file "main.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;		None
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  message        10    0[BANK0h] unsigned char [10]
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      void 
  9530 ;; Registers used:
  9531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9537 ;;      Params:         0       0       0       0       0       0
  9538 ;;      Locals:         0      10       0       0       0       0
  9539 ;;      Temps:          4       0       0       0       0       0
  9540 ;;      Totals:         4      10       0       0       0       0
  9541 ;;Total ram usage:       14 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:    3
  9544 ;; This function calls:
  9545 ;;		_LCDdelay3
  9546 ;;		_clearDisplay
  9547 ;;		_resetCursor
  9548 ;;		_writeMessage
  9549 ;; This function is called by:
  9550 ;;		_activateZones
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           
  9555                           ;psect for function _zone3Activate
  9556  17AC                     _zone3Activate:	
  9557                           
  9558                           ;main.c: 147: clearDisplay ();
  9559                           
  9560                           ;incstack = 0
  9561                           ; Regs used in _zone3Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9562  17AC  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9563                           
  9564                           ;main.c: 148: resetCursor ();
  9565  17B1  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9566                           
  9567                           ;main.c: 149: char message[] = "Zone 3 On";
  9568  17B6  3052               	movlw	zone3Activate@message& (0+255)
  9569  17B7  0084               	movwf	4
  9570  17B8  30BC               	movlw	low zone3Activate@F1223
  9571  17B9  00F7               	movwf	??_zone3Activate
  9572  17BA  0804               	movf	4,w
  9573  17BB  00F8               	movwf	??_zone3Activate+1
  9574  17BC  300A               	movlw	10
  9575  17BD  00F9               	movwf	??_zone3Activate+2
  9576  17BE                     u5750:	
  9577  17BE  0877               	movf	??_zone3Activate,w
  9578  17BF  0084               	movwf	4
  9579  17C0  1783               	bsf	3,7	;select IRP bank3
  9580  17C1  0800               	movf	0,w
  9581  17C2  00FA               	movwf	??_zone3Activate+3
  9582  17C3  0AF7               	incf	??_zone3Activate,f
  9583  17C4  0878               	movf	??_zone3Activate+1,w
  9584  17C5  0084               	movwf	4
  9585  17C6  1383               	bcf	3,7	;select IRP bank0
  9586  17C7  087A               	movf	??_zone3Activate+3,w
  9587  17C8  0080               	movwf	0
  9588  17C9  0AF8               	incf	??_zone3Activate+1,f
  9589  17CA  0BF9               	decfsz	??_zone3Activate+2,f
  9590  17CB  2FBE               	goto	u5750
  9591                           
  9592                           ;main.c: 150: writeMessage(message);
  9593  17CC  3052               	movlw	(low (zone3Activate@message| 0))& (0+255)
  9594  17CD  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9595                           
  9596                           ;main.c: 151: LCDdelay3 ();
  9597  17D2  160A  118A  23FC   	fcall	_LCDdelay3
  9598  17D5  0008               	return
  9599  17D6                     __end_of_zone3Activate:	
  9600                           
  9601                           	psect	text65
  9602  1782                     __ptext65:	
  9603 ;; *************** function _zone2Activate *****************
  9604 ;; Defined at:
  9605 ;;		line 139 in file "main.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;		None
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  message        10    0[BANK0h] unsigned char [10]
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9619 ;;      Params:         0       0       0       0       0       0
  9620 ;;      Locals:         0      10       0       0       0       0
  9621 ;;      Temps:          4       0       0       0       0       0
  9622 ;;      Totals:         4      10       0       0       0       0
  9623 ;;Total ram usage:       14 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    3
  9626 ;; This function calls:
  9627 ;;		_LCDdelay3
  9628 ;;		_clearDisplay
  9629 ;;		_resetCursor
  9630 ;;		_writeMessage
  9631 ;; This function is called by:
  9632 ;;		_activateZones
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           
  9637                           ;psect for function _zone2Activate
  9638  1782                     _zone2Activate:	
  9639                           
  9640                           ;main.c: 140: clearDisplay ();
  9641                           
  9642                           ;incstack = 0
  9643                           ; Regs used in _zone2Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9644  1782  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9645                           
  9646                           ;main.c: 141: resetCursor ();
  9647  1787  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9648                           
  9649                           ;main.c: 142: char message[] = "Zone 2 On";
  9650  178C  3052               	movlw	zone2Activate@message& (0+255)
  9651  178D  0084               	movwf	4
  9652  178E  30C6               	movlw	low zone2Activate@F1220
  9653  178F  00F7               	movwf	??_zone2Activate
  9654  1790  0804               	movf	4,w
  9655  1791  00F8               	movwf	??_zone2Activate+1
  9656  1792  300A               	movlw	10
  9657  1793  00F9               	movwf	??_zone2Activate+2
  9658  1794                     u5740:	
  9659  1794  0877               	movf	??_zone2Activate,w
  9660  1795  0084               	movwf	4
  9661  1796  1783               	bsf	3,7	;select IRP bank3
  9662  1797  0800               	movf	0,w
  9663  1798  00FA               	movwf	??_zone2Activate+3
  9664  1799  0AF7               	incf	??_zone2Activate,f
  9665  179A  0878               	movf	??_zone2Activate+1,w
  9666  179B  0084               	movwf	4
  9667  179C  1383               	bcf	3,7	;select IRP bank0
  9668  179D  087A               	movf	??_zone2Activate+3,w
  9669  179E  0080               	movwf	0
  9670  179F  0AF8               	incf	??_zone2Activate+1,f
  9671  17A0  0BF9               	decfsz	??_zone2Activate+2,f
  9672  17A1  2F94               	goto	u5740
  9673                           
  9674                           ;main.c: 143: writeMessage(message);
  9675  17A2  3052               	movlw	(low (zone2Activate@message| 0))& (0+255)
  9676  17A3  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9677                           
  9678                           ;main.c: 144: LCDdelay3 ();
  9679  17A8  160A  118A  23FC   	fcall	_LCDdelay3
  9680  17AB  0008               	return
  9681  17AC                     __end_of_zone2Activate:	
  9682                           
  9683                           	psect	text66
  9684  1758                     __ptext66:	
  9685 ;; *************** function _zone1Activate *****************
  9686 ;; Defined at:
  9687 ;;		line 132 in file "main.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;		None
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  message        10    0[BANK0h] unsigned char [10]
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9701 ;;      Params:         0       0       0       0       0       0
  9702 ;;      Locals:         0      10       0       0       0       0
  9703 ;;      Temps:          4       0       0       0       0       0
  9704 ;;      Totals:         4      10       0       0       0       0
  9705 ;;Total ram usage:       14 bytes
  9706 ;; Hardware stack levels used:    1
  9707 ;; Hardware stack levels required when called:    3
  9708 ;; This function calls:
  9709 ;;		_LCDdelay3
  9710 ;;		_clearDisplay
  9711 ;;		_resetCursor
  9712 ;;		_writeMessage
  9713 ;; This function is called by:
  9714 ;;		_activateZones
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           
  9719                           ;psect for function _zone1Activate
  9720  1758                     _zone1Activate:	
  9721                           
  9722                           ;main.c: 133: clearDisplay ();
  9723                           
  9724                           ;incstack = 0
  9725                           ; Regs used in _zone1Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9726  1758  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9727                           
  9728                           ;main.c: 134: resetCursor ();
  9729  175D  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9730                           
  9731                           ;main.c: 135: char message[] = "Zone 1 On";
  9732  1762  3052               	movlw	zone1Activate@message& (0+255)
  9733  1763  0084               	movwf	4
  9734  1764  30D0               	movlw	low zone1Activate@F1217
  9735  1765  00F7               	movwf	??_zone1Activate
  9736  1766  0804               	movf	4,w
  9737  1767  00F8               	movwf	??_zone1Activate+1
  9738  1768  300A               	movlw	10
  9739  1769  00F9               	movwf	??_zone1Activate+2
  9740  176A                     u5730:	
  9741  176A  0877               	movf	??_zone1Activate,w
  9742  176B  0084               	movwf	4
  9743  176C  1783               	bsf	3,7	;select IRP bank3
  9744  176D  0800               	movf	0,w
  9745  176E  00FA               	movwf	??_zone1Activate+3
  9746  176F  0AF7               	incf	??_zone1Activate,f
  9747  1770  0878               	movf	??_zone1Activate+1,w
  9748  1771  0084               	movwf	4
  9749  1772  1383               	bcf	3,7	;select IRP bank0
  9750  1773  087A               	movf	??_zone1Activate+3,w
  9751  1774  0080               	movwf	0
  9752  1775  0AF8               	incf	??_zone1Activate+1,f
  9753  1776  0BF9               	decfsz	??_zone1Activate+2,f
  9754  1777  2F6A               	goto	u5730
  9755                           
  9756                           ;main.c: 136: writeMessage(message);
  9757  1778  3052               	movlw	(low (zone1Activate@message| 0))& (0+255)
  9758  1779  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9759                           
  9760                           ;main.c: 137: LCDdelay3 ();
  9761  177E  160A  118A  23FC   	fcall	_LCDdelay3
  9762  1781  0008               	return
  9763  1782                     __end_of_zone1Activate:	
  9764                           
  9765                           	psect	text67
  9766  172E                     __ptext67:	
  9767 ;; *************** function _zone0Activate *****************
  9768 ;; Defined at:
  9769 ;;		line 125 in file "main.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;		None
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;  message        10    0[BANK0h] unsigned char [10]
  9774 ;; Return value:  Size  Location     Type
  9775 ;;                  1    wreg      void 
  9776 ;; Registers used:
  9777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9783 ;;      Params:         0       0       0       0       0       0
  9784 ;;      Locals:         0      10       0       0       0       0
  9785 ;;      Temps:          4       0       0       0       0       0
  9786 ;;      Totals:         4      10       0       0       0       0
  9787 ;;Total ram usage:       14 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:    3
  9790 ;; This function calls:
  9791 ;;		_LCDdelay3
  9792 ;;		_clearDisplay
  9793 ;;		_resetCursor
  9794 ;;		_writeMessage
  9795 ;; This function is called by:
  9796 ;;		_activateZones
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           
  9801                           ;psect for function _zone0Activate
  9802  172E                     _zone0Activate:	
  9803                           
  9804                           ;main.c: 126: clearDisplay ();
  9805                           
  9806                           ;incstack = 0
  9807                           ; Regs used in _zone0Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9808  172E  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
  9809                           
  9810                           ;main.c: 127: resetCursor ();
  9811  1733  160A  118A  23A7  160A  118A  	fcall	_resetCursor
  9812                           
  9813                           ;main.c: 128: char message[] = "Zone 0 On";
  9814  1738  3052               	movlw	zone0Activate@message& (0+255)
  9815  1739  0084               	movwf	4
  9816  173A  30DA               	movlw	low zone0Activate@F1214
  9817  173B  00F7               	movwf	??_zone0Activate
  9818  173C  0804               	movf	4,w
  9819  173D  00F8               	movwf	??_zone0Activate+1
  9820  173E  300A               	movlw	10
  9821  173F  00F9               	movwf	??_zone0Activate+2
  9822  1740                     u5720:	
  9823  1740  0877               	movf	??_zone0Activate,w
  9824  1741  0084               	movwf	4
  9825  1742  1783               	bsf	3,7	;select IRP bank3
  9826  1743  0800               	movf	0,w
  9827  1744  00FA               	movwf	??_zone0Activate+3
  9828  1745  0AF7               	incf	??_zone0Activate,f
  9829  1746  0878               	movf	??_zone0Activate+1,w
  9830  1747  0084               	movwf	4
  9831  1748  1383               	bcf	3,7	;select IRP bank0
  9832  1749  087A               	movf	??_zone0Activate+3,w
  9833  174A  0080               	movwf	0
  9834  174B  0AF8               	incf	??_zone0Activate+1,f
  9835  174C  0BF9               	decfsz	??_zone0Activate+2,f
  9836  174D  2F40               	goto	u5720
  9837                           
  9838                           ;main.c: 129: writeMessage(message);
  9839  174E  3052               	movlw	(low (zone0Activate@message| 0))& (0+255)
  9840  174F  160A  118A  24D4  160A  118A  	fcall	_writeMessage
  9841                           
  9842                           ;main.c: 130: LCDdelay3 ();
  9843  1754  160A  118A  23FC   	fcall	_LCDdelay3
  9844  1757  0008               	return
  9845  1758                     __end_of_zone0Activate:	
  9846                           
  9847                           	psect	text68
  9848  14D4                     __ptext68:	
  9849 ;; *************** function _writeMessage *****************
  9850 ;; Defined at:
  9851 ;;		line 42 in file "LCD.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;  message         1    wreg     PTR unsigned char 
  9854 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagecol(12), modeSelect@messa
      +gerow(9), 
  9855 ;;		 -> ButtonGrid@messagecol(6), ButtonGrid@messagerow(6), zoneActivate@message(9), zone3Deactivate@message(11), 
  9856 ;;		 -> zone2Deactivate@message(11), zone1Deactivate@message(11), zone0Deactivate@message(11), zone3Activate@message(10)
      +, 
  9857 ;;		 -> zone2Activate@message(10), zone1Activate@message(10), zone0Activate@message(10), alarmOff@message(10), 
  9858 ;;		 -> alarmOn@message(9), currentTemp@message2(13), currentTemp@message1(7), zone3Alert@message(13), 
  9859 ;;		 -> zone2Alert@message(13), zone1Alert@message(13), zone0Alert@message(13), zone3OK@message(10), 
  9860 ;;		 -> zone2OK@message(10), zone1OK@message(10), zone0OK@message(10), 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  message         1    6[COMMON] PTR unsigned char 
  9863 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagecol(12), modeSelect@messa
      +gerow(9), 
  9864 ;;		 -> ButtonGrid@messagecol(6), ButtonGrid@messagerow(6), zoneActivate@message(9), zone3Deactivate@message(11), 
  9865 ;;		 -> zone2Deactivate@message(11), zone1Deactivate@message(11), zone0Deactivate@message(11), zone3Activate@message(10)
      +, 
  9866 ;;		 -> zone2Activate@message(10), zone1Activate@message(10), zone0Activate@message(10), alarmOff@message(10), 
  9867 ;;		 -> alarmOn@message(9), currentTemp@message2(13), currentTemp@message1(7), zone3Alert@message(13), 
  9868 ;;		 -> zone2Alert@message(13), zone1Alert@message(13), zone0Alert@message(13), zone3OK@message(10), 
  9869 ;;		 -> zone2OK@message(10), zone1OK@message(10), zone0OK@message(10), 
  9870 ;;  i               2    4[COMMON] int 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  1    wreg      void 
  9873 ;; Registers used:
  9874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9880 ;;      Params:         0       0       0       0       0       0
  9881 ;;      Locals:         3       0       0       0       0       0
  9882 ;;      Temps:          1       0       0       0       0       0
  9883 ;;      Totals:         4       0       0       0       0       0
  9884 ;;Total ram usage:        4 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    2
  9887 ;; This function calls:
  9888 ;;		_writeChar
  9889 ;; This function is called by:
  9890 ;;		_zone0OK
  9891 ;;		_zone1OK
  9892 ;;		_zone2OK
  9893 ;;		_zone3OK
  9894 ;;		_zone0Alert
  9895 ;;		_zone1Alert
  9896 ;;		_zone2Alert
  9897 ;;		_zone3Alert
  9898 ;;		_alarmOn
  9899 ;;		_alarmOff
  9900 ;;		_zone0Activate
  9901 ;;		_zone1Activate
  9902 ;;		_zone2Activate
  9903 ;;		_zone3Activate
  9904 ;;		_zone0Deactivate
  9905 ;;		_zone1Deactivate
  9906 ;;		_zone2Deactivate
  9907 ;;		_zone3Deactivate
  9908 ;;		_zoneActivate
  9909 ;;		_writeMessageline1
  9910 ;;		_writeMessageline2
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           
  9915                           ;psect for function _writeMessage
  9916  14D4                     _writeMessage:	
  9917                           
  9918                           ;incstack = 0
  9919                           ; Regs used in _writeMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9920                           ;writeMessage@message stored from wreg
  9921  14D4  00F6               	movwf	writeMessage@message
  9922                           
  9923                           ;LCD.c: 43: for (int i = 0; message[i] != '\0'; i++){
  9924  14D5  01F4               	clrf	writeMessage@i
  9925  14D6  01F5               	clrf	writeMessage@i+1
  9926  14D7                     l4349:	
  9927  14D7  0874               	movf	writeMessage@i,w
  9928  14D8  0776               	addwf	writeMessage@message,w
  9929  14D9  00F3               	movwf	??_writeMessage
  9930  14DA  0873               	movf	??_writeMessage,w
  9931  14DB  0084               	movwf	4
  9932  14DC  1383               	bcf	3,7	;select IRP bank0
  9933  14DD  0800               	movf	0,w
  9934  14DE  1903               	btfsc	3,2
  9935  14DF  0008               	return
  9936                           
  9937                           ;LCD.c: 44: writeChar (message[i]);
  9938  14E0  0874               	movf	writeMessage@i,w
  9939  14E1  0776               	addwf	writeMessage@message,w
  9940  14E2  00F3               	movwf	??_writeMessage
  9941  14E3  0873               	movf	??_writeMessage,w
  9942  14E4  0084               	movwf	4
  9943  14E5  1383               	bcf	3,7	;select IRP bank0
  9944  14E6  0800               	movf	0,w
  9945  14E7  160A  118A  2535  160A  118A  	fcall	_writeChar
  9946  14EC  3001               	movlw	1
  9947  14ED  07F4               	addwf	writeMessage@i,f
  9948  14EE  1803               	skipnc
  9949  14EF  0AF5               	incf	writeMessage@i+1,f
  9950  14F0  3000               	movlw	0
  9951  14F1  07F5               	addwf	writeMessage@i+1,f
  9952  14F2  2CD7               	goto	l4349
  9953  14F3                     __end_of_writeMessage:	
  9954                           
  9955                           	psect	text69
  9956  1535                     __ptext69:	
  9957 ;; *************** function _writeChar *****************
  9958 ;; Defined at:
  9959 ;;		line 27 in file "LCD.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  var             1    wreg     unsigned char 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;  var             1    2[COMMON] unsigned char 
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  1    wreg      void 
  9966 ;; Registers used:
  9967 ;;		wreg, status,2, status,0, pclath, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9973 ;;      Params:         0       0       0       0       0       0
  9974 ;;      Locals:         1       0       0       0       0       0
  9975 ;;      Temps:          0       0       0       0       0       0
  9976 ;;      Totals:         1       0       0       0       0       0
  9977 ;;Total ram usage:        1 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; Hardware stack levels required when called:    1
  9980 ;; This function calls:
  9981 ;;		_LCDdelay
  9982 ;; This function is called by:
  9983 ;;		_changeTemp
  9984 ;;		_changeTime
  9985 ;;		_changeDate
  9986 ;;		_changeDelay
  9987 ;;		_writeMessage
  9988 ;;		_display
  9989 ;;		_displayDate
  9990 ;;		_getTemperature
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           
  9995                           ;psect for function _writeChar
  9996  1535                     _writeChar:	
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _writeChar: [wreg+status,2+status,0+pclath+cstack]
 10000                           ;writeChar@var stored from wreg
 10001  1535  00F2               	movwf	writeChar@var
 10002                           
 10003                           ;LCD.c: 28: PORTA = 0;
 10004  1536  1283               	bcf	3,5	;RP0=0, select bank0
 10005  1537  1303               	bcf	3,6	;RP1=0, select bank0
 10006  1538  0185               	clrf	5	;volatile
 10007                           
 10008                           ;LCD.c: 29: PORTD = 0;
 10009  1539  0188               	clrf	8	;volatile
 10010                           
 10011                           ;LCD.c: 30: RA1 = 1;
 10012  153A  1485               	bsf	5,1	;volatile
 10013                           
 10014                           ;LCD.c: 31: RA2 = 0;
 10015  153B  1105               	bcf	5,2	;volatile
 10016                           
 10017                           ;LCD.c: 32: LCDdelay ();
 10018  153C  160A  118A  23EC  160A  118A  	fcall	_LCDdelay
 10019                           
 10020                           ;LCD.c: 33: RA3 = 1;
 10021  1541  1283               	bcf	3,5	;RP0=0, select bank0
 10022  1542  1303               	bcf	3,6	;RP1=0, select bank0
 10023  1543  1585               	bsf	5,3	;volatile
 10024                           
 10025                           ;LCD.c: 34: LCDdelay ();
 10026  1544  160A  118A  23EC  160A  118A  	fcall	_LCDdelay
 10027                           
 10028                           ;LCD.c: 35: PORTD = var;
 10029  1549  0872               	movf	writeChar@var,w
 10030  154A  1283               	bcf	3,5	;RP0=0, select bank0
 10031  154B  1303               	bcf	3,6	;RP1=0, select bank0
 10032  154C  0088               	movwf	8	;volatile
 10033                           
 10034                           ;LCD.c: 36: LCDdelay ();
 10035  154D  160A  118A  23EC  160A  118A  	fcall	_LCDdelay
 10036                           
 10037                           ;LCD.c: 37: RA3 = 0;
 10038  1552  1283               	bcf	3,5	;RP0=0, select bank0
 10039  1553  1303               	bcf	3,6	;RP1=0, select bank0
 10040  1554  1185               	bcf	5,3	;volatile
 10041                           
 10042                           ;LCD.c: 38: LCDdelay ();
 10043  1555  160A  118A  23EC   	fcall	_LCDdelay
 10044  1558  0008               	return
 10045  1559                     __end_of_writeChar:	
 10046                           
 10047                           	psect	text70
 10048  13FC                     __ptext70:	
 10049 ;; *************** function _LCDdelay3 *****************
 10050 ;; Defined at:
 10051 ;;		line 21 in file "LCD.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;		None
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  i               2    0[COMMON] unsigned int 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10065 ;;      Params:         0       0       0       0       0       0
 10066 ;;      Locals:         2       0       0       0       0       0
 10067 ;;      Temps:          0       0       0       0       0       0
 10068 ;;      Totals:         2       0       0       0       0       0
 10069 ;;Total ram usage:        2 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_zone0OK
 10075 ;;		_zone1OK
 10076 ;;		_zone2OK
 10077 ;;		_zone3OK
 10078 ;;		_zone0Alert
 10079 ;;		_zone1Alert
 10080 ;;		_zone2Alert
 10081 ;;		_zone3Alert
 10082 ;;		_alarmOn
 10083 ;;		_alarmOff
 10084 ;;		_zone0Activate
 10085 ;;		_zone1Activate
 10086 ;;		_zone2Activate
 10087 ;;		_zone3Activate
 10088 ;;		_zone0Deactivate
 10089 ;;		_zone1Deactivate
 10090 ;;		_zone2Deactivate
 10091 ;;		_zone3Deactivate
 10092 ;;		_zoneActivate
 10093 ;;		_checkZoneMessage
 10094 ;;		_changeTriggerMessage
 10095 ;;		_currentTemp
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _LCDdelay3
 10101  13FC                     _LCDdelay3:	
 10102                           
 10103                           ;LCD.c: 22: for (unsigned i=0; i<25000; i++);
 10104                           
 10105                           ;incstack = 0
 10106                           ; Regs used in _LCDdelay3: [wreg+status,2]
 10107  13FC  01F0               	clrf	LCDdelay3@i
 10108  13FD  01F1               	clrf	LCDdelay3@i+1
 10109  13FE                     L15:	
 10110  13FE  3061               	movlw	97
 10111  13FF  0271               	subwf	LCDdelay3@i+1,w
 10112  1400  30A8               	movlw	168
 10113  1401  1903               	skipnz
 10114  1402  0270               	subwf	LCDdelay3@i,w
 10115  1403  1803               	btfsc	3,0
 10116  1404  0008               	return
 10117  1405  3001               	movlw	1
 10118  1406  07F0               	addwf	LCDdelay3@i,f
 10119  1407  1803               	skipnc
 10120  1408  0AF1               	incf	LCDdelay3@i+1,f
 10121  1409  3000               	movlw	0
 10122  140A  07F1               	addwf	LCDdelay3@i+1,f
 10123  140B  2BFE               	goto	L15
 10124  140C                     __end_of_LCDdelay3:	
 10125                           
 10126                           	psect	text71
 10127  14B6                     __ptext71:	
 10128 ;; *************** function _Return *****************
 10129 ;; Defined at:
 10130 ;;		line 794 in file "main.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1    wreg      void 
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0, pclath, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10144 ;;      Params:         0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    3
 10151 ;; This function calls:
 10152 ;;		_clearDisplay
 10153 ;;		_resetCursor
 10154 ;; This function is called by:
 10155 ;;		_main
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _Return
 10161  14B6                     _Return:	
 10162                           
 10163                           ;main.c: 795: clearDisplay ();
 10164                           
 10165                           ;incstack = 0
 10166                           ; Regs used in _Return: [wreg+status,2+status,0+pclath+cstack]
 10167  14B6  160A  118A  23A2  160A  118A  	fcall	_clearDisplay
 10168                           
 10169                           ;main.c: 796: resetCursor ();
 10170  14BB  160A  118A  23A7  160A  118A  	fcall	_resetCursor
 10171                           
 10172                           ;main.c: 797: if (row == 1 && col == 4) {
 10173  14C0  1283               	bcf	3,5	;RP0=0, select bank0
 10174  14C1  1303               	bcf	3,6	;RP1=0, select bank0
 10175  14C2  0338               	decf	_row,w
 10176  14C3  0439               	iorwf	_row+1,w
 10177  14C4  1D03               	btfss	3,2
 10178  14C5  0008               	return
 10179  14C6  3004               	movlw	4
 10180  14C7  063A               	xorwf	_col,w
 10181  14C8  043B               	iorwf	_col+1,w
 10182  14C9  1D03               	btfss	3,2
 10183  14CA  0008               	return
 10184                           
 10185                           ;main.c: 798: zoneActMode = 0;
 10186  14CB  01CB               	clrf	_zoneActMode
 10187                           
 10188                           ;main.c: 799: zoneCheck = 0;
 10189  14CC  01CA               	clrf	_zoneCheck
 10190                           
 10191                           ;main.c: 800: tempChange = 0;
 10192  14CD  01C1               	clrf	_tempChange
 10193                           
 10194                           ;main.c: 801: durationChange = 0;
 10195  14CE  01AA               	clrf	_durationChange
 10196                           
 10197                           ;main.c: 802: alertChange = 0;
 10198  14CF  01A9               	clrf	_alertChange
 10199                           
 10200                           ;main.c: 803: timeChange = 0;
 10201  14D0  01C0               	clrf	_timeChange
 10202                           
 10203                           ;main.c: 804: dateChange = 0;
 10204  14D1  01BF               	clrf	_dateChange
 10205                           
 10206                           ;main.c: 805: delayChange = 0;
 10207  14D2  01BE               	clrf	_delayChange
 10208  14D3  0008               	return
 10209  14D4                     __end_of_Return:	
 10210                           
 10211                           	psect	text72
 10212  13A7                     __ptext72:	
 10213 ;; *************** function _resetCursor *****************
 10214 ;; Defined at:
 10215 ;;		line 83 in file "LCD.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;		None
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  1    wreg      void 
 10222 ;; Registers used:
 10223 ;;		wreg, status,2, status,0, pclath, cstack
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10229 ;;      Params:         0       0       0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0
 10231 ;;      Temps:          0       0       0       0       0       0
 10232 ;;      Totals:         0       0       0       0       0       0
 10233 ;;Total ram usage:        0 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:    2
 10236 ;; This function calls:
 10237 ;;		_writeCmd
 10238 ;; This function is called by:
 10239 ;;		_zone0OK
 10240 ;;		_zone1OK
 10241 ;;		_zone2OK
 10242 ;;		_zone3OK
 10243 ;;		_zone0Alert
 10244 ;;		_zone1Alert
 10245 ;;		_zone2Alert
 10246 ;;		_zone3Alert
 10247 ;;		_alarmOn
 10248 ;;		_alarmOff
 10249 ;;		_zone0Activate
 10250 ;;		_zone1Activate
 10251 ;;		_zone2Activate
 10252 ;;		_zone3Activate
 10253 ;;		_zone0Deactivate
 10254 ;;		_zone1Deactivate
 10255 ;;		_zone2Deactivate
 10256 ;;		_zone3Deactivate
 10257 ;;		_zoneActivate
 10258 ;;		_modeSelect
 10259 ;;		_checkZoneMessage
 10260 ;;		_changeTriggerMessage
 10261 ;;		_changeTemp
 10262 ;;		_changeTime
 10263 ;;		_changeDate
 10264 ;;		_changeDelay
 10265 ;;		_Return
 10266 ;;		_currentTemp
 10267 ;;		_ButtonGrid
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           
 10272                           ;psect for function _resetCursor
 10273  13A7                     _resetCursor:	
 10274                           
 10275                           ;LCD.c: 84: writeCmd(0x02);
 10276                           
 10277                           ;incstack = 0
 10278                           ; Regs used in _resetCursor: [wreg+status,2+status,0+pclath+cstack]
 10279  13A7  3002               	movlw	2
 10280  13A8  160A  118A  2513   	fcall	_writeCmd
 10281  13AB  0008               	return
 10282  13AC                     __end_of_resetCursor:	
 10283                           
 10284                           	psect	text73
 10285  13A2                     __ptext73:	
 10286 ;; *************** function _clearDisplay *****************
 10287 ;; Defined at:
 10288 ;;		line 90 in file "LCD.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;		None
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;		None
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      void 
 10295 ;; Registers used:
 10296 ;;		wreg, status,2, status,0, pclath, cstack
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10302 ;;      Params:         0       0       0       0       0       0
 10303 ;;      Locals:         0       0       0       0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0
 10305 ;;      Totals:         0       0       0       0       0       0
 10306 ;;Total ram usage:        0 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; Hardware stack levels required when called:    2
 10309 ;; This function calls:
 10310 ;;		_writeCmd
 10311 ;; This function is called by:
 10312 ;;		_zone0OK
 10313 ;;		_zone1OK
 10314 ;;		_zone2OK
 10315 ;;		_zone3OK
 10316 ;;		_zone0Alert
 10317 ;;		_zone1Alert
 10318 ;;		_zone2Alert
 10319 ;;		_zone3Alert
 10320 ;;		_alarmOn
 10321 ;;		_alarmOff
 10322 ;;		_zone0Activate
 10323 ;;		_zone1Activate
 10324 ;;		_zone2Activate
 10325 ;;		_zone3Activate
 10326 ;;		_zone0Deactivate
 10327 ;;		_zone1Deactivate
 10328 ;;		_zone2Deactivate
 10329 ;;		_zone3Deactivate
 10330 ;;		_zoneActivate
 10331 ;;		_checkZoneMessage
 10332 ;;		_changeTriggerMessage
 10333 ;;		_changeTemp
 10334 ;;		_changeTime
 10335 ;;		_changeDate
 10336 ;;		_changeDelay
 10337 ;;		_Return
 10338 ;;		_currentTemp
 10339 ;;		_ButtonGrid
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           
 10344                           ;psect for function _clearDisplay
 10345  13A2                     _clearDisplay:	
 10346                           
 10347                           ;LCD.c: 91: writeCmd(0x01);
 10348                           
 10349                           ;incstack = 0
 10350                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
 10351  13A2  3001               	movlw	1
 10352  13A3  160A  118A  2513   	fcall	_writeCmd
 10353  13A6  0008               	return
 10354  13A7                     __end_of_clearDisplay:	
 10355                           
 10356                           	psect	text74
 10357  1513                     __ptext74:	
 10358 ;; *************** function _writeCmd *****************
 10359 ;; Defined at:
 10360 ;;		line 67 in file "LCD.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;  cmd             1    wreg     unsigned char 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;  cmd             1    2[COMMON] unsigned char 
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0, pclath, cstack
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10374 ;;      Params:         0       0       0       0       0       0
 10375 ;;      Locals:         1       0       0       0       0       0
 10376 ;;      Temps:          0       0       0       0       0       0
 10377 ;;      Totals:         1       0       0       0       0       0
 10378 ;;Total ram usage:        1 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    1
 10381 ;; This function calls:
 10382 ;;		_LCDdelay
 10383 ;; This function is called by:
 10384 ;;		_writeMessageline2
 10385 ;;		_resetCursor
 10386 ;;		_displayOn
 10387 ;;		_clearDisplay
 10388 ;;		_turnon2linemode
 10389 ;;		_Cinit
 10390 ;;		_display
 10391 ;;		_displayDate
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           
 10396                           ;psect for function _writeCmd
 10397  1513                     _writeCmd:	
 10398                           
 10399                           ;incstack = 0
 10400                           ; Regs used in _writeCmd: [wreg+status,2+status,0+pclath+cstack]
 10401                           ;writeCmd@cmd stored from wreg
 10402  1513  00F2               	movwf	writeCmd@cmd
 10403                           
 10404                           ;LCD.c: 70: RA1 = 0;
 10405  1514  1283               	bcf	3,5	;RP0=0, select bank0
 10406  1515  1303               	bcf	3,6	;RP1=0, select bank0
 10407  1516  1085               	bcf	5,1	;volatile
 10408                           
 10409                           ;LCD.c: 71: RA2 = 0;
 10410  1517  1105               	bcf	5,2	;volatile
 10411                           
 10412                           ;LCD.c: 72: LCDdelay ();
 10413  1518  160A  118A  23EC  160A  118A  	fcall	_LCDdelay
 10414                           
 10415                           ;LCD.c: 73: RA3 = 1;
 10416  151D  1283               	bcf	3,5	;RP0=0, select bank0
 10417  151E  1303               	bcf	3,6	;RP1=0, select bank0
 10418  151F  1585               	bsf	5,3	;volatile
 10419                           
 10420                           ;LCD.c: 74: LCDdelay ();
 10421  1520  160A  118A  23EC  160A  118A  	fcall	_LCDdelay
 10422                           
 10423                           ;LCD.c: 75: PORTD = cmd;
 10424  1525  0872               	movf	writeCmd@cmd,w
 10425  1526  1283               	bcf	3,5	;RP0=0, select bank0
 10426  1527  1303               	bcf	3,6	;RP1=0, select bank0
 10427  1528  0088               	movwf	8	;volatile
 10428                           
 10429                           ;LCD.c: 76: LCDdelay ();
 10430  1529  160A  118A  23EC  160A  118A  	fcall	_LCDdelay
 10431                           
 10432                           ;LCD.c: 77: RA3 = 0;
 10433  152E  1283               	bcf	3,5	;RP0=0, select bank0
 10434  152F  1303               	bcf	3,6	;RP1=0, select bank0
 10435  1530  1185               	bcf	5,3	;volatile
 10436                           
 10437                           ;LCD.c: 78: LCDdelay ();
 10438  1531  160A  118A  23EC   	fcall	_LCDdelay
 10439  1534  0008               	return
 10440  1535                     __end_of_writeCmd:	
 10441                           
 10442                           	psect	text75
 10443  13EC                     __ptext75:	
 10444 ;; *************** function _LCDdelay *****************
 10445 ;; Defined at:
 10446 ;;		line 14 in file "LCD.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;		None
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;  i               2    0[COMMON] unsigned int 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  1    wreg      void 
 10453 ;; Registers used:
 10454 ;;		wreg, status,2
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10460 ;;      Params:         0       0       0       0       0       0
 10461 ;;      Locals:         2       0       0       0       0       0
 10462 ;;      Temps:          0       0       0       0       0       0
 10463 ;;      Totals:         2       0       0       0       0       0
 10464 ;;Total ram usage:        2 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; This function calls:
 10467 ;;		Nothing
 10468 ;; This function is called by:
 10469 ;;		_writeChar
 10470 ;;		_writeCmd
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           
 10475                           ;psect for function _LCDdelay
 10476  13EC                     _LCDdelay:	
 10477                           
 10478                           ;LCD.c: 15: for (unsigned i=0; i<20; i++);
 10479                           
 10480                           ;incstack = 0
 10481                           ; Regs used in _LCDdelay: [wreg+status,2]
 10482  13EC  01F0               	clrf	LCDdelay@i
 10483  13ED  01F1               	clrf	LCDdelay@i+1
 10484  13EE                     L16:	
 10485  13EE  3000               	movlw	0
 10486  13EF  0271               	subwf	LCDdelay@i+1,w
 10487  13F0  3014               	movlw	20
 10488  13F1  1903               	skipnz
 10489  13F2  0270               	subwf	LCDdelay@i,w
 10490  13F3  1803               	btfsc	3,0
 10491  13F4  0008               	return
 10492  13F5  3001               	movlw	1
 10493  13F6  07F0               	addwf	LCDdelay@i,f
 10494  13F7  1803               	skipnc
 10495  13F8  0AF1               	incf	LCDdelay@i+1,f
 10496  13F9  3000               	movlw	0
 10497  13FA  07F1               	addwf	LCDdelay@i+1,f
 10498  13FB  2BEE               	goto	L16
 10499  13FC                     __end_of_LCDdelay:	
 10500  007E                     btemp	set	126	;btemp
 10501  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        277
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h           63     23      63
    BANK0l           16      0      12
    BANK1            80      0      80
    BANK3            96      0      94
    BANK2            96      0      89

Pointer List with Targets:

    writeMessageline2@message	PTR unsigned char  size(1) Largest target is 13
		 -> modeSelect@messagecol(BANK0h[12]), ButtonGrid@messagecol(COMMON[6]), currentTemp@message2(COMMON[13]), 

    writeMessageline1@message	PTR unsigned char  size(1) Largest target is 12
		 -> changeTriggerMessage@messagerow(BANK0h[12]), checkZoneMessage@messagerow(COMMON[6]), modeSelect@messagerow(BANK0h[9]), ButtonGrid@messagerow(COMMON[6]), 
		 -> currentTemp@message1(COMMON[7]), 

    writeMessage@message	PTR unsigned char  size(1) Largest target is 13
		 -> changeTriggerMessage@messagerow(BANK0h[12]), checkZoneMessage@messagerow(COMMON[6]), modeSelect@messagecol(BANK0h[12]), modeSelect@messagerow(BANK0h[9]), 
		 -> ButtonGrid@messagecol(COMMON[6]), ButtonGrid@messagerow(COMMON[6]), zoneActivate@message(BANK0h[9]), zone3Deactivate@message(BANK0h[11]), 
		 -> zone2Deactivate@message(BANK0h[11]), zone1Deactivate@message(BANK0h[11]), zone0Deactivate@message(BANK0h[11]), zone3Activate@message(BANK0h[10]), 
		 -> zone2Activate@message(BANK0h[10]), zone1Activate@message(BANK0h[10]), zone0Activate@message(BANK0h[10]), alarmOff@message(BANK0h[10]), 
		 -> alarmOn@message(BANK0h[9]), currentTemp@message2(COMMON[13]), currentTemp@message1(COMMON[7]), zone3Alert@message(BANK0h[13]), 
		 -> zone2Alert@message(BANK0h[13]), zone1Alert@message(BANK0h[13]), zone0Alert@message(BANK0h[13]), zone3OK@message(BANK0h[10]), 
		 -> zone2OK@message(BANK0h[10]), zone1OK@message(BANK0h[10]), zone0OK@message(BANK0h[10]), 


Critical Paths under _main in COMMON

    _main->_changeDelay
    _main->_changeTemp
    _showTime->_display
    _display->___awdiv
    _showTemp->_getTemperature
    _getTemperature->___awdiv
    _getTemperature->_writeByte
    _writeByte->_tempDelay
    _reset->_tempDelay
    _readByte->_tempDelay
    _showDate->_displayDate
    _setTime->_writeTime
    _getTime->_writeTime
    _displayDate->___awdiv
    _clockInit->_writeTime
    _Cinit->_writeCmd
    _deactivateZones->_zone0Deactivate
    _deactivateZones->_zone1Deactivate
    _deactivateZones->_zone2Deactivate
    _deactivateZones->_zone3Deactivate
    _zone3Deactivate->_writeMessage
    _zone2Deactivate->_writeMessage
    _zone1Deactivate->_writeMessage
    _zone0Deactivate->_writeMessage
    _checkZones2->_zone0Alert
    _checkZones2->_zone0OK
    _checkZones2->_zone1Alert
    _checkZones2->_zone1OK
    _checkZones2->_zone2Alert
    _checkZones2->_zone2OK
    _checkZones2->_zone3Alert
    _checkZones2->_zone3OK
    _zone3OK->_writeMessage
    _zone3Alert->_writeMessage
    _zone2OK->_writeMessage
    _zone2Alert->_writeMessage
    _zone1OK->_writeMessage
    _zone1Alert->_writeMessage
    _zone0OK->_writeMessage
    _zone0Alert->_writeMessage
    _checkZones->_checkZoneMessage
    _checkZoneMessage->_writeMessageline1
    _changeTime->___awdiv
    _changeTempMode->_changeTriggerMessage
    _changeTriggerMessage->_writeMessageline1
    _changeTemp->___awdiv
    _changeDelay->___awdiv
    _changeDate->___awdiv
    _turnon2linemode->_writeCmd
    _displayOn->_writeCmd
    _buzzer2->_delay
    _alarmOnOff->_modeSelect
    _modeSelect->_writeMessageline1
    _modeSelect->_writeMessageline2
    _writeMessageline2->_writeMessage
    _writeMessageline1->_writeMessage
    _alarmOn->_writeMessage
    _alarmOff->_writeMessage
    _activateZonesMode->_zoneActivate
    _zoneActivate->_writeMessage
    _activateZones->_zone0Activate
    _activateZones->_zone1Activate
    _activateZones->_zone2Activate
    _activateZones->_zone3Activate
    _zone3Activate->_writeMessage
    _zone2Activate->_writeMessage
    _zone1Activate->_writeMessage
    _zone0Activate->_writeMessage
    _writeMessage->_writeChar
    _writeChar->_LCDdelay
    _resetCursor->_writeCmd
    _clearDisplay->_writeCmd
    _writeCmd->_LCDdelay

Critical Paths under _main in BANK0h

    _showTime->_display
    _showTemp->_getTemperature
    _showDate->_displayDate
    _deactivateZones->_zone0Deactivate
    _deactivateZones->_zone1Deactivate
    _deactivateZones->_zone2Deactivate
    _deactivateZones->_zone3Deactivate
    _checkZones2->_zone0Alert
    _checkZones2->_zone1Alert
    _checkZones2->_zone2Alert
    _checkZones2->_zone3Alert
    _changeTempMode->_changeTriggerMessage
    _alarmOnOff->_modeSelect
    _activateZonesMode->_zoneActivate
    _activateZones->_zone0Activate
    _activateZones->_zone1Activate
    _activateZones->_zone2Activate
    _activateZones->_zone3Activate

Critical Paths under _main in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53407
                                             21 BANK0h     2     2      0
                           _LCDsetup
                             _Return
                      _activateZones
                  _activateZonesMode
                         _alarmOnOff
                            _buzzer2
                         _changeDate
                     _changeDateMode
                        _changeDelay
                    _changeDelayMode
                         _changeTemp
                     _changeTempMode
                         _changeTime
                     _changeTimeMode
                       _checkButtons
                         _checkZones
                        _checkZones2
                    _deactivateZones
                       _delaySeconds
                               _init
                           _showDate
                           _showTemp
                           _showTime
 ---------------------------------------------------------------------------------
 (1) _showTime                                             0     0      0    2875
                              _Cinit
                          _clockInit
                            _display
                            _getTime
                            _setTime
 ---------------------------------------------------------------------------------
 (2) _display                                             14    14      0    2321
                                              9 COMMON     3     3      0
                                              0 BANK0h     9     9      0
                            ___awdiv
                        _buttondelay
                          _writeChar
                           _writeCmd
 ---------------------------------------------------------------------------------
 (1) _showTemp                                             0     0      0    4959
                     _getTemperature
 ---------------------------------------------------------------------------------
 (2) _getTemperature                                       7     7      0    4959
                                              9 COMMON     3     3      0
                                              0 BANK0h     4     4      0
                            ___awdiv
                            ___awmod
                              _delay
                           _readByte
                              _reset
                          _tempDelay
                          _writeByte
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) _writeByte                                            5     5      0     499
                                              4 COMMON     5     5      0
                          _tempDelay
 ---------------------------------------------------------------------------------
 (3) _reset                                                2     2      0     410
                                              4 COMMON     2     2      0
                          _tempDelay
 ---------------------------------------------------------------------------------
 (3) _readByte                                             3     3      0     456
                                              4 COMMON     3     3      0
                          _tempDelay
 ---------------------------------------------------------------------------------
 (4) _tempDelay                                            4     3      1     385
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _showDate                                             0     0      0    2875
                              _Cinit
                          _clockInit
                        _displayDate
                            _getTime
                            _setTime
 ---------------------------------------------------------------------------------
 (2) _setTime                                              2     2      0     159
                                              5 COMMON     2     2      0
                          _writeTime
 ---------------------------------------------------------------------------------
 (2) _getTime                                              3     3      0     205
                                              5 COMMON     3     3      0
                           _readTime
                          _writeTime
 ---------------------------------------------------------------------------------
 (3) _readTime                                             4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _displayDate                                         14    14      0    2321
                                              9 COMMON     3     3      0
                                              0 BANK0h     9     9      0
                            ___awdiv
                        _buttondelay
                          _writeChar
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _buttondelay                                          2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _clockInit                                            0     0      0      91
                          _writeTime
 ---------------------------------------------------------------------------------
 (3) _writeTime                                            5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _Cinit                                                0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delaySeconds                                         7     5      2     145
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _deactivateZones                                      0     0      0    4660
                    _zone0Deactivate
                    _zone1Deactivate
                    _zone2Deactivate
                    _zone3Deactivate
 ---------------------------------------------------------------------------------
 (2) _zone3Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _checkZones2                                          0     0      0    9320
                         _zone0Alert
                            _zone0OK
                         _zone1Alert
                            _zone1OK
                         _zone2Alert
                            _zone2OK
                         _zone3Alert
                            _zone3OK
 ---------------------------------------------------------------------------------
 (2) _zone3OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone3Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _checkZones                                           0     0      0    1346
                   _checkZoneMessage
 ---------------------------------------------------------------------------------
 (2) _checkZoneMessage                                     6     6      0    1346
                                              8 COMMON     6     6      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                  _writeMessageline1
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         1     1      0      24
                                              0 COMMON     1     1      0
                        _buttonsetup
 ---------------------------------------------------------------------------------
 (2) _buttonsetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeTimeMode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeTime                                           9     9      0    3859
                                              9 COMMON     3     3      0
                                              0 BANK0h     6     6      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _changeTempMode                                       0     0      0    1346
               _changeTriggerMessage
 ---------------------------------------------------------------------------------
 (2) _changeTriggerMessage                                16    16      0    1346
                                              8 COMMON     4     4      0
                                              0 BANK0h    12    12      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                  _writeMessageline1
 ---------------------------------------------------------------------------------
 (1) _changeTemp                                           5     5      0    3599
                                              9 COMMON     5     5      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _changeDelayMode                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeDelay                                          5     5      0    3599
                                              9 COMMON     5     5      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _changeDateMode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeDate                                           9     9      0    3859
                                              9 COMMON     3     3      0
                                              0 BANK0h     6     6      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1678
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDsetup                                             0     0      0     198
                          _displayOn
                    _turnon2linemode
 ---------------------------------------------------------------------------------
 (3) _turnon2linemode                                      0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _displayOn                                            0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (1) _buzzer2                                              0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _alarmOnOff                                           0     0      0    4674
                          _LCDdelay2
                           _alarmOff
                            _alarmOn
                         _modeSelect
 ---------------------------------------------------------------------------------
 (2) _modeSelect                                          25    25      0    2298
                                              8 COMMON     4     4      0
                                              0 BANK0h    21    21      0
                        _resetCursor
                  _writeMessageline1
                  _writeMessageline2
 ---------------------------------------------------------------------------------
 (3) _writeMessageline2                                    1     1      0    1079
                                              7 COMMON     1     1      0
                           _writeCmd
                       _writeMessage
 ---------------------------------------------------------------------------------
 (3) _writeMessageline1                                    1     1      0    1040
                                              7 COMMON     1     1      0
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _alarmOn                                             13    13      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h     9     9      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _alarmOff                                            14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _LCDdelay2                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _activateZonesMode                                    0     0      0    1165
                       _zoneActivate
 ---------------------------------------------------------------------------------
 (2) _zoneActivate                                        13    13      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h     9     9      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _activateZones                                        0     0      0    4660
                      _zone0Activate
                      _zone1Activate
                      _zone2Activate
                      _zone3Activate
 ---------------------------------------------------------------------------------
 (2) _zone3Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (3) _writeMessage                                         4     4      0     859
                                              3 COMMON     4     4      0
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) _writeChar                                            1     1      0      99
                                              2 COMMON     1     1      0
                           _LCDdelay
 ---------------------------------------------------------------------------------
 (3) _LCDdelay3                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Return                                               0     0      0     198
                       _clearDisplay
                        _resetCursor
 ---------------------------------------------------------------------------------
 (3) _resetCursor                                          0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _writeCmd                                             1     1      0      99
                                              2 COMMON     1     1      0
                           _LCDdelay
 ---------------------------------------------------------------------------------
 (4) _LCDdelay                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDsetup
     _displayOn
       _writeCmd
         _LCDdelay
     _turnon2linemode
       _writeCmd
         _LCDdelay
   _Return
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
   _activateZones
     _zone0Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _activateZonesMode
     _zoneActivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _alarmOnOff
     _LCDdelay2
     _alarmOff
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _alarmOn
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _modeSelect
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
       _writeMessageline2
         _writeCmd
           _LCDdelay
         _writeMessage
           _writeChar
             _LCDdelay
   _buzzer2
     _delay
   _changeDate
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeDateMode
   _changeDelay
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeDelayMode
   _changeTemp
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeTempMode
     _changeTriggerMessage
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
   _changeTime
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeTimeMode
   _checkButtons
     _buttonsetup
   _checkZones
     _checkZoneMessage
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
   _checkZones2
     _zone0Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone0OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _deactivateZones
     _zone0Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _delaySeconds
   _init
   _showDate
     _Cinit
       _writeCmd
         _LCDdelay
     _clockInit
       _writeTime
     _displayDate
       ___awdiv
       _buttondelay
       _writeChar
         _LCDdelay
       _writeCmd
         _LCDdelay
     _getTime
       _readTime
       _writeTime
     _setTime
       _writeTime
   _showTemp
     _getTemperature
       ___awdiv
       ___awmod
       _delay
       _readByte
         _tempDelay
       _reset
         _tempDelay
       _tempDelay
       _writeByte
         _tempDelay
       _writeChar
         _LCDdelay
   _showTime
     _Cinit
       _writeCmd
         _LCDdelay
     _clockInit
       _writeTime
     _display
       ___awdiv
       _buttondelay
       _writeChar
         _LCDdelay
       _writeCmd
         _LCDdelay
     _getTime
       _readTime
       _writeTime
     _setTime
       _writeTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5E      11       97.9%
BITBANK3            60      0       0      10        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      59      13       92.7%
BITBANK2            60      0       0      12        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       9      100.0%
BITBANK1            50      0       0       8        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0l              10      0       C       7       75.0%
BITBANK0l           10      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
BITBANK0h           3F      0       1       4        1.6%
BANK0h              3F     17      3F       6      100.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     160      14        0.0%
ABS                  0      0     160       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jan 17 13:06:07 2018

          __end_of_checkButtons 0F67         displayDate@minutesUnits 0055               changeDate@daytens 0052  
          zone2Deactivate@F1232 019B                               pc 0002                    ?_displayDate 0070  
                            l69 09A9                    ___awdiv@sign 0076              changeDate@dayunits 0053  
                            fsr 0004                 changeDelay@tens 007C                  _changeTempMode 15EA  
             changeDate@montens 0054                ??_getTemperature 0079                  _changeTimeMode 157D  
                           l520 0F30                             l513 0F18                             l522 0F34  
                           l531 0F50                             l515 0F1C                             l524 0F38  
                           l604 0AE9                             l517 0F20                             l534 0F63  
                           l622 0252                             l390 0100                             l527 0F48  
                           l391 010F                             l392 011E                             l529 0F4C  
                           l609 0A42                             l393 012D                             l627 0189  
                           l387 00CE                             l709 0380                             l389 00EC  
                           l592 0984                             l680 0A02                             l593 09A3  
                           l666 13DF                             l598 0BE1                             l599 0C06  
                           _RA0 0028                             _RA1 0029                             _RA2 002A  
                           _RB0 0030                             _RA3 002B                             _RC0 0038  
                           _RC1 0039                             _RC2 003A                             _RB4 0034  
                           _RC3 003B                             _RB5 0035                             _RC4 003C  
                           _RB7 0037                             _RC5 003D                             _RC6 003E  
                           _RC7 003F                currentTemp@F1203 00E3                currentTemp@F1205 0110  
                           _col 003A               zone3Alert@message 0052                             fsr0 0004  
                           _row 0038                             indf 0000                    ___awmod@sign 0076  
                  __CFG_FOSC$HS 0000            _changeTriggerMessage 0826                    __CFG_LVP$OFF 0000  
              changeDelay@units 007D          __end_of_changeDateMode 157D              changeDate@monunits 0055  
                          l3001 0D15                            l3011 0D1D                            l3013 0D2B  
                          l3023 0D4C                            l3027 0D54                            l3019 0D41  
                          l3051 0C25                            l3043 0C1F                            l3053 0C33  
                          l3061 0C4C                            l3039 0C18                            l3311 0ACB  
                          l3065 0C54                            l3057 0C41                            l5101 0705  
                          l3327 0A25                            l5017 0095                            l5121 073E  
                          l3523 0F42                            l5205 04EE                            l5141 0777  
                          l5061 0692                            l3509 0F2A                            l3471 09D3  
                          l5225 0528                            l5081 06CB                            l3545 0F65  
                          l3537 0F5A                            l2921 0A62                            l3491 0F08  
                          l3483 0EF4                            l3467 09C2                            l4349 14D7  
                          l5245 0561                            l5309 0FCC                            l4613 0270  
                          l3495 0F12                            l3487 0EFE                            l5265 059A  
                          l5185 04B5                            l2891 0A04                            l4901 0DCC  
                          l4733 0A9F                            l2869 0BF4                            l2797 13E3  
                          l2893 09DB                            l4911 0DE0                            l4663 01A7  
                          l2983 0B94                            l4921 0DF8                            l4841 0E9C  
                          l4833 0E88                            l4577 03B3                            l2995 0D0A  
                          l4771 0B52                            l4853 0EBA                            l4845 0EA6  
                          l4829 0E7E                            l5397 013C                            l4943 0CC2  
                          l4865 0ED8                            l4857 0EC4                            l4953 0CD7  
                          l4963 0CEC                            l4797 0B1A         __end_of_deactivateZones 0D00  
                          u3115 0D20                            u3135 0D2C                            u3215 0C28  
                          u3145 0D38                            u3155 0D42                            u3235 0C39  
                          u3245 0C42                            u6000 0838                            u3555 0AC9  
                          u3725 09C0                            u2925 0982                            u3565 0AE7  
                          u3735 09D1                            u3575 0A23                            u2960 0BF1  
                          u3745 09B3                            u2945 09A1                            u3585 0A40  
                          u2955 0BDF                            u5700 164A                            u5620 169C  
                          u2885 146B                            u5710 17E8                            u5630 16C5  
                          u5720 1740                            u5800 1621                            u5640 16EE  
                          u2985 0C04                            u5730 176A                            u5810 0BA3  
                          u5650 1717                            u5740 1794                            u5820 0BB8  
                          u5660 0862                            u5750 17BE                            u5670 088C  
                          u5680 08B6                            u5760 090A                            u5690 08E0  
                          u5770 0934                            u5835 0347                            u5915 0277  
                          u5780 095E                            u5845 034F                            u5925 028D  
                          u5790 0018                            u5855 035C                            u5935 02A3  
                          u5975 01AE                            u5985 01C4                            u5995 01DA  
                  _triggerValue 0027              changeDate@yeartens 0056                     display@tens 0052  
              _checkZoneMessage 1661                            _main 00C9                            _init 139E  
                          btemp 007E                            start 0000              __size_of_LCDdelay2 0010  
            __size_of_LCDdelay3 0010          __size_of_zone0Activate 002A             display@minutesUnits 0055  
          __end_of_delaySeconds 09DA          __size_of_zone1Activate 002A            __end_of_clearDisplay 13A7  
        __size_of_zone2Activate 002A                     _zoneActMode 004B          __size_of_zone3Activate 002A  
        __end_of_changeTempMode 160F          __end_of_changeTimeMode 15A1                    _zone0Alerted 0045  
              __end_of_LCDdelay 13FC                    _zone1Alerted 0044                           ?_main 0070  
                         ?_init 0070                 __end_of___awdiv 0D59                   __CFG_WDTE$OFF 0000  
               __end_of___awmod 0C59         __end_of_changeDelayMode 1513                    _zone2Alerted 0043  
              __end_of_LCDsetup 149F                 ___awdiv@divisor 0070            zone3Deactivate@F1235 0190  
                  _zone3Alerted 0042                 ___awdiv@counter 0075                           _PORTA 0005  
                         _PORTC 0007                           _PORTD 0008                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087                           _TRISD 0088  
               __end_of_alarmOn 1661      checkZoneMessage@messagerow 0078                           _Cinit 0801  
                  ?_buttondelay 0070                   __CFG_PWRTE$ON 0000            __size_of_changeDelay 0099  
               __end_of_getTime 0A46           __end_of_activateZones 0E0D             changeDate@yearunits 0057  
               ButtonGrid@F1241 0020                 ButtonGrid@F1243 00EA           ?_changeTriggerMessage 0070  
               __end_of_display 0304                    ?_buttonsetup 0070            __size_of_checkZones2 0076  
                  display@value 0058                  zone0OK@message 0052                           _delay 1460  
                  display@units 0053                           _table 1006                  __pbitbssBANK0h 0378  
            zone0Activate@F1214 01DA                 __end_of_buzzer2 1488                           _reset 09DA  
               ?_changeDateMode 0070                           _value 0051           __size_of_zoneActivate 0029  
               __end_of_setTime 0AED                  __CFG_BOREN$OFF 0000                           pclath 000A  
                         status 0003                 __end_of_zone0OK 16B3                 __end_of_zone1OK 16DC  
               __end_of_zone2OK 1705                  zone1OK@message 0052                 __end_of_zone3OK 172E  
                         wtemp0 007E               _activateZonesMode 15C5          zone2Deactivate@message 0052  
         __size_of_writeMessage 001F              ?_activateZonesMode 0070                 __initialization 07AE  
                zone2OK@message 0052                    __end_of_main 0172                    __end_of_init 13A2  
           ??_activateZonesMode 007B                 ?_changeTempMode 0070                 ?_changeTimeMode 0070  
                        ??_main 0067                          ??_init 0070                  zone3OK@message 0052  
               changeTemp@units 007D                    _zoneActivate 160F                          ?_Cinit 0070  
                 _zone0Activate 172E               __end_of_LCDdelay2 141C               __end_of_LCDdelay3 140C  
                 _zone1Activate 1758                          ?_delay 0070                          _ADCON1 009F  
                 _zone2Activate 1782                          ?_reset 0070                ___awdiv@dividend 0072  
                 _zone3Activate 17AC                    _writeMessage 14D4                ?_deactivateZones 0070  
     __end_of_activateZonesMode 15EA              getTemperature@tens 0053                    ?_resetCursor 0070  
                        _TRISA0 0428                          _TRISB4 0434           __size_of_checkButtons 0086  
              __end_of_alarmOff 1800                          _Return 14B6               displayDate@value1 0059  
             displayDate@value2 005A                   display@value1 0059                   display@value2 005A  
                     ??___awdiv 0074                       ??___awmod 0074                __end_of_readByte 0B96  
              __end_of_readTime 0C0E                          _table1 0031                          delay@i 0070  
                     ??_alarmOn 0077       changeTriggerMessage@F1258 0151                ___awdiv@quotient 0077  
               ___awmod@divisor 0070            __size_of_displayDate 00C9                 ___awmod@counter 0075  
                     ??_getTime 0075                       ??_display 0079                    __pdataBANK0h 0069  
                  __pdataBANK0l 0020                ?_changeDelayMode 0070                  ?_zone0Activate 0070  
                     ??_buzzer2 0072                __end_of_showDate 0B25          ??_changeTriggerMessage 0078  
              __end_of_showTemp 143C                __end_of_showTime 0B5D                  ?_zone1Activate 0070  
                     ??_setTime 0075                  ?_zone2Activate 0070                    _checkButtons 0EE1  
                     ??_zone0OK 0077                       ??_zone1OK 0077                  ?_zone3Activate 0070  
                     ??_zone2OK 0077                       ??_zone3OK 0077           displayDate@hoursUnits 0057  
      __size_of_turnon2linemode 0005                __end_of_writeCmd 1535        __size_of_zone0Deactivate 002A  
       __end_of__initialization 07FC                    zone0OK@F1179 00BE           __size_of_delaySeconds 0033  
                  zone1OK@F1182 00B4           __size_of_clearDisplay 0005                       ?_LCDdelay 0070  
             display@hoursUnits 0057                    zone2OK@F1185 00AA                       ?_LCDsetup 0070  
                __pcstackBANK0h 0052                    zone3OK@F1188 00A0                   __end_of_Cinit 0826  
      __size_of_zone1Deactivate 002A                    _alarmOnOrOff 004C                  __pcstackCOMMON 0070  
            changeTime@hourtens 0056              changeTime@minunits 0055                    __pidataBANK1 0C59  
                  __pidataBANK2 0D59                    __pidataBANK3 0E0D              changeTime@secunits 0053  
                 __end_of_delay 1474                   __end_of_table 100E                   __end_of_reset 0A0F  
      __size_of_zone2Deactivate 002A                       LCDdelay@i 0070                   _durationValue 0028  
      __end_of_checkZoneMessage 168A  changeTriggerMessage@messagerow 0052              __size_of_clockInit 0013  
                       ??_Cinit 0073        __size_of_zone3Deactivate 002A                         ??_delay 0070  
                  _delaySeconds 09A7              __size_of_displayOn 0005                    _clearDisplay 13A2  
          __size_of_buttondelay 0010                      _dateChange 003F                         ??_reset 0074  
                 alarmOff@F1211 01E4            __size_of_buttonsetup 0017                      _changeDate 03F4  
    __size_of_activateZonesMode 0025                      _checkZones 15A1                      _changeTemp 0030  
                    _changeTime 05D1                      _alarmOnOff 0A7D                      ??_LCDdelay 0070  
                    _delayValue 003C                      ??_LCDsetup 0073                      _alertValue 0026  
                    __pmaintext 00C9                 alarmOff@message 0052                         ?_Return 0070  
            __size_of_tempDelay 000E                 ??_zone0Activate 0077       getTemperature@tensDecimal 0055  
               ??_zone1Activate 0077                ??_changeDateMode 0070                 ??_zone2Activate 0077  
                     ?_alarmOff 0070                 ??_zone3Activate 0077             getTemperature@units 0054  
                    __stringtab 1000              zone1Activate@F1217 01D0                 zone0Alert@F1191 0144  
                     ?_readByte 0070                       ?_readTime 0070             zoneActivate@message 0052  
            __size_of_writeChar 0024              __size_of_writeByte 0037              __size_of_writeTime 0031  
             __end_of_clockInit 1460               ??_turnon2linemode 0073            __size_of_resetCursor 0005  
              ??_changeTempMode 007C                ??_changeTimeMode 0070                       ?_showDate 0070  
             ??_zone0Deactivate 0077                 __size_of_Return 001E                       ?_showTemp 0070  
                     ?_showTime 0070               __end_of_displayOn 13B1                         ___awdiv 0D00  
                       ___awmod 0C0E                 zone1Alert@F1194 0137                         _alarmOn 1638  
                    _modeSelect 0B96               ??_zone1Deactivate 0077                       ?_writeCmd 0070  
                       __ptext1 0B25                         __ptext2 023B                         __ptext3 142C  
                       _getTime 0A0F                         __ptext4 0304                         __ptext5 0A46  
                       __ptext6 09DA                         __ptext7 0B5D                         __ptext8 13DE  
                       __ptext9 0AED                   ??_changeDelay 0079                         _display 023B  
                 ??_checkZones2 007B                         _buzzer2 1474                ___awmod@dividend 0072  
                    ??_alarmOff 0077                         _setTime 0AB5                         _tempLow 0050  
                       _time_rx 0030               ??_zone2Deactivate 0077                         _zone0OK 168A  
                       _zone1OK 16B3                         _zone2OK 16DC                         _zone3OK 1705  
                       _zone0On 0049                         _zone1On 0048                         _zone2On 0047  
                       _zone3On 0046                         clrloop0 13C3            end_of_initialization 07FC  
                   ?_changeDate 0070         __size_of_getTemperature 00F0                       _LCDdelay2 140C  
                     _LCDdelay3 13FC                     ?_checkZones 0070                     ?_changeTemp 0070  
                   ?_changeTime 0070                 zone2Alert@F1197 012A               __end_of_tempDelay 13EC  
                   ?_alarmOnOff 0070                      ??_readByte 0074               ??_zone3Deactivate 0077  
                    ??_readTime 0070          zone0Deactivate@message 0052          zone3Deactivate@message 0052  
                    _tempChange 0041                    buttondelay@i 0070                    writeChar@var 0072  
                    _timeChange 0040                   Clock@time_rx7 0187           getTemperature@decimal 0052  
                    ??_showDate 007C                      ??_showTemp 007C                      ??_showTime 007C  
        __size_of_activateZones 005B                 zone3Alert@F1200 011D                     _TriggerTemp 003D  
                    ??_writeCmd 0072           checkZoneMessage@F1255 0069                   delaySeconds@d 0070  
                 delaySeconds@i 0073                   delaySeconds@j 0075               __end_of_writeChar 1559  
             __end_of_writeByte 0A7D               __end_of_writeTime 09A7                   _decimalNumber 004D  
        displayDate@minutesTens 0054             __end_of_changeDelay 1000             __end_of_checkZones2 0EE1  
                    ?_LCDdelay2 0070                      ?_LCDdelay3 0070                      _zone0Alert 0850  
                    _zone1Alert 087A                      _zone2Alert 08A4                      _zone3Alert 08CE  
          zone0Activate@message 0052        __size_of_deactivateZones 0057              display@minutesTens 0054  
             __size_of_LCDdelay 0010               __size_of_LCDsetup 0017                   ??_displayDate 0079  
                __end_of_Return 14D4        writeMessageline1@message 0077             changeTime@hourunits 0057  
                 __pidataBANK0h 13BC                   __pidataBANK0l 13CA        writeMessageline2@message 0077  
           __size_of_changeDate 01DD                     ?_modeSelect 0070             __size_of_checkZones 0024  
           __size_of_changeTemp 0099             __size_of_changeTime 01DD             __size_of_alarmOnOff 0038  
             ?_checkZoneMessage 0070                  _durationChange 002A             start_initialization 07AE  
            ??_checkZoneMessage 0078                      LCDdelay2@i 0070                      LCDdelay3@i 0070  
                 _activateZones 0DB2   __size_of_changeTriggerMessage 002A               zoneActivate@F1238 00D1  
      __size_of_changeDelayMode 0020                  changeTemp@tens 007C                   reset@presance 0075  
                      ??_Return 0073                displayDate@value 0058                displayDate@units 0053  
                    init_fetch0 143C                     __pdataBANK1 00A0                     __pdataBANK2 0110  
                   __pdataBANK3 0190            zone1Activate@message 0052            displayDate@hoursTens 0056  
             zone0Alert@message 0052                     _changeDelay 0F67             __end_of_displayDate 023B  
                   __pbssBANK0h 0031                     __pbssBANK0l 0028                     _checkZones2 0E6B  
              display@hoursTens 0056                   ??_buttondelay 0070                       ___latbits 0002  
                ?_activateZones 0070                   ??_buttonsetup 0070               changeTime@mintens 0054  
             changeTime@sectens 0052               __size_of_alarmOff 002A                 _turnon2linemode 13B1  
                _getTemperature 0304                    alarmOn@F1208 00DA                     _delayChange 003E  
               _zone0Deactivate 08F8                     ??_LCDdelay2 0070                     ??_LCDdelay3 0070  
            zone2Activate@F1220 01C6                     _alertChange 0029                     ?_zone0Alert 0070  
                   ?_zone1Alert 0070                     ?_zone2Alert 0070             __size_of_modeSelect 003B  
                   ?_zone3Alert 0070               __size_of_readByte 0039               __size_of_readTime 003D  
               _zone1Deactivate 0922                  alarmOn@message 0052                        ?___awdiv 0070  
                     _clockInit 144D                        ?___awmod 0070               __size_of_showDate 0038  
               _zone2Deactivate 094C               __size_of_showTemp 0010               __size_of_showTime 0038  
                      ?_alarmOn 0070               ??_deactivateZones 007B                       __pstrings 1000  
                      ?_getTime 0070                       _displayOn 13AC                        ?_display 0070  
                 ?_zoneActivate 0070           __end_of_zone0Activate 1758            modeSelect@messagecol 0052  
                      ?_buzzer2 0070               __size_of_writeCmd 0022            zone2Activate@message 0052  
          modeSelect@messagerow 005E                 _zone3Deactivate 0006               _writeMessageline1 13B6  
             _writeMessageline2 13D2                      tempDelay@x 0072                      tempDelay@y 0070  
                    tempDelay@z 0073                  __size_of_Cinit 0025           __end_of_zone1Activate 1782  
                      ?_setTime 0070          __end_of_getTemperature 03F4           __end_of_zone2Activate 17AC  
            ?_writeMessageline1 0070              ?_writeMessageline2 0070                  __size_of_delay 0014  
         __end_of_zone3Activate 17D6                        ?_zone0OK 0070                        ?_zone1OK 0070  
                      ?_zone2OK 0070                        ?_zone3OK 0070                  __size_of_reset 0035  
                 ?_writeMessage 0070                _triggerDelayTime 002B                    ??_changeDate 0079  
                  ??_checkZones 007E                    ??_changeTemp 0079                    ??_changeTime 0079  
           __end_of_buttondelay 142C                    ??_alarmOnOff 007C                   ??_resetCursor 0073  
           __end_of_buttonsetup 14B6             ??_writeMessageline1 0077             ??_writeMessageline2 0077  
                      _LCDdelay 13EC                       clear_ram0 13C2               ??_changeDelayMode 0070  
                      _LCDsetup 1488                       _tempDelay 13DE                     writeCmd@cmd 0072  
                     _tempValue 004E                      ?_clockInit 0070                checkButtons@rval 0070  
                   _displayDate 0172                 modeSelect@F1246 00C8                 modeSelect@F1248 015D  
                    ?_displayOn 0070              __end_of_changeDate 05D1                     __stringbase 1005  
            __end_of_checkZones 15C5              __end_of_changeTemp 00C9              __end_of_changeTime 07AE  
                ??_zoneActivate 0077       __end_of_writeMessageline1 13BC       __end_of_writeMessageline2 13DE  
             zone1Alert@message 0052         __end_of_turnon2linemode 13B6              __end_of_alarmOnOff 0AB5  
           __size_of_zone0Alert 002A             __size_of_zone1Alert 002A                 ??_activateZones 007B  
           __size_of_zone2Alert 002A             __size_of_zone3Alert 002A         __end_of_zone0Deactivate 0922  
               ?_getTemperature 0070                   ?_checkButtons 0070                   readByte@value 0075  
                     _zoneCheck 004A                       _writeChar 1535                       _writeByte 0A46  
                ??_writeMessage 0073                       _writeTime 0976            zone3Activate@message 0052  
       __end_of_zone1Deactivate 094C             writeMessage@message 0076         __size_of_changeDateMode 0024  
        zone1Deactivate@message 0052                      ?_tempDelay 0070         __end_of_zone2Deactivate 0976  
                     readByte@i 0076                       readByte@j 0378                 displayDate@tens 0052  
                     readTime@j 0072             __end_of_resetCursor 13AC                __size_of___awdiv 0059  
              __size_of___awmod 004B         __end_of_zone3Deactivate 0030                    ??_modeSelect 0078  
            __end_of__stringtab 1006                __size_of_alarmOn 0029         __size_of_changeTempMode 0025  
       __size_of_changeTimeMode 0024                __size_of_getTime 0037                __size_of_display 00C9  
                      _alarmOff 17D6                     _buttondelay 141C                  ??_checkButtons 0070  
              __size_of_buzzer2 0014                   ?_delaySeconds 0070                     _buttonsetup 149F  
              __size_of_setTime 0038                      ?_writeChar 0070                   ?_clearDisplay 0070  
                      __ptext10 0AB5                        __ptext11 0A0F                        __ptext20 0CA9  
                      __ptext12 0BD1                        __ptext21 0006                        __ptext13 0172  
                      __ptext30 16B3                        __ptext22 094C                        __ptext14 141C  
                      __ptext31 087A                        __ptext23 0922                        __ptext15 144D  
                      __ptext40 15EA                        __ptext32 168A                        __ptext24 08F8  
                      __ptext16 0976                        __ptext41 0826                        __ptext33 0850  
                      __ptext25 0E6B                        __ptext17 0801                        __ptext50 13B1  
                      __ptext42 0030                        __ptext34 15A1                        __ptext26 1705  
                      __ptext18 139E                        __ptext51 13AC                        __ptext43 14F3  
                      __ptext35 1661                        __ptext27 08CE                        __ptext19 09A7  
                      __ptext60 140C                        __ptext52 1474                        __ptext44 0F67  
                      __ptext36 0EE1                        __ptext28 16DC                        __ptext61 15C5  
                      __ptext53 1460                        __ptext45 1559                        __ptext37 149F  
                      __ptext29 08A4                        __ptext70 13FC                        __ptext62 160F  
                      __ptext54 0A7D                        __ptext46 03F4                        __ptext38 157D  
                      __ptext71 14B6                        __ptext63 0DB2                        __ptext55 0B96  
                      __ptext47 0C0E                        __ptext39 05D1                        __ptext72 13A7  
                      __ptext64 17AC                        __ptext56 13D2                        __ptext48 0D00  
                      __ptext73 13A2                        __ptext65 1782                        __ptext57 13B6  
                      __ptext49 1488                        __ptext74 1513                        __ptext66 1758  
                      __ptext58 1638                        __ptext75 13EC                        __ptext67 172E  
                      __ptext59 17D6                        __ptext68 14D4                        __ptext69 1535  
                    ?_writeByte 0070                      ?_writeTime 0070            zone0Deactivate@F1226 01B1  
              __size_of_zone0OK 0029                __size_of_zone1OK 0029                __size_of_zone2OK 0029  
              __size_of_zone3OK 0029                        _readByte 0B5D                        _readTime 0BD1  
                 __size_of_main 00A9       __size_of_checkZoneMessage 0029                   __size_of_init 0004  
            __end_of_modeSelect 0BD1                        _tempHigh 004F    __end_of_changeTriggerMessage 0850  
                      _showDate 0AED                        _time_rx7 0187                      writeByte@i 0078  
                      _showTemp 142C                        _showTime 0B25                        getTime@i 0076  
                   ??_clockInit 0075                      writeTime@i 0072                     ??_displayOn 0073  
                      _writeCmd 1513      __size_of_writeMessageline1 0006      __size_of_writeMessageline2 000C  
                  ?_changeDelay 0070                ?_turnon2linemode 0070               zone2Alert@message 0052  
                  ?_checkZones2 0070                ?_zone0Deactivate 0070                  ??_delaySeconds 0072  
                ??_clearDisplay 0073                        init_ram0 1440                ?_zone1Deactivate 0070  
                  ??_zone0Alert 0077                    ??_zone1Alert 0077                     _resetCursor 13A7  
            zone3Activate@F1223 01BC                    ??_zone2Alert 0077                    ??_zone3Alert 0077  
                      setTime@i 0075            zone1Deactivate@F1229 01A6            __end_of_zoneActivate 1638  
               _deactivateZones 0CA9                     ??_tempDelay 0071                       stringcode 1000  
                writeByte@value 0077                ?_zone2Deactivate 0070            __end_of_writeMessage 14F3  
              ?_zone3Deactivate 0070              __end_of_zone0Alert 087A              __end_of_zone1Alert 08A4  
            __end_of_zone2Alert 08CE              __end_of_zone3Alert 08F8                        stringdir 1000  
                 writeByte@temp 0076                        stringtab 1000                     ??_writeChar 0072  
               _changeDelayMode 14F3                     ??_writeByte 0074                     ??_writeTime 0070  
                 writeMessage@i 0074                  _changeDateMode 1559              writeTime@timeClock 0074  
