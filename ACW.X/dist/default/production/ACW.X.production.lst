

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jan 07 18:01:13 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 1.45
    60                           ; Generated 16/11/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F877A Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273                           
   274                           	psect	idataBANK0
   275  0056                     __pidataBANK0:	
   276                           
   277                           ;initializer for currentTemp@F1166
   278  0056  345A               	retlw	90
   279  0057  346F               	retlw	111
   280  0058  346E               	retlw	110
   281  0059  3465               	retlw	101
   282  005A  3420               	retlw	32
   283  005B  3430               	retlw	48
   284  005C  3400               	retlw	0
   285                           
   286                           ;initializer for ButtonGrid@F1203
   287  005D  3463               	retlw	99
   288  005E  346F               	retlw	111
   289  005F  346C               	retlw	108
   290  0060  343A               	retlw	58
   291  0061  3430               	retlw	48
   292  0062  3400               	retlw	0
   293                           
   294                           ;initializer for ButtonGrid@F1201
   295  0063  3472               	retlw	114
   296  0064  346F               	retlw	111
   297  0065  3477               	retlw	119
   298  0066  343A               	retlw	58
   299  0067  3430               	retlw	48
   300  0068  3400               	retlw	0
   301                           
   302                           ;initializer for _alertValue
   303  0069  3401               	retlw	1
   304  006A  3400               	retlw	0
   305                           
   306                           	psect	idataBANK1
   307  04F6                     __pidataBANK1:	
   308                           
   309                           ;initializer for zone0Activate@F1177
   310  04F6  345A               	retlw	90
   311  04F7  346F               	retlw	111
   312  04F8  346E               	retlw	110
   313  04F9  3465               	retlw	101
   314  04FA  3420               	retlw	32
   315  04FB  3430               	retlw	48
   316  04FC  3420               	retlw	32
   317  04FD  344F               	retlw	79
   318  04FE  346E               	retlw	110
   319  04FF  3400               	retlw	0
   320                           
   321                           ;initializer for alarmOff@F1174
   322  0500  3441               	retlw	65
   323  0501  346C               	retlw	108
   324  0502  3461               	retlw	97
   325  0503  3472               	retlw	114
   326  0504  346D               	retlw	109
   327  0505  3420               	retlw	32
   328  0506  344F               	retlw	79
   329  0507  3466               	retlw	102
   330  0508  3466               	retlw	102
   331  0509  3400               	retlw	0
   332                           
   333                           ;initializer for zone3OK@F1151
   334  050A  345A               	retlw	90
   335  050B  346F               	retlw	111
   336  050C  346E               	retlw	110
   337  050D  3465               	retlw	101
   338  050E  3420               	retlw	32
   339  050F  3433               	retlw	51
   340  0510  3420               	retlw	32
   341  0511  344F               	retlw	79
   342  0512  344B               	retlw	75
   343  0513  3400               	retlw	0
   344                           
   345                           ;initializer for zone2OK@F1148
   346  0514  345A               	retlw	90
   347  0515  346F               	retlw	111
   348  0516  346E               	retlw	110
   349  0517  3465               	retlw	101
   350  0518  3420               	retlw	32
   351  0519  3432               	retlw	50
   352  051A  3420               	retlw	32
   353  051B  344F               	retlw	79
   354  051C  344B               	retlw	75
   355  051D  3400               	retlw	0
   356                           
   357                           ;initializer for zone1OK@F1145
   358  051E  345A               	retlw	90
   359  051F  346F               	retlw	111
   360  0520  346E               	retlw	110
   361  0521  3465               	retlw	101
   362  0522  3420               	retlw	32
   363  0523  3431               	retlw	49
   364  0524  3420               	retlw	32
   365  0525  344F               	retlw	79
   366  0526  344B               	retlw	75
   367  0527  3400               	retlw	0
   368                           
   369                           ;initializer for zone0OK@F1142
   370  0528  345A               	retlw	90
   371  0529  346F               	retlw	111
   372  052A  346E               	retlw	110
   373  052B  3465               	retlw	101
   374  052C  3420               	retlw	32
   375  052D  3430               	retlw	48
   376  052E  3420               	retlw	32
   377  052F  344F               	retlw	79
   378  0530  344B               	retlw	75
   379  0531  3400               	retlw	0
   380                           
   381                           ;initializer for modeSelect@F1206
   382  0532  3453               	retlw	83
   383  0533  3465               	retlw	101
   384  0534  346C               	retlw	108
   385  0535  3465               	retlw	101
   386  0536  3463               	retlw	99
   387  0537  3474               	retlw	116
   388  0538  3420               	retlw	32
   389  0539  3461               	retlw	97
   390  053A  3400               	retlw	0
   391                           
   392                           ;initializer for alarmOn@F1171
   393  053B  3441               	retlw	65
   394  053C  346C               	retlw	108
   395  053D  3461               	retlw	97
   396  053E  3472               	retlw	114
   397  053F  346D               	retlw	109
   398  0540  3420               	retlw	32
   399  0541  344F               	retlw	79
   400  0542  346E               	retlw	110
   401  0543  3400               	retlw	0
   402                           
   403                           	psect	idataBANK2
   404  059B                     __pidataBANK2:	
   405                           
   406                           ;initializer for checkMessage@F1211
   407  059B  3443               	retlw	67
   408  059C  3468               	retlw	104
   409  059D  3465               	retlw	101
   410  059E  3463               	retlw	99
   411  059F  346B               	retlw	107
   412  05A0  3469               	retlw	105
   413  05A1  346E               	retlw	110
   414  05A2  3467               	retlw	103
   415  05A3  3420               	retlw	32
   416  05A4  3442               	retlw	66
   417  05A5  3475               	retlw	117
   418  05A6  3474               	retlw	116
   419  05A7  3474               	retlw	116
   420  05A8  346F               	retlw	111
   421  05A9  346E               	retlw	110
   422  05AA  3473               	retlw	115
   423  05AB  3400               	retlw	0
   424                           
   425                           ;initializer for checkZoneMessage@F1219
   426  05AC  3443               	retlw	67
   427  05AD  3468               	retlw	104
   428  05AE  3465               	retlw	101
   429  05AF  3463               	retlw	99
   430  05B0  346B               	retlw	107
   431  05B1  3420               	retlw	32
   432  05B2  3461               	retlw	97
   433  05B3  3420               	retlw	32
   434  05B4  345A               	retlw	90
   435  05B5  346F               	retlw	111
   436  05B6  346E               	retlw	110
   437  05B7  3465               	retlw	101
   438  05B8  3400               	retlw	0
   439                           
   440                           ;initializer for currentTemp@F1168
   441  05B9  3454               	retlw	84
   442  05BA  3465               	retlw	101
   443  05BB  346D               	retlw	109
   444  05BC  3470               	retlw	112
   445  05BD  3465               	retlw	101
   446  05BE  3472               	retlw	114
   447  05BF  3461               	retlw	97
   448  05C0  3474               	retlw	116
   449  05C1  3475               	retlw	117
   450  05C2  3472               	retlw	114
   451  05C3  3465               	retlw	101
   452  05C4  343A               	retlw	58
   453  05C5  3400               	retlw	0
   454                           
   455                           ;initializer for zone3Alert@F1163
   456  05C6  345A               	retlw	90
   457  05C7  346F               	retlw	111
   458  05C8  346E               	retlw	110
   459  05C9  3465               	retlw	101
   460  05CA  3420               	retlw	32
   461  05CB  3433               	retlw	51
   462  05CC  3420               	retlw	32
   463  05CD  3441               	retlw	65
   464  05CE  346C               	retlw	108
   465  05CF  3465               	retlw	101
   466  05D0  3472               	retlw	114
   467  05D1  3474               	retlw	116
   468  05D2  3400               	retlw	0
   469                           
   470                           ;initializer for zone2Alert@F1160
   471  05D3  345A               	retlw	90
   472  05D4  346F               	retlw	111
   473  05D5  346E               	retlw	110
   474  05D6  3465               	retlw	101
   475  05D7  3420               	retlw	32
   476  05D8  3432               	retlw	50
   477  05D9  3420               	retlw	32
   478  05DA  3441               	retlw	65
   479  05DB  346C               	retlw	108
   480  05DC  3465               	retlw	101
   481  05DD  3472               	retlw	114
   482  05DE  3474               	retlw	116
   483  05DF  3400               	retlw	0
   484                           
   485                           ;initializer for zone1Alert@F1157
   486  05E0  345A               	retlw	90
   487  05E1  346F               	retlw	111
   488  05E2  346E               	retlw	110
   489  05E3  3465               	retlw	101
   490  05E4  3420               	retlw	32
   491  05E5  3431               	retlw	49
   492  05E6  3420               	retlw	32
   493  05E7  3441               	retlw	65
   494  05E8  346C               	retlw	108
   495  05E9  3465               	retlw	101
   496  05EA  3472               	retlw	114
   497  05EB  3474               	retlw	116
   498  05EC  3400               	retlw	0
   499                           
   500                           ;initializer for zone0Alert@F1154
   501  05ED  345A               	retlw	90
   502  05EE  346F               	retlw	111
   503  05EF  346E               	retlw	110
   504  05F0  3465               	retlw	101
   505  05F1  3420               	retlw	32
   506  05F2  3430               	retlw	48
   507  05F3  3420               	retlw	32
   508  05F4  3441               	retlw	65
   509  05F5  346C               	retlw	108
   510  05F6  3465               	retlw	101
   511  05F7  3472               	retlw	114
   512  05F8  3474               	retlw	116
   513  05F9  3400               	retlw	0
   514                           
   515                           	psect	idataBANK3
   516  0544                     __pidataBANK3:	
   517                           
   518                           ;initializer for modeSelect@F1208
   519  0544  3446               	retlw	70
   520  0545  3475               	retlw	117
   521  0546  346E               	retlw	110
   522  0547  3463               	retlw	99
   523  0548  3474               	retlw	116
   524  0549  3469               	retlw	105
   525  054A  346F               	retlw	111
   526  054B  346E               	retlw	110
   527  054C  342E               	retlw	46
   528  054D  342E               	retlw	46
   529  054E  342E               	retlw	46
   530  054F  3400               	retlw	0
   531                           
   532                           ;initializer for zone0Deactivate@F1189
   533  0550  3420               	retlw	32
   534  0551  345A               	retlw	90
   535  0552  346F               	retlw	111
   536  0553  346E               	retlw	110
   537  0554  3465               	retlw	101
   538  0555  3420               	retlw	32
   539  0556  3430               	retlw	48
   540  0557  3420               	retlw	32
   541  0558  344F               	retlw	79
   542  0559  3466               	retlw	102
   543  055A  3466               	retlw	102
   544  055B  3400               	retlw	0
   545                           
   546                           ;initializer for zone3Deactivate@F1198
   547  055C  345A               	retlw	90
   548  055D  346F               	retlw	111
   549  055E  346E               	retlw	110
   550  055F  3465               	retlw	101
   551  0560  3420               	retlw	32
   552  0561  3433               	retlw	51
   553  0562  3420               	retlw	32
   554  0563  344F               	retlw	79
   555  0564  3466               	retlw	102
   556  0565  3466               	retlw	102
   557  0566  3400               	retlw	0
   558                           
   559                           ;initializer for zone2Deactivate@F1195
   560  0567  345A               	retlw	90
   561  0568  346F               	retlw	111
   562  0569  346E               	retlw	110
   563  056A  3465               	retlw	101
   564  056B  3420               	retlw	32
   565  056C  3432               	retlw	50
   566  056D  3420               	retlw	32
   567  056E  344F               	retlw	79
   568  056F  3466               	retlw	102
   569  0570  3466               	retlw	102
   570  0571  3400               	retlw	0
   571                           
   572                           ;initializer for zone1Deactivate@F1192
   573  0572  345A               	retlw	90
   574  0573  346F               	retlw	111
   575  0574  346E               	retlw	110
   576  0575  3465               	retlw	101
   577  0576  3420               	retlw	32
   578  0577  3431               	retlw	49
   579  0578  3420               	retlw	32
   580  0579  344F               	retlw	79
   581  057A  3466               	retlw	102
   582  057B  3466               	retlw	102
   583  057C  3400               	retlw	0
   584                           
   585                           ;initializer for zone3Activate@F1186
   586  057D  345A               	retlw	90
   587  057E  346F               	retlw	111
   588  057F  346E               	retlw	110
   589  0580  3465               	retlw	101
   590  0581  3420               	retlw	32
   591  0582  3433               	retlw	51
   592  0583  3420               	retlw	32
   593  0584  344F               	retlw	79
   594  0585  346E               	retlw	110
   595  0586  3400               	retlw	0
   596                           
   597                           ;initializer for zone2Activate@F1183
   598  0587  345A               	retlw	90
   599  0588  346F               	retlw	111
   600  0589  346E               	retlw	110
   601  058A  3465               	retlw	101
   602  058B  3420               	retlw	32
   603  058C  3432               	retlw	50
   604  058D  3420               	retlw	32
   605  058E  344F               	retlw	79
   606  058F  346E               	retlw	110
   607  0590  3400               	retlw	0
   608                           
   609                           ;initializer for zone1Activate@F1180
   610  0591  345A               	retlw	90
   611  0592  346F               	retlw	111
   612  0593  346E               	retlw	110
   613  0594  3465               	retlw	101
   614  0595  3420               	retlw	32
   615  0596  3431               	retlw	49
   616  0597  3420               	retlw	32
   617  0598  344F               	retlw	79
   618  0599  346E               	retlw	110
   619  059A  3400               	retlw	0
   620  0007                     _PORTC	set	7
   621  0008                     _PORTD	set	8
   622  0005                     _PORTA	set	5
   623  003F                     _RC7	set	63
   624  003E                     _RC6	set	62
   625  003D                     _RC5	set	61
   626  003B                     _RC3	set	59
   627  003A                     _RC2	set	58
   628  0039                     _RC1	set	57
   629  0038                     _RC0	set	56
   630  003C                     _RC4	set	60
   631  002B                     _RA3	set	43
   632  002A                     _RA2	set	42
   633  0029                     _RA1	set	41
   634  0087                     _TRISC	set	135
   635  0088                     _TRISD	set	136
   636  0085                     _TRISA	set	133
   637  009F                     _ADCON1	set	159
   638                           
   639                           ; #config settings
   640  0000                     
   641                           	psect	cinit
   642  07BE                     start_initialization:	
   643  07BE                     __initialization:	
   644                           
   645                           ; Initialize objects allocated to BANK3
   646  07BE  1783               	bsf	3,7	;select IRP bank2
   647  07BF  30E7               	movlw	low (__pdataBANK3+87)
   648  07C0  00FD               	movwf	btemp+-1
   649  07C1  3005               	movlw	high __pidataBANK3
   650  07C2  00FE               	movwf	btemp
   651  07C3  3044               	movlw	low __pidataBANK3
   652  07C4  00FF               	movwf	btemp+1
   653  07C5  3090               	movlw	low __pdataBANK3
   654  07C6  0084               	movwf	4
   655  07C7  120A  118A  2049  120A  118A  	fcall	init_ram0
   656                           
   657                           ; Initialize objects allocated to BANK2
   658  07CC  306F               	movlw	low (__pdataBANK2+95)
   659  07CD  00FD               	movwf	btemp+-1
   660  07CE  3005               	movlw	high __pidataBANK2
   661  07CF  00FE               	movwf	btemp
   662  07D0  309B               	movlw	low __pidataBANK2
   663  07D1  00FF               	movwf	btemp+1
   664  07D2  3010               	movlw	low __pdataBANK2
   665  07D3  0084               	movwf	4
   666  07D4  120A  118A  2049  120A  118A  	fcall	init_ram0
   667                           
   668                           ; Initialize objects allocated to BANK1
   669  07D9  1383               	bcf	3,7	;select IRP bank0
   670  07DA  30EE               	movlw	low (__pdataBANK1+78)
   671  07DB  00FD               	movwf	btemp+-1
   672  07DC  3004               	movlw	high __pidataBANK1
   673  07DD  00FE               	movwf	btemp
   674  07DE  30F6               	movlw	low __pidataBANK1
   675  07DF  00FF               	movwf	btemp+1
   676  07E0  30A0               	movlw	low __pdataBANK1
   677  07E1  0084               	movwf	4
   678  07E2  120A  118A  2049  120A  118A  	fcall	init_ram0
   679                           
   680                           ; Initialize objects allocated to BANK0
   681  07E7  3057               	movlw	low (__pdataBANK0+21)
   682  07E8  00FD               	movwf	btemp+-1
   683  07E9  3000               	movlw	high __pidataBANK0
   684  07EA  00FE               	movwf	btemp
   685  07EB  3056               	movlw	low __pidataBANK0
   686  07EC  00FF               	movwf	btemp+1
   687  07ED  3042               	movlw	low __pdataBANK0
   688  07EE  0084               	movwf	4
   689  07EF  120A  118A  2049  120A  118A  	fcall	init_ram0
   690                           
   691                           ; Clear objects allocated to BANK0
   692  07F4  3020               	movlw	low __pbssBANK0
   693  07F5  0084               	movwf	4
   694  07F6  3042               	movlw	low (__pbssBANK0+34)
   695  07F7  120A  118A  2011   	fcall	clear_ram0
   696                           
   697                           ; Clear objects allocated to COMMON
   698  07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   699  07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   700  07FC                     end_of_initialization:	
   701                           ;End of C runtime variable initialization code
   702                           
   703  07FC                     __end_of__initialization:	
   704  07FC  0183               	clrf	3
   705  07FD  120A  118A  28B8   	ljmp	_main	;jump to C main() function
   706                           
   707                           	psect	bssCOMMON
   708  007C                     __pbssCOMMON:	
   709  007C                     _tempChange:	
   710  007C                     	ds	2
   711                           
   712                           	psect	bssBANK0
   713  0020                     __pbssBANK0:	
   714  0020                     _durationValue:	
   715  0020                     	ds	2
   716  0022                     _tempValue:	
   717  0022                     	ds	2
   718  0024                     _alertChange:	
   719  0024                     	ds	2
   720  0026                     _durationChange:	
   721  0026                     	ds	2
   722  0028                     _zone3Alerted:	
   723  0028                     	ds	2
   724  002A                     _zone2Alerted:	
   725  002A                     	ds	2
   726  002C                     _zone1Alerted:	
   727  002C                     	ds	2
   728  002E                     _zone0Alerted:	
   729  002E                     	ds	2
   730  0030                     _zone3On:	
   731  0030                     	ds	2
   732  0032                     _zone2On:	
   733  0032                     	ds	2
   734  0034                     _zone1On:	
   735  0034                     	ds	2
   736  0036                     _zone0On:	
   737  0036                     	ds	2
   738  0038                     _zoneCheck:	
   739  0038                     	ds	2
   740  003A                     _zoneActMode:	
   741  003A                     	ds	2
   742  003C                     _alarmOnOrOff:	
   743  003C                     	ds	2
   744  003E                     _row:	
   745  003E                     	ds	2
   746  0040                     _col:	
   747  0040                     	ds	2
   748                           
   749                           	psect	dataBANK0
   750  0042                     __pdataBANK0:	
   751  0042                     currentTemp@F1166:	
   752  0042                     	ds	7
   753  0049                     ButtonGrid@F1203:	
   754  0049                     	ds	6
   755  004F                     ButtonGrid@F1201:	
   756  004F                     	ds	6
   757  0055                     _alertValue:	
   758  0055                     	ds	2
   759                           
   760                           	psect	dataBANK1
   761  00A0                     __pdataBANK1:	
   762  00A0                     zone0Activate@F1177:	
   763  00A0                     	ds	10
   764  00AA                     alarmOff@F1174:	
   765  00AA                     	ds	10
   766  00B4                     zone3OK@F1151:	
   767  00B4                     	ds	10
   768  00BE                     zone2OK@F1148:	
   769  00BE                     	ds	10
   770  00C8                     zone1OK@F1145:	
   771  00C8                     	ds	10
   772  00D2                     zone0OK@F1142:	
   773  00D2                     	ds	10
   774  00DC                     modeSelect@F1206:	
   775  00DC                     	ds	9
   776  00E5                     alarmOn@F1171:	
   777  00E5                     	ds	9
   778                           
   779                           	psect	dataBANK3
   780  0190                     __pdataBANK3:	
   781  0190                     modeSelect@F1208:	
   782  0190                     	ds	12
   783  019C                     zone0Deactivate@F1189:	
   784  019C                     	ds	12
   785  01A8                     zone3Deactivate@F1198:	
   786  01A8                     	ds	11
   787  01B3                     zone2Deactivate@F1195:	
   788  01B3                     	ds	11
   789  01BE                     zone1Deactivate@F1192:	
   790  01BE                     	ds	11
   791  01C9                     zone3Activate@F1186:	
   792  01C9                     	ds	10
   793  01D3                     zone2Activate@F1183:	
   794  01D3                     	ds	10
   795  01DD                     zone1Activate@F1180:	
   796  01DD                     	ds	10
   797                           
   798                           	psect	dataBANK2
   799  0110                     __pdataBANK2:	
   800  0110                     checkMessage@F1211:	
   801  0110                     	ds	17
   802  0121                     checkZoneMessage@F1219:	
   803  0121                     	ds	13
   804  012E                     currentTemp@F1168:	
   805  012E                     	ds	13
   806  013B                     zone3Alert@F1163:	
   807  013B                     	ds	13
   808  0148                     zone2Alert@F1160:	
   809  0148                     	ds	13
   810  0155                     zone1Alert@F1157:	
   811  0155                     	ds	13
   812  0162                     zone0Alert@F1154:	
   813  0162                     	ds	13
   814                           
   815                           	psect	inittext
   816  0045                     init_fetch0:	
   817                           ;	Called with low address in FSR and high address in W
   818                           
   819  0045  087E               	movf	126,w
   820  0046  008A               	movwf	10
   821  0047  087F               	movf	127,w
   822  0048  0082               	movwf	2
   823  0049                     init_ram0:	
   824                           ;Called with:
   825                           ;	high address of idata address in btemp 
   826                           ;	low address of idata address in btemp+1 
   827                           ;	low address of data in FSR
   828                           ;	high address + 1 of data in btemp-1
   829                           
   830  0049  2045  120A  118A   	fcall	init_fetch0
   831  004C  0080               	movwf	0
   832  004D  0A84               	incf	4,f
   833  004E  0804               	movf	4,w
   834  004F  067D               	xorwf	125,w
   835  0050  1903               	btfsc	3,2
   836  0051  3400               	retlw	0
   837  0052  0AFF               	incf	127,f
   838  0053  1903               	btfsc	3,2
   839  0054  0AFE               	incf	126,f
   840  0055  2849               	goto	init_ram0
   841                           
   842                           	psect	clrtext
   843  0011                     clear_ram0:	
   844                           ;	Called with FSR containing the base address, and
   845                           ;	W with the last address+1
   846                           
   847  0011  0064               	clrwdt	;clear the watchdog before getting into this loop
   848  0012                     clrloop0:	
   849  0012  0180               	clrf	0	;clear RAM location pointed to by FSR
   850  0013  0A84               	incf	4,f	;increment pointer
   851  0014  0604               	xorwf	4,w	;XOR with final address
   852  0015  1903               	btfsc	3,2	;have we reached the end yet?
   853  0016  3400               	retlw	0	;all done for this memory range, return
   854  0017  0604               	xorwf	4,w	;XOR again to restore value
   855  0018  2812               	goto	clrloop0	;do the next byte
   856                           
   857                           	psect	cstackCOMMON
   858  0070                     __pcstackCOMMON:	
   859  0070                     ?_clearDisplay:	
   860  0070                     ?_resetCursor:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_writeMessage:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_LCDdelay2:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ??_LCDdelay2:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_writeMessageline1:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_writeMessageline2:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_LCDsetup:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_checkButtons:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ??_checkButtons:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_displayOn:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_turnon2linemode:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_writeCmd:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_zone0OK:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_zone1OK:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_zone2OK:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_zone3OK:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_zone0Alert:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_zone1Alert:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_zone2Alert:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_zone3Alert:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_alarmOn:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_alarmOff:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_zone0Activate:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_zone1Activate:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_zone2Activate:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_zone3Activate:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_zone0Deactivate:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_zone1Deactivate:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_zone2Deactivate:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_zone3Deactivate:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_modeSelect:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_alarmOnOff:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_checkZoneMessage:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?_checkZones:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?_activateZones:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?_main:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?_LCDdelay:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ??_LCDdelay:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     ?_writeChar:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0070                     ?_buttonsetup:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0070                     ??_buttonsetup:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0070                     checkButtons@rval:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     LCDdelay@i:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     LCDdelay2@i:	
   990                           ; 2 bytes @ 0x0
   991                           
   992                           
   993                           ; 2 bytes @ 0x0
   994  0070                     	ds	2
   995  0072                     ??_writeCmd:	
   996  0072                     ??_writeChar:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0072                     writeChar@var:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0072                     writeCmd@cmd:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x2
  1007  0072                     	ds	1
  1008  0073                     ??_clearDisplay:	
  1009  0073                     ??_resetCursor:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012  0073                     ??_writeMessage:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  0073                     ??_LCDsetup:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018  0073                     ??_displayOn:	
  1019                           ; 1 bytes @ 0x3
  1020                           
  1021  0073                     ??_turnon2linemode:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x3
  1026  0073                     	ds	1
  1027  0074                     writeMessage@i:	
  1028                           
  1029                           ; 2 bytes @ 0x4
  1030  0074                     	ds	2
  1031  0076                     writeMessage@message:	
  1032                           
  1033                           ; 1 bytes @ 0x6
  1034  0076                     	ds	1
  1035  0077                     ??_writeMessageline1:	
  1036  0077                     ??_writeMessageline2:	
  1037                           ; 1 bytes @ 0x7
  1038                           
  1039  0077                     ??_zone0OK:	
  1040                           ; 1 bytes @ 0x7
  1041                           
  1042  0077                     ??_zone1OK:	
  1043                           ; 1 bytes @ 0x7
  1044                           
  1045  0077                     ??_zone2OK:	
  1046                           ; 1 bytes @ 0x7
  1047                           
  1048  0077                     ??_zone3OK:	
  1049                           ; 1 bytes @ 0x7
  1050                           
  1051  0077                     ??_zone0Alert:	
  1052                           ; 1 bytes @ 0x7
  1053                           
  1054  0077                     ??_zone1Alert:	
  1055                           ; 1 bytes @ 0x7
  1056                           
  1057  0077                     ??_zone2Alert:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060  0077                     ??_zone3Alert:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063  0077                     ??_alarmOn:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066  0077                     ??_alarmOff:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069  0077                     ??_zone0Activate:	
  1070                           ; 1 bytes @ 0x7
  1071                           
  1072  0077                     ??_zone1Activate:	
  1073                           ; 1 bytes @ 0x7
  1074                           
  1075  0077                     ??_zone2Activate:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078  0077                     ??_zone3Activate:	
  1079                           ; 1 bytes @ 0x7
  1080                           
  1081  0077                     ??_zone0Deactivate:	
  1082                           ; 1 bytes @ 0x7
  1083                           
  1084  0077                     ??_zone1Deactivate:	
  1085                           ; 1 bytes @ 0x7
  1086                           
  1087  0077                     ??_zone2Deactivate:	
  1088                           ; 1 bytes @ 0x7
  1089                           
  1090  0077                     ??_zone3Deactivate:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093  0077                     writeMessageline1@message:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096  0077                     writeMessageline2@message:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x7
  1101  0077                     	ds	1
  1102  0078                     ??_modeSelect:	
  1103  0078                     ??_checkZoneMessage:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106                           
  1107                           ; 1 bytes @ 0x8
  1108  0078                     	ds	3
  1109  007B                     ??_activateZones:	
  1110                           
  1111                           ; 1 bytes @ 0xB
  1112  007B                     	ds	1
  1113  007C                     ??_alarmOnOff:	
  1114  007C                     ??_checkZones:	
  1115                           ; 1 bytes @ 0xC
  1116                           
  1117  007C                     ??_main:	
  1118                           ; 1 bytes @ 0xC
  1119                           
  1120                           
  1121                           	psect	cstackBANK0
  1122  0057                     __pcstackBANK0:	
  1123                           ; 1 bytes @ 0xC
  1124                           
  1125  0057                     alarmOn@message:	
  1126  0057                     zone0OK@message:	
  1127                           ; 9 bytes @ 0x0
  1128                           
  1129  0057                     zone1OK@message:	
  1130                           ; 10 bytes @ 0x0
  1131                           
  1132  0057                     zone2OK@message:	
  1133                           ; 10 bytes @ 0x0
  1134                           
  1135  0057                     zone3OK@message:	
  1136                           ; 10 bytes @ 0x0
  1137                           
  1138  0057                     alarmOff@message:	
  1139                           ; 10 bytes @ 0x0
  1140                           
  1141  0057                     zone0Activate@message:	
  1142                           ; 10 bytes @ 0x0
  1143                           
  1144  0057                     zone1Activate@message:	
  1145                           ; 10 bytes @ 0x0
  1146                           
  1147  0057                     zone2Activate@message:	
  1148                           ; 10 bytes @ 0x0
  1149                           
  1150  0057                     zone3Activate@message:	
  1151                           ; 10 bytes @ 0x0
  1152                           
  1153  0057                     zone1Deactivate@message:	
  1154                           ; 10 bytes @ 0x0
  1155                           
  1156  0057                     zone2Deactivate@message:	
  1157                           ; 11 bytes @ 0x0
  1158                           
  1159  0057                     zone3Deactivate@message:	
  1160                           ; 11 bytes @ 0x0
  1161                           
  1162  0057                     zone0Deactivate@message:	
  1163                           ; 11 bytes @ 0x0
  1164                           
  1165  0057                     modeSelect@messagecol:	
  1166                           ; 12 bytes @ 0x0
  1167                           
  1168  0057                     zone0Alert@message:	
  1169                           ; 12 bytes @ 0x0
  1170                           
  1171  0057                     zone1Alert@message:	
  1172                           ; 13 bytes @ 0x0
  1173                           
  1174  0057                     zone2Alert@message:	
  1175                           ; 13 bytes @ 0x0
  1176                           
  1177  0057                     zone3Alert@message:	
  1178                           ; 13 bytes @ 0x0
  1179                           
  1180  0057                     checkZoneMessage@messagerow:	
  1181                           ; 13 bytes @ 0x0
  1182                           
  1183                           
  1184                           ; 13 bytes @ 0x0
  1185  0057                     	ds	12
  1186  0063                     modeSelect@messagerow:	
  1187                           
  1188                           ; 9 bytes @ 0xC
  1189  0063                     	ds	9
  1190                           
  1191                           	psect	maintext
  1192  00B8                     __pmaintext:	
  1193 ;;
  1194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1195 ;;
  1196 ;; *************** function _main *****************
  1197 ;; Defined at:
  1198 ;;		line 477 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : B00/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels required when called:    6
  1218 ;; This function calls:
  1219 ;;		_LCDsetup
  1220 ;;		_activateZones
  1221 ;;		_alarmOnOff
  1222 ;;		_checkButtons
  1223 ;;		_checkZones
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _main
  1231  00B8                     _main:	
  1232                           
  1233                           ;main.c: 478: LCDsetup ();
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1237  00B8  120A  118A  206B  120A  118A  	fcall	_LCDsetup
  1238                           
  1239                           ;main.c: 479: checkButtons ();
  1240  00BD  120A  118A  25FA  120A  118A  	fcall	_checkButtons
  1241                           
  1242                           ;main.c: 481: alarmOnOff ();
  1243  00C2  120A  118A  248A  120A  118A  	fcall	_alarmOnOff
  1244                           
  1245                           ;main.c: 482: if (alarmOnOrOff == 1) {
  1246  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1247  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1248  00C9  033C               	decf	_alarmOnOrOff,w
  1249  00CA  043D               	iorwf	_alarmOnOrOff+1,w
  1250  00CB  1D03               	btfss	3,2
  1251  00CC  28D5               	goto	l279
  1252                           
  1253                           ;main.c: 483: checkZones ();
  1254  00CD  120A  118A  2680  120A  118A  	fcall	_checkZones
  1255                           
  1256                           ;main.c: 484: activateZones ();
  1257  00D2  120A  118A  2715   	fcall	_activateZones
  1258  00D5                     l279:	
  1259  00D5  120A  118A  2800   	ljmp	start
  1260  00D8                     __end_of_main:	
  1261                           
  1262                           	psect	text1
  1263  0680                     __ptext1:	
  1264 ;; *************** function _checkZones *****************
  1265 ;; Defined at:
  1266 ;;		line 315 in file "main.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    5
  1287 ;; This function calls:
  1288 ;;		_checkZoneMessage
  1289 ;;		_zone0Alert
  1290 ;;		_zone0OK
  1291 ;;		_zone1Alert
  1292 ;;		_zone1OK
  1293 ;;		_zone2Alert
  1294 ;;		_zone2OK
  1295 ;;		_zone3Alert
  1296 ;;		_zone3OK
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _checkZones
  1304  0680                     _checkZones:	
  1305                           
  1306                           ;main.c: 316: if (row == 1 && col == 1) {
  1307                           
  1308                           ;incstack = 0
  1309                           ; Regs used in _checkZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1310  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0682  033E               	decf	_row,w
  1313  0683  043F               	iorwf	_row+1,w
  1314  0684  1D03               	btfss	3,2
  1315  0685  0008               	return
  1316  0686  0340               	decf	_col,w
  1317  0687  0441               	iorwf	_col+1,w
  1318  0688  1D03               	btfss	3,2
  1319  0689  0008               	return
  1320                           
  1321                           ;main.c: 317: checkZoneMessage ();
  1322  068A  120A  118A  211E  120A  118A  	fcall	_checkZoneMessage
  1323                           
  1324                           ;main.c: 318: zoneCheck = 1;
  1325  068F  3001               	movlw	1
  1326  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0692  00B8               	movwf	_zoneCheck
  1329  0693  3000               	movlw	0
  1330  0694  00B9               	movwf	_zoneCheck+1
  1331                           
  1332                           ;main.c: 319: if (zoneCheck == 1) {
  1333  0695  0338               	decf	_zoneCheck,w
  1334  0696  0439               	iorwf	_zoneCheck+1,w
  1335  0697  1D03               	btfss	3,2
  1336  0698  0008               	return
  1337                           
  1338                           ;main.c: 320: if (row == 1 && col == 2) {
  1339  0699  033E               	decf	_row,w
  1340  069A  043F               	iorwf	_row+1,w
  1341  069B  1D03               	btfss	3,2
  1342  069C  2EB6               	goto	l2012
  1343  069D  3002               	movlw	2
  1344  069E  0640               	xorwf	_col,w
  1345  069F  0441               	iorwf	_col+1,w
  1346  06A0  1D03               	btfss	3,2
  1347  06A1  2EB6               	goto	l2012
  1348                           
  1349                           ;main.c: 321: if(zone0Alerted == 0) {
  1350  06A2  082E               	movf	_zone0Alerted,w
  1351  06A3  042F               	iorwf	_zone0Alerted+1,w
  1352  06A4  1D03               	btfss	3,2
  1353  06A5  2EAB               	goto	l2008
  1354                           
  1355                           ;main.c: 322: zone0OK();
  1356  06A6  120A  118A  21CD  120A  118A  	fcall	_zone0OK
  1357  06AB                     l2008:	
  1358                           
  1359                           ;main.c: 323: }
  1360                           ;main.c: 324: if (zone0Alerted== 1) {
  1361  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1362  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1363  06AD  032E               	decf	_zone0Alerted,w
  1364  06AE  042F               	iorwf	_zone0Alerted+1,w
  1365  06AF  1D03               	btfss	3,2
  1366  06B0  2EB6               	goto	l2012
  1367                           
  1368                           ;main.c: 325: zone0Alert();
  1369  06B1  120A  118A  23CE  120A  118A  	fcall	_zone0Alert
  1370  06B6                     l2012:	
  1371                           
  1372                           ;main.c: 326: }
  1373                           ;main.c: 327: }
  1374                           ;main.c: 328: if (row == 2 && col == 2) {
  1375  06B6  3002               	movlw	2
  1376  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1377  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1378  06B9  063E               	xorwf	_row,w
  1379  06BA  043F               	iorwf	_row+1,w
  1380  06BB  1D03               	btfss	3,2
  1381  06BC  2ED6               	goto	l2024
  1382  06BD  3002               	movlw	2
  1383  06BE  0640               	xorwf	_col,w
  1384  06BF  0441               	iorwf	_col+1,w
  1385  06C0  1D03               	btfss	3,2
  1386  06C1  2ED6               	goto	l2024
  1387                           
  1388                           ;main.c: 330: if(zone1Alerted == 0) {
  1389  06C2  082C               	movf	_zone1Alerted,w
  1390  06C3  042D               	iorwf	_zone1Alerted+1,w
  1391  06C4  1D03               	btfss	3,2
  1392  06C5  2ECB               	goto	l2020
  1393                           
  1394                           ;main.c: 331: zone1OK();
  1395  06C6  120A  118A  21FB  120A  118A  	fcall	_zone1OK
  1396  06CB                     l2020:	
  1397                           
  1398                           ;main.c: 332: }
  1399                           ;main.c: 333: if (zone1Alerted== 1) {
  1400  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1401  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1402  06CD  032C               	decf	_zone1Alerted,w
  1403  06CE  042D               	iorwf	_zone1Alerted+1,w
  1404  06CF  1D03               	btfss	3,2
  1405  06D0  2ED6               	goto	l2024
  1406                           
  1407                           ;main.c: 334: zone1Alert();
  1408  06D1  120A  118A  23FD  120A  118A  	fcall	_zone1Alert
  1409  06D6                     l2024:	
  1410                           
  1411                           ;main.c: 335: }
  1412                           ;main.c: 336: }
  1413                           ;main.c: 337: if (row == 3 && col == 2) {
  1414  06D6  3003               	movlw	3
  1415  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1416  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1417  06D9  063E               	xorwf	_row,w
  1418  06DA  043F               	iorwf	_row+1,w
  1419  06DB  1D03               	btfss	3,2
  1420  06DC  2EF6               	goto	l2036
  1421  06DD  3002               	movlw	2
  1422  06DE  0640               	xorwf	_col,w
  1423  06DF  0441               	iorwf	_col+1,w
  1424  06E0  1D03               	btfss	3,2
  1425  06E1  2EF6               	goto	l2036
  1426                           
  1427                           ;main.c: 339: if(zone2Alerted == 0) {
  1428  06E2  082A               	movf	_zone2Alerted,w
  1429  06E3  042B               	iorwf	_zone2Alerted+1,w
  1430  06E4  1D03               	btfss	3,2
  1431  06E5  2EEB               	goto	l2032
  1432                           
  1433                           ;main.c: 340: zone2OK();
  1434  06E6  120A  118A  2229  120A  118A  	fcall	_zone2OK
  1435  06EB                     l2032:	
  1436                           
  1437                           ;main.c: 341: }
  1438                           ;main.c: 342: if (zone2Alerted== 1) {
  1439  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1440  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1441  06ED  032A               	decf	_zone2Alerted,w
  1442  06EE  042B               	iorwf	_zone2Alerted+1,w
  1443  06EF  1D03               	btfss	3,2
  1444  06F0  2EF6               	goto	l2036
  1445                           
  1446                           ;main.c: 343: zone2Alert();
  1447  06F1  120A  118A  242C  120A  118A  	fcall	_zone2Alert
  1448  06F6                     l2036:	
  1449                           
  1450                           ;main.c: 344: }
  1451                           ;main.c: 345: }
  1452                           ;main.c: 346: if (row == 4 && col == 2) {
  1453  06F6  3004               	movlw	4
  1454  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1455  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1456  06F9  063E               	xorwf	_row,w
  1457  06FA  043F               	iorwf	_row+1,w
  1458  06FB  1D03               	btfss	3,2
  1459  06FC  0008               	return
  1460  06FD  3002               	movlw	2
  1461  06FE  0640               	xorwf	_col,w
  1462  06FF  0441               	iorwf	_col+1,w
  1463  0700  1D03               	btfss	3,2
  1464  0701  0008               	return
  1465                           
  1466                           ;main.c: 348: if(zone3Alerted == 0) {
  1467  0702  0828               	movf	_zone3Alerted,w
  1468  0703  0429               	iorwf	_zone3Alerted+1,w
  1469  0704  1D03               	btfss	3,2
  1470  0705  2F0B               	goto	l2044
  1471                           
  1472                           ;main.c: 349: zone3OK();
  1473  0706  120A  118A  2257  120A  118A  	fcall	_zone3OK
  1474  070B                     l2044:	
  1475                           
  1476                           ;main.c: 350: }
  1477                           ;main.c: 351: if (zone3Alerted== 1) {
  1478  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1479  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1480  070D  0328               	decf	_zone3Alerted,w
  1481  070E  0429               	iorwf	_zone3Alerted+1,w
  1482  070F  1D03               	btfss	3,2
  1483  0710  0008               	return
  1484                           
  1485                           ;main.c: 352: zone3Alert();
  1486  0711  120A  118A  245B   	fcall	_zone3Alert
  1487  0714  0008               	return
  1488  0715                     __end_of_checkZones:	
  1489                           
  1490                           	psect	text2
  1491  0257                     __ptext2:	
  1492 ;; *************** function _zone3OK *****************
  1493 ;; Defined at:
  1494 ;;		line 62 in file "main.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  message        10    0[BANK0 ] unsigned char [10]
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0      10       0       0       0
  1510 ;;      Temps:          4       0       0       0       0
  1511 ;;      Totals:         4      10       0       0       0
  1512 ;;Total ram usage:       14 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    3
  1515 ;; This function calls:
  1516 ;;		_LCDdelay2
  1517 ;;		_clearDisplay
  1518 ;;		_resetCursor
  1519 ;;		_writeMessage
  1520 ;; This function is called by:
  1521 ;;		_checkZones
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _zone3OK
  1527  0257                     _zone3OK:	
  1528                           
  1529                           ;main.c: 63: clearDisplay ();
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _zone3OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1533  0257  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  1534                           
  1535                           ;main.c: 64: resetCursor ();
  1536  025C  120A  118A  2006  120A  118A  	fcall	_resetCursor
  1537                           
  1538                           ;main.c: 65: char message[] = "Zone 3 OK";
  1539  0261  3057               	movlw	zone3OK@message& (0+255)
  1540  0262  0084               	movwf	4
  1541  0263  30B4               	movlw	low zone3OK@F1151
  1542  0264  00F7               	movwf	??_zone3OK
  1543  0265  0804               	movf	4,w
  1544  0266  00F8               	movwf	??_zone3OK+1
  1545  0267  300A               	movlw	10
  1546  0268  00F9               	movwf	??_zone3OK+2
  1547  0269                     u1340:	
  1548  0269  0877               	movf	??_zone3OK,w
  1549  026A  0084               	movwf	4
  1550  026B  1383               	bcf	3,7	;select IRP bank1
  1551  026C  0800               	movf	0,w
  1552  026D  00FA               	movwf	??_zone3OK+3
  1553  026E  0AF7               	incf	??_zone3OK,f
  1554  026F  0878               	movf	??_zone3OK+1,w
  1555  0270  0084               	movwf	4
  1556  0271  087A               	movf	??_zone3OK+3,w
  1557  0272  0080               	movwf	0
  1558  0273  0AF8               	incf	??_zone3OK+1,f
  1559  0274  0BF9               	decfsz	??_zone3OK+2,f
  1560  0275  2A69               	goto	u1340
  1561                           
  1562                           ;main.c: 66: writeMessage(message);
  1563  0276  3057               	movlw	(low (zone3OK@message| 0))& (0+255)
  1564  0277  120A  118A  2099  120A  118A  	fcall	_writeMessage
  1565                           
  1566                           ;main.c: 67: LCDdelay2 ();
  1567  027C  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  1568                           
  1569                           ;main.c: 68: LCDdelay2 ();
  1570  0281  120A  118A  2035   	fcall	_LCDdelay2
  1571  0284  0008               	return
  1572  0285                     __end_of_zone3OK:	
  1573                           
  1574                           	psect	text3
  1575  045B                     __ptext3:	
  1576 ;; *************** function _zone3Alert *****************
  1577 ;; Defined at:
  1578 ;;		line 94 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  message        13    0[BANK0 ] unsigned char [13]
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1592 ;;      Params:         0       0       0       0       0
  1593 ;;      Locals:         0      13       0       0       0
  1594 ;;      Temps:          4       0       0       0       0
  1595 ;;      Totals:         4      13       0       0       0
  1596 ;;Total ram usage:       17 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		_LCDdelay2
  1601 ;;		_clearDisplay
  1602 ;;		_resetCursor
  1603 ;;		_writeMessage
  1604 ;; This function is called by:
  1605 ;;		_checkZones
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _zone3Alert
  1611  045B                     _zone3Alert:	
  1612                           
  1613                           ;main.c: 95: clearDisplay ();
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _zone3Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1617  045B  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  1618                           
  1619                           ;main.c: 96: resetCursor ();
  1620  0460  120A  118A  2006  120A  118A  	fcall	_resetCursor
  1621                           
  1622                           ;main.c: 97: char message[] = "Zone 3 Alert";
  1623  0465  3057               	movlw	zone3Alert@message& (0+255)
  1624  0466  0084               	movwf	4
  1625  0467  303B               	movlw	low zone3Alert@F1163
  1626  0468  00F7               	movwf	??_zone3Alert
  1627  0469  0804               	movf	4,w
  1628  046A  00F8               	movwf	??_zone3Alert+1
  1629  046B  300D               	movlw	13
  1630  046C  00F9               	movwf	??_zone3Alert+2
  1631  046D                     u1380:	
  1632  046D  0877               	movf	??_zone3Alert,w
  1633  046E  0084               	movwf	4
  1634  046F  1783               	bsf	3,7	;select IRP bank2
  1635  0470  0800               	movf	0,w
  1636  0471  00FA               	movwf	??_zone3Alert+3
  1637  0472  0AF7               	incf	??_zone3Alert,f
  1638  0473  0878               	movf	??_zone3Alert+1,w
  1639  0474  0084               	movwf	4
  1640  0475  1383               	bcf	3,7	;select IRP bank0
  1641  0476  087A               	movf	??_zone3Alert+3,w
  1642  0477  0080               	movwf	0
  1643  0478  0AF8               	incf	??_zone3Alert+1,f
  1644  0479  0BF9               	decfsz	??_zone3Alert+2,f
  1645  047A  2C6D               	goto	u1380
  1646                           
  1647                           ;main.c: 98: writeMessage(message);
  1648  047B  3057               	movlw	(low (zone3Alert@message| 0))& (0+255)
  1649  047C  120A  118A  2099  120A  118A  	fcall	_writeMessage
  1650                           
  1651                           ;main.c: 99: LCDdelay2 ();
  1652  0481  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  1653                           
  1654                           ;main.c: 100: LCDdelay2 ();
  1655  0486  120A  118A  2035   	fcall	_LCDdelay2
  1656  0489  0008               	return
  1657  048A                     __end_of_zone3Alert:	
  1658                           
  1659                           	psect	text4
  1660  0229                     __ptext4:	
  1661 ;; *************** function _zone2OK *****************
  1662 ;; Defined at:
  1663 ;;		line 54 in file "main.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  message        10    0[BANK0 ] unsigned char [10]
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0      10       0       0       0
  1679 ;;      Temps:          4       0       0       0       0
  1680 ;;      Totals:         4      10       0       0       0
  1681 ;;Total ram usage:       14 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		_LCDdelay2
  1686 ;;		_clearDisplay
  1687 ;;		_resetCursor
  1688 ;;		_writeMessage
  1689 ;; This function is called by:
  1690 ;;		_checkZones
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _zone2OK
  1696  0229                     _zone2OK:	
  1697                           
  1698                           ;main.c: 55: clearDisplay ();
  1699                           
  1700                           ;incstack = 0
  1701                           ; Regs used in _zone2OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1702  0229  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  1703                           
  1704                           ;main.c: 56: resetCursor ();
  1705  022E  120A  118A  2006  120A  118A  	fcall	_resetCursor
  1706                           
  1707                           ;main.c: 57: char message[] = "Zone 2 OK";
  1708  0233  3057               	movlw	zone2OK@message& (0+255)
  1709  0234  0084               	movwf	4
  1710  0235  30BE               	movlw	low zone2OK@F1148
  1711  0236  00F7               	movwf	??_zone2OK
  1712  0237  0804               	movf	4,w
  1713  0238  00F8               	movwf	??_zone2OK+1
  1714  0239  300A               	movlw	10
  1715  023A  00F9               	movwf	??_zone2OK+2
  1716  023B                     u1330:	
  1717  023B  0877               	movf	??_zone2OK,w
  1718  023C  0084               	movwf	4
  1719  023D  1383               	bcf	3,7	;select IRP bank1
  1720  023E  0800               	movf	0,w
  1721  023F  00FA               	movwf	??_zone2OK+3
  1722  0240  0AF7               	incf	??_zone2OK,f
  1723  0241  0878               	movf	??_zone2OK+1,w
  1724  0242  0084               	movwf	4
  1725  0243  087A               	movf	??_zone2OK+3,w
  1726  0244  0080               	movwf	0
  1727  0245  0AF8               	incf	??_zone2OK+1,f
  1728  0246  0BF9               	decfsz	??_zone2OK+2,f
  1729  0247  2A3B               	goto	u1330
  1730                           
  1731                           ;main.c: 58: writeMessage(message);
  1732  0248  3057               	movlw	(low (zone2OK@message| 0))& (0+255)
  1733  0249  120A  118A  2099  120A  118A  	fcall	_writeMessage
  1734                           
  1735                           ;main.c: 59: LCDdelay2 ();
  1736  024E  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  1737                           
  1738                           ;main.c: 60: LCDdelay2 ();
  1739  0253  120A  118A  2035   	fcall	_LCDdelay2
  1740  0256  0008               	return
  1741  0257                     __end_of_zone2OK:	
  1742                           
  1743                           	psect	text5
  1744  042C                     __ptext5:	
  1745 ;; *************** function _zone2Alert *****************
  1746 ;; Defined at:
  1747 ;;		line 86 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  message        13    0[BANK0 ] unsigned char [13]
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         0      13       0       0       0
  1763 ;;      Temps:          4       0       0       0       0
  1764 ;;      Totals:         4      13       0       0       0
  1765 ;;Total ram usage:       17 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    3
  1768 ;; This function calls:
  1769 ;;		_LCDdelay2
  1770 ;;		_clearDisplay
  1771 ;;		_resetCursor
  1772 ;;		_writeMessage
  1773 ;; This function is called by:
  1774 ;;		_checkZones
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function _zone2Alert
  1780  042C                     _zone2Alert:	
  1781                           
  1782                           ;main.c: 87: clearDisplay ();
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _zone2Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1786  042C  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  1787                           
  1788                           ;main.c: 88: resetCursor ();
  1789  0431  120A  118A  2006  120A  118A  	fcall	_resetCursor
  1790                           
  1791                           ;main.c: 89: char message[] = "Zone 2 Alert";
  1792  0436  3057               	movlw	zone2Alert@message& (0+255)
  1793  0437  0084               	movwf	4
  1794  0438  3048               	movlw	low zone2Alert@F1160
  1795  0439  00F7               	movwf	??_zone2Alert
  1796  043A  0804               	movf	4,w
  1797  043B  00F8               	movwf	??_zone2Alert+1
  1798  043C  300D               	movlw	13
  1799  043D  00F9               	movwf	??_zone2Alert+2
  1800  043E                     u1370:	
  1801  043E  0877               	movf	??_zone2Alert,w
  1802  043F  0084               	movwf	4
  1803  0440  1783               	bsf	3,7	;select IRP bank2
  1804  0441  0800               	movf	0,w
  1805  0442  00FA               	movwf	??_zone2Alert+3
  1806  0443  0AF7               	incf	??_zone2Alert,f
  1807  0444  0878               	movf	??_zone2Alert+1,w
  1808  0445  0084               	movwf	4
  1809  0446  1383               	bcf	3,7	;select IRP bank0
  1810  0447  087A               	movf	??_zone2Alert+3,w
  1811  0448  0080               	movwf	0
  1812  0449  0AF8               	incf	??_zone2Alert+1,f
  1813  044A  0BF9               	decfsz	??_zone2Alert+2,f
  1814  044B  2C3E               	goto	u1370
  1815                           
  1816                           ;main.c: 90: writeMessage(message);
  1817  044C  3057               	movlw	(low (zone2Alert@message| 0))& (0+255)
  1818  044D  120A  118A  2099  120A  118A  	fcall	_writeMessage
  1819                           
  1820                           ;main.c: 91: LCDdelay2 ();
  1821  0452  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  1822                           
  1823                           ;main.c: 92: LCDdelay2 ();
  1824  0457  120A  118A  2035   	fcall	_LCDdelay2
  1825  045A  0008               	return
  1826  045B                     __end_of_zone2Alert:	
  1827                           
  1828                           	psect	text6
  1829  01FB                     __ptext6:	
  1830 ;; *************** function _zone1OK *****************
  1831 ;; Defined at:
  1832 ;;		line 46 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  message        10    0[BANK0 ] unsigned char [10]
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         0       0       0       0       0
  1847 ;;      Locals:         0      10       0       0       0
  1848 ;;      Temps:          4       0       0       0       0
  1849 ;;      Totals:         4      10       0       0       0
  1850 ;;Total ram usage:       14 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    3
  1853 ;; This function calls:
  1854 ;;		_LCDdelay2
  1855 ;;		_clearDisplay
  1856 ;;		_resetCursor
  1857 ;;		_writeMessage
  1858 ;; This function is called by:
  1859 ;;		_checkZones
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _zone1OK
  1865  01FB                     _zone1OK:	
  1866                           
  1867                           ;main.c: 47: clearDisplay ();
  1868                           
  1869                           ;incstack = 0
  1870                           ; Regs used in _zone1OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1871  01FB  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  1872                           
  1873                           ;main.c: 48: resetCursor ();
  1874  0200  120A  118A  2006  120A  118A  	fcall	_resetCursor
  1875                           
  1876                           ;main.c: 49: char message[] = "Zone 1 OK";
  1877  0205  3057               	movlw	zone1OK@message& (0+255)
  1878  0206  0084               	movwf	4
  1879  0207  30C8               	movlw	low zone1OK@F1145
  1880  0208  00F7               	movwf	??_zone1OK
  1881  0209  0804               	movf	4,w
  1882  020A  00F8               	movwf	??_zone1OK+1
  1883  020B  300A               	movlw	10
  1884  020C  00F9               	movwf	??_zone1OK+2
  1885  020D                     u1320:	
  1886  020D  0877               	movf	??_zone1OK,w
  1887  020E  0084               	movwf	4
  1888  020F  1383               	bcf	3,7	;select IRP bank1
  1889  0210  0800               	movf	0,w
  1890  0211  00FA               	movwf	??_zone1OK+3
  1891  0212  0AF7               	incf	??_zone1OK,f
  1892  0213  0878               	movf	??_zone1OK+1,w
  1893  0214  0084               	movwf	4
  1894  0215  087A               	movf	??_zone1OK+3,w
  1895  0216  0080               	movwf	0
  1896  0217  0AF8               	incf	??_zone1OK+1,f
  1897  0218  0BF9               	decfsz	??_zone1OK+2,f
  1898  0219  2A0D               	goto	u1320
  1899                           
  1900                           ;main.c: 50: writeMessage(message);
  1901  021A  3057               	movlw	(low (zone1OK@message| 0))& (0+255)
  1902  021B  120A  118A  2099  120A  118A  	fcall	_writeMessage
  1903                           
  1904                           ;main.c: 51: LCDdelay2 ();
  1905  0220  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  1906                           
  1907                           ;main.c: 52: LCDdelay2 ();
  1908  0225  120A  118A  2035   	fcall	_LCDdelay2
  1909  0228  0008               	return
  1910  0229                     __end_of_zone1OK:	
  1911                           
  1912                           	psect	text7
  1913  03FD                     __ptext7:	
  1914 ;; *************** function _zone1Alert *****************
  1915 ;; Defined at:
  1916 ;;		line 78 in file "main.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  message        13    0[BANK0 ] unsigned char [13]
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         0      13       0       0       0
  1932 ;;      Temps:          4       0       0       0       0
  1933 ;;      Totals:         4      13       0       0       0
  1934 ;;Total ram usage:       17 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    3
  1937 ;; This function calls:
  1938 ;;		_LCDdelay2
  1939 ;;		_clearDisplay
  1940 ;;		_resetCursor
  1941 ;;		_writeMessage
  1942 ;; This function is called by:
  1943 ;;		_checkZones
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _zone1Alert
  1949  03FD                     _zone1Alert:	
  1950                           
  1951                           ;main.c: 79: clearDisplay ();
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _zone1Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1955  03FD  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  1956                           
  1957                           ;main.c: 80: resetCursor ();
  1958  0402  120A  118A  2006  120A  118A  	fcall	_resetCursor
  1959                           
  1960                           ;main.c: 81: char message[] = "Zone 1 Alert";
  1961  0407  3057               	movlw	zone1Alert@message& (0+255)
  1962  0408  0084               	movwf	4
  1963  0409  3055               	movlw	low zone1Alert@F1157
  1964  040A  00F7               	movwf	??_zone1Alert
  1965  040B  0804               	movf	4,w
  1966  040C  00F8               	movwf	??_zone1Alert+1
  1967  040D  300D               	movlw	13
  1968  040E  00F9               	movwf	??_zone1Alert+2
  1969  040F                     u1360:	
  1970  040F  0877               	movf	??_zone1Alert,w
  1971  0410  0084               	movwf	4
  1972  0411  1783               	bsf	3,7	;select IRP bank2
  1973  0412  0800               	movf	0,w
  1974  0413  00FA               	movwf	??_zone1Alert+3
  1975  0414  0AF7               	incf	??_zone1Alert,f
  1976  0415  0878               	movf	??_zone1Alert+1,w
  1977  0416  0084               	movwf	4
  1978  0417  1383               	bcf	3,7	;select IRP bank0
  1979  0418  087A               	movf	??_zone1Alert+3,w
  1980  0419  0080               	movwf	0
  1981  041A  0AF8               	incf	??_zone1Alert+1,f
  1982  041B  0BF9               	decfsz	??_zone1Alert+2,f
  1983  041C  2C0F               	goto	u1360
  1984                           
  1985                           ;main.c: 82: writeMessage(message);
  1986  041D  3057               	movlw	(low (zone1Alert@message| 0))& (0+255)
  1987  041E  120A  118A  2099  120A  118A  	fcall	_writeMessage
  1988                           
  1989                           ;main.c: 83: LCDdelay2 ();
  1990  0423  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  1991                           
  1992                           ;main.c: 84: LCDdelay2 ();
  1993  0428  120A  118A  2035   	fcall	_LCDdelay2
  1994  042B  0008               	return
  1995  042C                     __end_of_zone1Alert:	
  1996                           
  1997                           	psect	text8
  1998  01CD                     __ptext8:	
  1999 ;; *************** function _zone0OK *****************
  2000 ;; Defined at:
  2001 ;;		line 38 in file "main.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  message        10    0[BANK0 ] unsigned char [10]
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0      10       0       0       0
  2017 ;;      Temps:          4       0       0       0       0
  2018 ;;      Totals:         4      10       0       0       0
  2019 ;;Total ram usage:       14 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    3
  2022 ;; This function calls:
  2023 ;;		_LCDdelay2
  2024 ;;		_clearDisplay
  2025 ;;		_resetCursor
  2026 ;;		_writeMessage
  2027 ;; This function is called by:
  2028 ;;		_checkZones
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _zone0OK
  2034  01CD                     _zone0OK:	
  2035                           
  2036                           ;main.c: 39: clearDisplay ();
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _zone0OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2040  01CD  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  2041                           
  2042                           ;main.c: 40: resetCursor ();
  2043  01D2  120A  118A  2006  120A  118A  	fcall	_resetCursor
  2044                           
  2045                           ;main.c: 41: char message[] = "Zone 0 OK";
  2046  01D7  3057               	movlw	zone0OK@message& (0+255)
  2047  01D8  0084               	movwf	4
  2048  01D9  30D2               	movlw	low zone0OK@F1142
  2049  01DA  00F7               	movwf	??_zone0OK
  2050  01DB  0804               	movf	4,w
  2051  01DC  00F8               	movwf	??_zone0OK+1
  2052  01DD  300A               	movlw	10
  2053  01DE  00F9               	movwf	??_zone0OK+2
  2054  01DF                     u1310:	
  2055  01DF  0877               	movf	??_zone0OK,w
  2056  01E0  0084               	movwf	4
  2057  01E1  1383               	bcf	3,7	;select IRP bank1
  2058  01E2  0800               	movf	0,w
  2059  01E3  00FA               	movwf	??_zone0OK+3
  2060  01E4  0AF7               	incf	??_zone0OK,f
  2061  01E5  0878               	movf	??_zone0OK+1,w
  2062  01E6  0084               	movwf	4
  2063  01E7  087A               	movf	??_zone0OK+3,w
  2064  01E8  0080               	movwf	0
  2065  01E9  0AF8               	incf	??_zone0OK+1,f
  2066  01EA  0BF9               	decfsz	??_zone0OK+2,f
  2067  01EB  29DF               	goto	u1310
  2068                           
  2069                           ;main.c: 42: writeMessage(message);
  2070  01EC  3057               	movlw	(low (zone0OK@message| 0))& (0+255)
  2071  01ED  120A  118A  2099  120A  118A  	fcall	_writeMessage
  2072                           
  2073                           ;main.c: 43: LCDdelay2 ();
  2074  01F2  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  2075                           
  2076                           ;main.c: 44: LCDdelay2 ();
  2077  01F7  120A  118A  2035   	fcall	_LCDdelay2
  2078  01FA  0008               	return
  2079  01FB                     __end_of_zone0OK:	
  2080                           
  2081                           	psect	text9
  2082  03CE                     __ptext9:	
  2083 ;; *************** function _zone0Alert *****************
  2084 ;; Defined at:
  2085 ;;		line 70 in file "main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  message        13    0[BANK0 ] unsigned char [13]
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         0      13       0       0       0
  2101 ;;      Temps:          4       0       0       0       0
  2102 ;;      Totals:         4      13       0       0       0
  2103 ;;Total ram usage:       17 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    3
  2106 ;; This function calls:
  2107 ;;		_LCDdelay2
  2108 ;;		_clearDisplay
  2109 ;;		_resetCursor
  2110 ;;		_writeMessage
  2111 ;; This function is called by:
  2112 ;;		_checkZones
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _zone0Alert
  2118  03CE                     _zone0Alert:	
  2119                           
  2120                           ;main.c: 71: clearDisplay ();
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _zone0Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2124  03CE  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  2125                           
  2126                           ;main.c: 72: resetCursor ();
  2127  03D3  120A  118A  2006  120A  118A  	fcall	_resetCursor
  2128                           
  2129                           ;main.c: 73: char message[] = "Zone 0 Alert";
  2130  03D8  3057               	movlw	zone0Alert@message& (0+255)
  2131  03D9  0084               	movwf	4
  2132  03DA  3062               	movlw	low zone0Alert@F1154
  2133  03DB  00F7               	movwf	??_zone0Alert
  2134  03DC  0804               	movf	4,w
  2135  03DD  00F8               	movwf	??_zone0Alert+1
  2136  03DE  300D               	movlw	13
  2137  03DF  00F9               	movwf	??_zone0Alert+2
  2138  03E0                     u1350:	
  2139  03E0  0877               	movf	??_zone0Alert,w
  2140  03E1  0084               	movwf	4
  2141  03E2  1783               	bsf	3,7	;select IRP bank2
  2142  03E3  0800               	movf	0,w
  2143  03E4  00FA               	movwf	??_zone0Alert+3
  2144  03E5  0AF7               	incf	??_zone0Alert,f
  2145  03E6  0878               	movf	??_zone0Alert+1,w
  2146  03E7  0084               	movwf	4
  2147  03E8  1383               	bcf	3,7	;select IRP bank0
  2148  03E9  087A               	movf	??_zone0Alert+3,w
  2149  03EA  0080               	movwf	0
  2150  03EB  0AF8               	incf	??_zone0Alert+1,f
  2151  03EC  0BF9               	decfsz	??_zone0Alert+2,f
  2152  03ED  2BE0               	goto	u1350
  2153                           
  2154                           ;main.c: 74: writeMessage(message);
  2155  03EE  3057               	movlw	(low (zone0Alert@message| 0))& (0+255)
  2156  03EF  120A  118A  2099  120A  118A  	fcall	_writeMessage
  2157                           
  2158                           ;main.c: 75: LCDdelay2 ();
  2159  03F4  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  2160                           
  2161                           ;main.c: 76: LCDdelay2 ();
  2162  03F9  120A  118A  2035   	fcall	_LCDdelay2
  2163  03FC  0008               	return
  2164  03FD                     __end_of_zone0Alert:	
  2165                           
  2166                           	psect	text10
  2167  011E                     __ptext10:	
  2168 ;; *************** function _checkZoneMessage *****************
  2169 ;; Defined at:
  2170 ;;		line 307 in file "main.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  messagerow     13    0[BANK0 ] unsigned char [13]
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       0       0       0
  2185 ;;      Locals:         0      13       0       0       0
  2186 ;;      Temps:          4       0       0       0       0
  2187 ;;      Totals:         4      13       0       0       0
  2188 ;;Total ram usage:       17 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    4
  2191 ;; This function calls:
  2192 ;;		_clearDisplay
  2193 ;;		_resetCursor
  2194 ;;		_writeMessageline1
  2195 ;; This function is called by:
  2196 ;;		_checkZones
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _checkZoneMessage
  2202  011E                     _checkZoneMessage:	
  2203                           
  2204                           ;main.c: 308: clearDisplay ();
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _checkZoneMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2208  011E  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  2209                           
  2210                           ;main.c: 309: resetCursor();
  2211  0123  120A  118A  2006  120A  118A  	fcall	_resetCursor
  2212                           
  2213                           ;main.c: 310: char messagerow[] = "Check a Zone";
  2214  0128  3057               	movlw	checkZoneMessage@messagerow& (0+255)
  2215  0129  0084               	movwf	4
  2216  012A  3021               	movlw	low checkZoneMessage@F1219
  2217  012B  00F8               	movwf	??_checkZoneMessage
  2218  012C  0804               	movf	4,w
  2219  012D  00F9               	movwf	??_checkZoneMessage+1
  2220  012E  300D               	movlw	13
  2221  012F  00FA               	movwf	??_checkZoneMessage+2
  2222  0130                     u1510:	
  2223  0130  0878               	movf	??_checkZoneMessage,w
  2224  0131  0084               	movwf	4
  2225  0132  1783               	bsf	3,7	;select IRP bank2
  2226  0133  0800               	movf	0,w
  2227  0134  00FB               	movwf	??_checkZoneMessage+3
  2228  0135  0AF8               	incf	??_checkZoneMessage,f
  2229  0136  0879               	movf	??_checkZoneMessage+1,w
  2230  0137  0084               	movwf	4
  2231  0138  1383               	bcf	3,7	;select IRP bank0
  2232  0139  087B               	movf	??_checkZoneMessage+3,w
  2233  013A  0080               	movwf	0
  2234  013B  0AF9               	incf	??_checkZoneMessage+1,f
  2235  013C  0BFA               	decfsz	??_checkZoneMessage+2,f
  2236  013D  2930               	goto	u1510
  2237                           
  2238                           ;main.c: 311: writeMessageline1(messagerow);
  2239  013E  3057               	movlw	(low (checkZoneMessage@messagerow| 0))& (0+255)
  2240  013F  120A  118A  200B   	fcall	_writeMessageline1
  2241  0142  0008               	return
  2242  0143                     __end_of_checkZoneMessage:	
  2243                           
  2244                           	psect	text11
  2245  05FA                     __ptext11:	
  2246 ;; *************** function _checkButtons *****************
  2247 ;; Defined at:
  2248 ;;		line 29 in file "buttons.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  rval            1    0[COMMON] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      unsigned char 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0
  2265 ;;      Totals:         1       0       0       0       0
  2266 ;;Total ram usage:        1 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		_buttonsetup
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;;		_ButtonGrid
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _checkButtons
  2279  05FA                     _checkButtons:	
  2280                           
  2281                           ;buttons.c: 31: char rval = 0;
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in _checkButtons: [wreg+status,2+status,0+pclath+cstack]
  2285  05FA  01F0               	clrf	checkButtons@rval
  2286                           
  2287                           ;buttons.c: 32: buttonsetup ();
  2288  05FB  120A  118A  2082  120A  118A  	fcall	_buttonsetup
  2289                           
  2290                           ;buttons.c: 34: RC4 = 0;
  2291  0600  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0601  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0602  1207               	bcf	7,4	;volatile
  2294                           
  2295                           ;buttons.c: 35: if (RC0 == 0) {
  2296  0603  1807               	btfsc	7,0	;volatile
  2297  0604  2E0D               	goto	l1898
  2298                           
  2299                           ;buttons.c: 36: col = 4;
  2300  0605  3004               	movlw	4
  2301  0606  00C0               	movwf	_col
  2302  0607  3000               	movlw	0
  2303  0608  00C1               	movwf	_col+1
  2304                           
  2305                           ;buttons.c: 37: row = 1;
  2306  0609  3001               	movlw	1
  2307  060A  00BE               	movwf	_row
  2308  060B  3000               	movlw	0
  2309  060C  00BF               	movwf	_row+1
  2310  060D                     l1898:	
  2311                           
  2312                           ;buttons.c: 38: }
  2313                           ;buttons.c: 39: if (RC1 == 0) {
  2314  060D  1887               	btfsc	7,1	;volatile
  2315  060E  2E17               	goto	l1902
  2316                           
  2317                           ;buttons.c: 40: col = 3;
  2318  060F  3003               	movlw	3
  2319  0610  00C0               	movwf	_col
  2320  0611  3000               	movlw	0
  2321  0612  00C1               	movwf	_col+1
  2322                           
  2323                           ;buttons.c: 41: row = 1;
  2324  0613  3001               	movlw	1
  2325  0614  00BE               	movwf	_row
  2326  0615  3000               	movlw	0
  2327  0616  00BF               	movwf	_row+1
  2328  0617                     l1902:	
  2329                           
  2330                           ;buttons.c: 42: }
  2331                           ;buttons.c: 43: if (RC2 == 0) {
  2332  0617  1907               	btfsc	7,2	;volatile
  2333  0618  2E21               	goto	l1906
  2334                           
  2335                           ;buttons.c: 44: col = 2;
  2336  0619  3002               	movlw	2
  2337  061A  00C0               	movwf	_col
  2338  061B  3000               	movlw	0
  2339  061C  00C1               	movwf	_col+1
  2340                           
  2341                           ;buttons.c: 45: row = 1;
  2342  061D  3001               	movlw	1
  2343  061E  00BE               	movwf	_row
  2344  061F  3000               	movlw	0
  2345  0620  00BF               	movwf	_row+1
  2346  0621                     l1906:	
  2347                           
  2348                           ;buttons.c: 46: }
  2349                           ;buttons.c: 47: if (RC3 == 0) {
  2350  0621  1987               	btfsc	7,3	;volatile
  2351  0622  2E2B               	goto	l1910
  2352                           
  2353                           ;buttons.c: 48: col = 1;
  2354  0623  3001               	movlw	1
  2355  0624  00C0               	movwf	_col
  2356  0625  3000               	movlw	0
  2357  0626  00C1               	movwf	_col+1
  2358                           
  2359                           ;buttons.c: 49: row = 1;
  2360  0627  3001               	movlw	1
  2361  0628  00BE               	movwf	_row
  2362  0629  3000               	movlw	0
  2363  062A  00BF               	movwf	_row+1
  2364  062B                     l1910:	
  2365                           
  2366                           ;buttons.c: 50: }
  2367                           ;buttons.c: 51: RC4 = 1;
  2368  062B  1607               	bsf	7,4	;volatile
  2369                           
  2370                           ;buttons.c: 54: RC5 = 0;
  2371  062C  1287               	bcf	7,5	;volatile
  2372                           
  2373                           ;buttons.c: 55: if (RC0 == 0) {
  2374  062D  1807               	btfsc	7,0	;volatile
  2375  062E  2E31               	goto	l396
  2376                           
  2377                           ;buttons.c: 56: col = 4;
  2378  062F  3004               	movlw	4
  2379  0630  2E3C               	goto	L3
  2380  0631                     l396:	
  2381                           ;buttons.c: 58: }
  2382                           
  2383                           ;buttons.c: 57: row = 2;
  2384                           
  2385                           
  2386                           ;buttons.c: 59: else if (RC1 == 0) {
  2387  0631  1887               	btfsc	7,1	;volatile
  2388  0632  2E35               	goto	l398
  2389                           
  2390                           ;buttons.c: 60: col = 3;
  2391  0633  3003               	movlw	3
  2392  0634  2E3C               	goto	L3
  2393  0635                     l398:	
  2394                           ;buttons.c: 62: }
  2395                           
  2396                           ;buttons.c: 61: row = 2;
  2397                           
  2398                           
  2399                           ;buttons.c: 63: else if (RC2 == 0) {
  2400  0635  1907               	btfsc	7,2	;volatile
  2401  0636  2E39               	goto	l400
  2402                           
  2403                           ;buttons.c: 64: col = 2;
  2404  0637  3002               	movlw	2
  2405  0638  2E3C               	goto	L3
  2406  0639                     l400:	
  2407                           ;buttons.c: 66: }
  2408                           
  2409                           ;buttons.c: 65: row = 2;
  2410                           
  2411                           
  2412                           ;buttons.c: 67: else if (RC3 == 0) {
  2413  0639  1987               	btfsc	7,3	;volatile
  2414  063A  2E43               	goto	l1924
  2415                           
  2416                           ;buttons.c: 68: col = 1;
  2417  063B  3001               	movlw	1
  2418  063C                     L3:	
  2419  063C  00C0               	movwf	_col
  2420  063D  3000               	movlw	0
  2421  063E  00C1               	movwf	_col+1
  2422                           
  2423                           ;buttons.c: 69: row = 2;
  2424  063F  3002               	movlw	2
  2425  0640  00BE               	movwf	_row
  2426  0641  3000               	movlw	0
  2427  0642  00BF               	movwf	_row+1
  2428  0643                     l1924:	
  2429                           
  2430                           ;buttons.c: 70: }
  2431                           ;buttons.c: 71: RC5 =1;
  2432  0643  1687               	bsf	7,5	;volatile
  2433                           
  2434                           ;buttons.c: 72: RC6 = 0;
  2435  0644  1307               	bcf	7,6	;volatile
  2436                           
  2437                           ;buttons.c: 73: if (RC0 == 0) {
  2438  0645  1807               	btfsc	7,0	;volatile
  2439  0646  2E49               	goto	l403
  2440                           
  2441                           ;buttons.c: 74: col = 4;
  2442  0647  3004               	movlw	4
  2443  0648  2E54               	goto	L6
  2444  0649                     l403:	
  2445                           ;buttons.c: 76: }
  2446                           
  2447                           ;buttons.c: 75: row = 3;
  2448                           
  2449                           
  2450                           ;buttons.c: 77: else if (RC1 == 0) {
  2451  0649  1887               	btfsc	7,1	;volatile
  2452  064A  2E4D               	goto	l405
  2453                           
  2454                           ;buttons.c: 78: col = 3;
  2455  064B  3003               	movlw	3
  2456  064C  2E54               	goto	L6
  2457  064D                     l405:	
  2458                           ;buttons.c: 80: }
  2459                           
  2460                           ;buttons.c: 79: row = 3;
  2461                           
  2462                           
  2463                           ;buttons.c: 81: else if (RC2 == 0) {
  2464  064D  1907               	btfsc	7,2	;volatile
  2465  064E  2E51               	goto	l407
  2466                           
  2467                           ;buttons.c: 82: col = 2;
  2468  064F  3002               	movlw	2
  2469  0650  2E54               	goto	L6
  2470  0651                     l407:	
  2471                           ;buttons.c: 84: }
  2472                           
  2473                           ;buttons.c: 83: row = 3;
  2474                           
  2475                           
  2476                           ;buttons.c: 85: else if (RC3 == 0) {
  2477  0651  1987               	btfsc	7,3	;volatile
  2478  0652  2E5B               	goto	l1938
  2479                           
  2480                           ;buttons.c: 86: col = 1;
  2481  0653  3001               	movlw	1
  2482  0654                     L6:	
  2483  0654  00C0               	movwf	_col
  2484  0655  3000               	movlw	0
  2485  0656  00C1               	movwf	_col+1
  2486                           
  2487                           ;buttons.c: 87: row = 3;
  2488  0657  3003               	movlw	3
  2489  0658  00BE               	movwf	_row
  2490  0659  3000               	movlw	0
  2491  065A  00BF               	movwf	_row+1
  2492  065B                     l1938:	
  2493                           
  2494                           ;buttons.c: 88: }
  2495                           ;buttons.c: 89: RC6 =1;
  2496  065B  1707               	bsf	7,6	;volatile
  2497                           
  2498                           ;buttons.c: 91: RC7 = 0;
  2499  065C  1387               	bcf	7,7	;volatile
  2500                           
  2501                           ;buttons.c: 92: if (RC0 == 0) {
  2502  065D  1807               	btfsc	7,0	;volatile
  2503  065E  2E61               	goto	l410
  2504                           
  2505                           ;buttons.c: 93: col = 4;
  2506  065F  3004               	movlw	4
  2507  0660  2E6C               	goto	L9
  2508  0661                     l410:	
  2509                           ;buttons.c: 95: }
  2510                           
  2511                           ;buttons.c: 94: row = 4;
  2512                           
  2513                           
  2514                           ;buttons.c: 96: else if (RC1 == 0) {
  2515  0661  1887               	btfsc	7,1	;volatile
  2516  0662  2E65               	goto	l412
  2517                           
  2518                           ;buttons.c: 97: col = 3;
  2519  0663  3003               	movlw	3
  2520  0664  2E6C               	goto	L9
  2521  0665                     l412:	
  2522                           ;buttons.c: 99: }
  2523                           
  2524                           ;buttons.c: 98: row = 4;
  2525                           
  2526                           
  2527                           ;buttons.c: 100: else if (RC2 == 0) {
  2528  0665  1907               	btfsc	7,2	;volatile
  2529  0666  2E69               	goto	l414
  2530                           
  2531                           ;buttons.c: 101: col = 2;
  2532  0667  3002               	movlw	2
  2533  0668  2E6C               	goto	L9
  2534  0669                     l414:	
  2535                           ;buttons.c: 103: }
  2536                           
  2537                           ;buttons.c: 102: row = 4;
  2538                           
  2539                           
  2540                           ;buttons.c: 104: else if (RC3 == 0) {
  2541  0669  1987               	btfsc	7,3	;volatile
  2542  066A  2E73               	goto	l1952
  2543                           
  2544                           ;buttons.c: 105: col = 1;
  2545  066B  3001               	movlw	1
  2546  066C                     L9:	
  2547  066C  00C0               	movwf	_col
  2548  066D  3000               	movlw	0
  2549  066E  00C1               	movwf	_col+1
  2550                           
  2551                           ;buttons.c: 106: row = 4;
  2552  066F  3004               	movlw	4
  2553  0670  00BE               	movwf	_row
  2554  0671  3000               	movlw	0
  2555  0672  00BF               	movwf	_row+1
  2556  0673                     l1952:	
  2557                           
  2558                           ;buttons.c: 107: }
  2559                           ;buttons.c: 108: RC7 =1;
  2560  0673  1787               	bsf	7,7	;volatile
  2561                           
  2562                           ;buttons.c: 110: if(col==0&&row==0){
  2563  0674  0840               	movf	_col,w
  2564  0675  0441               	iorwf	_col+1,w
  2565  0676  1D03               	btfss	3,2
  2566  0677  2E7C               	goto	l417
  2567  0678  083E               	movf	_row,w
  2568  0679  043F               	iorwf	_row+1,w
  2569  067A  1903               	btfsc	3,2
  2570  067B  2E7E               	goto	l1960
  2571  067C                     l417:	
  2572                           ;buttons.c: 111: }else{
  2573                           
  2574                           
  2575                           ;buttons.c: 112: rval = 1;
  2576  067C  01F0               	clrf	checkButtons@rval
  2577  067D  0AF0               	incf	checkButtons@rval,f
  2578  067E                     l1960:	
  2579                           
  2580                           ;buttons.c: 113: }
  2581                           ;buttons.c: 116: return rval;
  2582  067E  0870               	movf	checkButtons@rval,w
  2583  067F  0008               	return
  2584  0680                     __end_of_checkButtons:	
  2585                           
  2586                           	psect	text12
  2587  0082                     __ptext12:	
  2588 ;; *************** function _buttonsetup *****************
  2589 ;; Defined at:
  2590 ;;		line 7 in file "buttons.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0
  2607 ;;      Totals:         0       0       0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_checkButtons
  2614 ;;		_checkButton
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _buttonsetup
  2620  0082                     _buttonsetup:	
  2621                           
  2622                           ;buttons.c: 8: ADCON1 = 0x06;
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _buttonsetup: [wreg+status,2]
  2626  0082  3006               	movlw	6
  2627  0083  1683               	bsf	3,5	;RP0=1, select bank1
  2628  0084  1303               	bcf	3,6	;RP1=0, select bank1
  2629  0085  009F               	movwf	31	;volatile
  2630                           
  2631                           ;buttons.c: 9: TRISA = 0x00;
  2632  0086  0185               	clrf	5	;volatile
  2633                           
  2634                           ;buttons.c: 10: PORTA = 0x00;
  2635  0087  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0088  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0089  0185               	clrf	5	;volatile
  2638                           
  2639                           ;buttons.c: 11: TRISC = 0x0f;
  2640  008A  300F               	movlw	15
  2641  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2642  008C  1303               	bcf	3,6	;RP1=0, select bank1
  2643  008D  0087               	movwf	7	;volatile
  2644                           
  2645                           ;buttons.c: 12: PORTC = 0xf0;
  2646  008E  30F0               	movlw	240
  2647  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0091  0087               	movwf	7	;volatile
  2650                           
  2651                           ;buttons.c: 13: TRISD = 0x00;
  2652  0092  1683               	bsf	3,5	;RP0=1, select bank1
  2653  0093  1303               	bcf	3,6	;RP1=0, select bank1
  2654  0094  0188               	clrf	8	;volatile
  2655                           
  2656                           ;buttons.c: 14: PORTD = 0x00;
  2657  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0097  0188               	clrf	8	;volatile
  2660  0098  0008               	return
  2661  0099                     __end_of_buttonsetup:	
  2662                           
  2663                           	psect	text13
  2664  048A                     __ptext13:	
  2665 ;; *************** function _alarmOnOff *****************
  2666 ;; Defined at:
  2667 ;;		line 271 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    5
  2688 ;; This function calls:
  2689 ;;		_LCDdelay2
  2690 ;;		_alarmOff
  2691 ;;		_alarmOn
  2692 ;;		_modeSelect
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _alarmOnOff
  2700  048A                     _alarmOnOff:	
  2701                           
  2702                           ;main.c: 273: if (row == 4 && col == 4){
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _alarmOnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2706  048A  3004               	movlw	4
  2707  048B  1283               	bcf	3,5	;RP0=0, select bank0
  2708  048C  1303               	bcf	3,6	;RP1=0, select bank0
  2709  048D  063E               	xorwf	_row,w
  2710  048E  043F               	iorwf	_row+1,w
  2711  048F  1D03               	btfss	3,2
  2712  0490  2CA9               	goto	l1982
  2713  0491  3004               	movlw	4
  2714  0492  0640               	xorwf	_col,w
  2715  0493  0441               	iorwf	_col+1,w
  2716  0494  1D03               	btfss	3,2
  2717  0495  2CA9               	goto	l1982
  2718                           
  2719                           ;main.c: 274: alarmOnOrOff = 1;
  2720  0496  3001               	movlw	1
  2721  0497  00BC               	movwf	_alarmOnOrOff
  2722  0498  3000               	movlw	0
  2723  0499  00BD               	movwf	_alarmOnOrOff+1
  2724                           
  2725                           ;main.c: 275: alarmOn ();
  2726  049A  120A  118A  219F  120A  118A  	fcall	_alarmOn
  2727                           
  2728                           ;main.c: 276: LCDdelay2();
  2729  049F  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  2730                           
  2731                           ;main.c: 277: modeSelect();
  2732  04A4  120A  118A  24BB  120A  118A  	fcall	_modeSelect
  2733  04A9                     l1982:	
  2734                           
  2735                           ;main.c: 279: }
  2736                           ;main.c: 280: if (row == 4 && col == 3) {
  2737  04A9  3004               	movlw	4
  2738  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2739  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2740  04AC  063E               	xorwf	_row,w
  2741  04AD  043F               	iorwf	_row+1,w
  2742  04AE  1D03               	btfss	3,2
  2743  04AF  0008               	return
  2744  04B0  3003               	movlw	3
  2745  04B1  0640               	xorwf	_col,w
  2746  04B2  0441               	iorwf	_col+1,w
  2747  04B3  1D03               	btfss	3,2
  2748  04B4  0008               	return
  2749                           
  2750                           ;main.c: 281: alarmOnOrOff = 0;
  2751  04B5  01BC               	clrf	_alarmOnOrOff
  2752  04B6  01BD               	clrf	_alarmOnOrOff+1
  2753                           
  2754                           ;main.c: 282: alarmOff ();
  2755  04B7  120A  118A  2171   	fcall	_alarmOff
  2756  04BA  0008               	return
  2757  04BB                     __end_of_alarmOnOff:	
  2758                           
  2759                           	psect	text14
  2760  04BB                     __ptext14:	
  2761 ;; *************** function _modeSelect *****************
  2762 ;; Defined at:
  2763 ;;		line 242 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  messagecol     12    0[BANK0 ] unsigned char [12]
  2768 ;;  messagerow      9   12[BANK0 ] unsigned char [9]
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       0       0       0       0
  2779 ;;      Locals:         0      21       0       0       0
  2780 ;;      Temps:          4       0       0       0       0
  2781 ;;      Totals:         4      21       0       0       0
  2782 ;;Total ram usage:       25 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    4
  2785 ;; This function calls:
  2786 ;;		_resetCursor
  2787 ;;		_writeMessageline1
  2788 ;;		_writeMessageline2
  2789 ;; This function is called by:
  2790 ;;		_alarmOnOff
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _modeSelect
  2796  04BB                     _modeSelect:	
  2797                           
  2798                           ;main.c: 243: resetCursor ();
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in _modeSelect: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2802  04BB  120A  118A  2006  120A  118A  	fcall	_resetCursor
  2803                           
  2804                           ;main.c: 244: char messagerow[] = "Select a";
  2805  04C0  3063               	movlw	modeSelect@messagerow& (0+255)
  2806  04C1  0084               	movwf	4
  2807  04C2  30DC               	movlw	low modeSelect@F1206
  2808  04C3  00F8               	movwf	??_modeSelect
  2809  04C4  0804               	movf	4,w
  2810  04C5  00F9               	movwf	??_modeSelect+1
  2811  04C6  3009               	movlw	9
  2812  04C7  00FA               	movwf	??_modeSelect+2
  2813  04C8                     u1490:	
  2814  04C8  0878               	movf	??_modeSelect,w
  2815  04C9  0084               	movwf	4
  2816  04CA  1383               	bcf	3,7	;select IRP bank1
  2817  04CB  0800               	movf	0,w
  2818  04CC  00FB               	movwf	??_modeSelect+3
  2819  04CD  0AF8               	incf	??_modeSelect,f
  2820  04CE  0879               	movf	??_modeSelect+1,w
  2821  04CF  0084               	movwf	4
  2822  04D0  087B               	movf	??_modeSelect+3,w
  2823  04D1  0080               	movwf	0
  2824  04D2  0AF9               	incf	??_modeSelect+1,f
  2825  04D3  0BFA               	decfsz	??_modeSelect+2,f
  2826  04D4  2CC8               	goto	u1490
  2827                           
  2828                           ;main.c: 245: char messagecol[] = "Function...";
  2829  04D5  3057               	movlw	modeSelect@messagecol& (0+255)
  2830  04D6  0084               	movwf	4
  2831  04D7  3090               	movlw	low modeSelect@F1208
  2832  04D8  00F8               	movwf	??_modeSelect
  2833  04D9  0804               	movf	4,w
  2834  04DA  00F9               	movwf	??_modeSelect+1
  2835  04DB  300C               	movlw	12
  2836  04DC  00FA               	movwf	??_modeSelect+2
  2837  04DD                     u1500:	
  2838  04DD  0878               	movf	??_modeSelect,w
  2839  04DE  0084               	movwf	4
  2840  04DF  1783               	bsf	3,7	;select IRP bank3
  2841  04E0  0800               	movf	0,w
  2842  04E1  00FB               	movwf	??_modeSelect+3
  2843  04E2  0AF8               	incf	??_modeSelect,f
  2844  04E3  0879               	movf	??_modeSelect+1,w
  2845  04E4  0084               	movwf	4
  2846  04E5  1383               	bcf	3,7	;select IRP bank0
  2847  04E6  087B               	movf	??_modeSelect+3,w
  2848  04E7  0080               	movwf	0
  2849  04E8  0AF9               	incf	??_modeSelect+1,f
  2850  04E9  0BFA               	decfsz	??_modeSelect+2,f
  2851  04EA  2CDD               	goto	u1500
  2852                           
  2853                           ;main.c: 246: writeMessageline1(messagerow);
  2854  04EB  3063               	movlw	(low (modeSelect@messagerow| 0))& (0+255)
  2855  04EC  120A  118A  200B  120A  118A  	fcall	_writeMessageline1
  2856                           
  2857                           ;main.c: 247: writeMessageline2(messagecol);
  2858  04F1  3057               	movlw	(low (modeSelect@messagecol| 0))& (0+255)
  2859  04F2  120A  118A  2019   	fcall	_writeMessageline2
  2860  04F5  0008               	return
  2861  04F6                     __end_of_modeSelect:	
  2862                           
  2863                           	psect	text15
  2864  0019                     __ptext15:	
  2865 ;; *************** function _writeMessageline2 *****************
  2866 ;; Defined at:
  2867 ;;		line 54 in file "LCD.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  message         1    wreg     PTR unsigned char 
  2870 ;;		 -> modeSelect@messagecol(12), ButtonGrid@messagecol(6), currentTemp@message2(13), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  message         1    7[COMMON] PTR unsigned char 
  2873 ;;		 -> modeSelect@messagecol(12), ButtonGrid@messagecol(6), currentTemp@message2(13), 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         0       0       0       0       0
  2884 ;;      Locals:         1       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0
  2886 ;;      Totals:         1       0       0       0       0
  2887 ;;Total ram usage:        1 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    3
  2890 ;; This function calls:
  2891 ;;		_writeCmd
  2892 ;;		_writeMessage
  2893 ;; This function is called by:
  2894 ;;		_modeSelect
  2895 ;;		_currentTemp
  2896 ;;		_ButtonGrid
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _writeMessageline2
  2902  0019                     _writeMessageline2:	
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _writeMessageline2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2906                           ;writeMessageline2@message stored from wreg
  2907  0019  00F7               	movwf	writeMessageline2@message
  2908                           
  2909                           ;LCD.c: 62: writeCmd(0x80+40);
  2910  001A  30A8               	movlw	168
  2911  001B  120A  118A  20D8  120A  118A  	fcall	_writeCmd
  2912                           
  2913                           ;LCD.c: 63: writeMessage(message);
  2914  0020  0877               	movf	writeMessageline2@message,w
  2915  0021  120A  118A  2099   	fcall	_writeMessage
  2916  0024  0008               	return
  2917  0025                     __end_of_writeMessageline2:	
  2918                           
  2919                           	psect	text16
  2920  000B                     __ptext16:	
  2921 ;; *************** function _writeMessageline1 *****************
  2922 ;; Defined at:
  2923 ;;		line 49 in file "LCD.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  message         1    wreg     PTR unsigned char 
  2926 ;;		 -> checkZoneMessage@messagerow(13), checkMessage@messagerow(17), modeSelect@messagerow(9), ButtonGrid@messagerow(6)
      +, 
  2927 ;;		 -> currentTemp@message1(7), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  message         1    7[COMMON] PTR unsigned char 
  2930 ;;		 -> checkZoneMessage@messagerow(13), checkMessage@messagerow(17), modeSelect@messagerow(9), ButtonGrid@messagerow(6)
      +, 
  2931 ;;		 -> currentTemp@message1(7), 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         1       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0
  2944 ;;      Totals:         1       0       0       0       0
  2945 ;;Total ram usage:        1 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    3
  2948 ;; This function calls:
  2949 ;;		_writeMessage
  2950 ;; This function is called by:
  2951 ;;		_modeSelect
  2952 ;;		_checkZoneMessage
  2953 ;;		_currentTemp
  2954 ;;		_ButtonGrid
  2955 ;;		_checkMessage
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _writeMessageline1
  2961  000B                     _writeMessageline1:	
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _writeMessageline1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2965                           ;writeMessageline1@message stored from wreg
  2966  000B  00F7               	movwf	writeMessageline1@message
  2967                           
  2968                           ;LCD.c: 51: writeMessage(message);
  2969  000C  0877               	movf	writeMessageline1@message,w
  2970  000D  120A  118A  2099   	fcall	_writeMessage
  2971  0010  0008               	return
  2972  0011                     __end_of_writeMessageline1:	
  2973                           
  2974                           	psect	text17
  2975  019F                     __ptext17:	
  2976 ;; *************** function _alarmOn *****************
  2977 ;; Defined at:
  2978 ;;		line 114 in file "main.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  message         9    0[BANK0 ] unsigned char [9]
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         0       0       0       0       0
  2993 ;;      Locals:         0       9       0       0       0
  2994 ;;      Temps:          4       0       0       0       0
  2995 ;;      Totals:         4       9       0       0       0
  2996 ;;Total ram usage:       13 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    3
  2999 ;; This function calls:
  3000 ;;		_LCDdelay2
  3001 ;;		_clearDisplay
  3002 ;;		_resetCursor
  3003 ;;		_writeMessage
  3004 ;; This function is called by:
  3005 ;;		_alarmOnOff
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           
  3010                           ;psect for function _alarmOn
  3011  019F                     _alarmOn:	
  3012                           
  3013                           ;main.c: 115: clearDisplay ();
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _alarmOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3017  019F  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3018                           
  3019                           ;main.c: 116: resetCursor ();
  3020  01A4  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3021                           
  3022                           ;main.c: 117: char message[] = "Alarm On";
  3023  01A9  3057               	movlw	alarmOn@message& (0+255)
  3024  01AA  0084               	movwf	4
  3025  01AB  30E5               	movlw	low alarmOn@F1171
  3026  01AC  00F7               	movwf	??_alarmOn
  3027  01AD  0804               	movf	4,w
  3028  01AE  00F8               	movwf	??_alarmOn+1
  3029  01AF  3009               	movlw	9
  3030  01B0  00F9               	movwf	??_alarmOn+2
  3031  01B1                     u1390:	
  3032  01B1  0877               	movf	??_alarmOn,w
  3033  01B2  0084               	movwf	4
  3034  01B3  1383               	bcf	3,7	;select IRP bank1
  3035  01B4  0800               	movf	0,w
  3036  01B5  00FA               	movwf	??_alarmOn+3
  3037  01B6  0AF7               	incf	??_alarmOn,f
  3038  01B7  0878               	movf	??_alarmOn+1,w
  3039  01B8  0084               	movwf	4
  3040  01B9  087A               	movf	??_alarmOn+3,w
  3041  01BA  0080               	movwf	0
  3042  01BB  0AF8               	incf	??_alarmOn+1,f
  3043  01BC  0BF9               	decfsz	??_alarmOn+2,f
  3044  01BD  29B1               	goto	u1390
  3045                           
  3046                           ;main.c: 118: writeMessage(message);
  3047  01BE  3057               	movlw	(low (alarmOn@message| 0))& (0+255)
  3048  01BF  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3049                           
  3050                           ;main.c: 119: LCDdelay2 ();
  3051  01C4  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3052                           
  3053                           ;main.c: 120: LCDdelay2 ();
  3054  01C9  120A  118A  2035   	fcall	_LCDdelay2
  3055  01CC  0008               	return
  3056  01CD                     __end_of_alarmOn:	
  3057                           
  3058                           	psect	text18
  3059  0171                     __ptext18:	
  3060 ;; *************** function _alarmOff *****************
  3061 ;; Defined at:
  3062 ;;		line 122 in file "main.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  message        10    0[BANK0 ] unsigned char [10]
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       0       0       0
  3077 ;;      Locals:         0      10       0       0       0
  3078 ;;      Temps:          4       0       0       0       0
  3079 ;;      Totals:         4      10       0       0       0
  3080 ;;Total ram usage:       14 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		_LCDdelay2
  3085 ;;		_clearDisplay
  3086 ;;		_resetCursor
  3087 ;;		_writeMessage
  3088 ;; This function is called by:
  3089 ;;		_alarmOnOff
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function _alarmOff
  3095  0171                     _alarmOff:	
  3096                           
  3097                           ;main.c: 123: clearDisplay ();
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _alarmOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3101  0171  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3102                           
  3103                           ;main.c: 124: resetCursor ();
  3104  0176  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3105                           
  3106                           ;main.c: 125: char message[] = "Alarm Off";
  3107  017B  3057               	movlw	alarmOff@message& (0+255)
  3108  017C  0084               	movwf	4
  3109  017D  30AA               	movlw	low alarmOff@F1174
  3110  017E  00F7               	movwf	??_alarmOff
  3111  017F  0804               	movf	4,w
  3112  0180  00F8               	movwf	??_alarmOff+1
  3113  0181  300A               	movlw	10
  3114  0182  00F9               	movwf	??_alarmOff+2
  3115  0183                     u1400:	
  3116  0183  0877               	movf	??_alarmOff,w
  3117  0184  0084               	movwf	4
  3118  0185  1383               	bcf	3,7	;select IRP bank1
  3119  0186  0800               	movf	0,w
  3120  0187  00FA               	movwf	??_alarmOff+3
  3121  0188  0AF7               	incf	??_alarmOff,f
  3122  0189  0878               	movf	??_alarmOff+1,w
  3123  018A  0084               	movwf	4
  3124  018B  087A               	movf	??_alarmOff+3,w
  3125  018C  0080               	movwf	0
  3126  018D  0AF8               	incf	??_alarmOff+1,f
  3127  018E  0BF9               	decfsz	??_alarmOff+2,f
  3128  018F  2983               	goto	u1400
  3129                           
  3130                           ;main.c: 126: writeMessage(message);
  3131  0190  3057               	movlw	(low (alarmOff@message| 0))& (0+255)
  3132  0191  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3133                           
  3134                           ;main.c: 127: LCDdelay2 ();
  3135  0196  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3136                           
  3137                           ;main.c: 128: LCDdelay2 ();
  3138  019B  120A  118A  2035   	fcall	_LCDdelay2
  3139  019E  0008               	return
  3140  019F                     __end_of_alarmOff:	
  3141                           
  3142                           	psect	text19
  3143  0715                     __ptext19:	
  3144 ;; *************** function _activateZones *****************
  3145 ;; Defined at:
  3146 ;;		line 359 in file "main.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    4
  3167 ;; This function calls:
  3168 ;;		_zone0Activate
  3169 ;;		_zone0Deactivate
  3170 ;;		_zone1Activate
  3171 ;;		_zone1Deactivate
  3172 ;;		_zone2Activate
  3173 ;;		_zone2Deactivate
  3174 ;;		_zone3Activate
  3175 ;;		_zone3Deactivate
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _activateZones
  3183  0715                     _activateZones:	
  3184                           
  3185                           ;main.c: 360: if (row == 2 && col == 1) {
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _activateZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3189  0715  3002               	movlw	2
  3190  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0717  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0718  063E               	xorwf	_row,w
  3193  0719  043F               	iorwf	_row+1,w
  3194  071A  1D03               	btfss	3,2
  3195  071B  0008               	return
  3196  071C  0340               	decf	_col,w
  3197  071D  0441               	iorwf	_col+1,w
  3198  071E  1D03               	btfss	3,2
  3199  071F  0008               	return
  3200                           
  3201                           ;main.c: 361: zoneActMode = 1;
  3202  0720  3001               	movlw	1
  3203  0721  00BA               	movwf	_zoneActMode
  3204  0722  3000               	movlw	0
  3205  0723  00BB               	movwf	_zoneActMode+1
  3206                           
  3207                           ;main.c: 362: if (zoneActMode == 1) {
  3208  0724  033A               	decf	_zoneActMode,w
  3209  0725  043B               	iorwf	_zoneActMode+1,w
  3210  0726  1D03               	btfss	3,2
  3211  0727  0008               	return
  3212                           
  3213                           ;main.c: 363: if (row == 1 && col == 2) {
  3214  0728  033E               	decf	_row,w
  3215  0729  043F               	iorwf	_row+1,w
  3216  072A  1D03               	btfss	3,2
  3217  072B  2F4D               	goto	l2072
  3218  072C  3002               	movlw	2
  3219  072D  0640               	xorwf	_col,w
  3220  072E  0441               	iorwf	_col+1,w
  3221  072F  1D03               	btfss	3,2
  3222  0730  2F4D               	goto	l2072
  3223                           
  3224                           ;main.c: 364: if (zone0On == 0) {
  3225  0731  0836               	movf	_zone0On,w
  3226  0732  0437               	iorwf	_zone0On+1,w
  3227  0733  1D03               	btfss	3,2
  3228  0734  2F40               	goto	l2066
  3229                           
  3230                           ;main.c: 365: zone0Activate();
  3231  0735  120A  118A  2143  120A  118A  	fcall	_zone0Activate
  3232                           
  3233                           ;main.c: 366: zone0On = 1;
  3234  073A  3001               	movlw	1
  3235  073B  1283               	bcf	3,5	;RP0=0, select bank0
  3236  073C  1303               	bcf	3,6	;RP1=0, select bank0
  3237  073D  00B6               	movwf	_zone0On
  3238  073E  3000               	movlw	0
  3239  073F  00B7               	movwf	_zone0On+1
  3240  0740                     l2066:	
  3241                           
  3242                           ;main.c: 367: }
  3243                           ;main.c: 368: if (zone0On == 1) {
  3244  0740  0336               	decf	_zone0On,w
  3245  0741  0437               	iorwf	_zone0On+1,w
  3246  0742  1D03               	btfss	3,2
  3247  0743  2F4D               	goto	l2072
  3248                           
  3249                           ;main.c: 369: zone0Deactivate();
  3250  0744  120A  118A  2285  120A  118A  	fcall	_zone0Deactivate
  3251                           
  3252                           ;main.c: 370: zone0On = 0;
  3253  0749  1283               	bcf	3,5	;RP0=0, select bank0
  3254  074A  1303               	bcf	3,6	;RP1=0, select bank0
  3255  074B  01B6               	clrf	_zone0On
  3256  074C  01B7               	clrf	_zone0On+1
  3257  074D                     l2072:	
  3258                           
  3259                           ;main.c: 371: }
  3260                           ;main.c: 373: }
  3261                           ;main.c: 374: if (row == 2 && col == 2) {
  3262  074D  3002               	movlw	2
  3263  074E  063E               	xorwf	_row,w
  3264  074F  043F               	iorwf	_row+1,w
  3265  0750  1D03               	btfss	3,2
  3266  0751  2F73               	goto	l2088
  3267  0752  3002               	movlw	2
  3268  0753  0640               	xorwf	_col,w
  3269  0754  0441               	iorwf	_col+1,w
  3270  0755  1D03               	btfss	3,2
  3271  0756  2F73               	goto	l2088
  3272                           
  3273                           ;main.c: 375: if (zone1On == 0) {
  3274  0757  0834               	movf	_zone1On,w
  3275  0758  0435               	iorwf	_zone1On+1,w
  3276  0759  1D03               	btfss	3,2
  3277  075A  2F66               	goto	l2082
  3278                           
  3279                           ;main.c: 376: zone1Activate();
  3280  075B  120A  118A  22B4  120A  118A  	fcall	_zone1Activate
  3281                           
  3282                           ;main.c: 377: zone1On = 1;
  3283  0760  3001               	movlw	1
  3284  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0762  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0763  00B4               	movwf	_zone1On
  3287  0764  3000               	movlw	0
  3288  0765  00B5               	movwf	_zone1On+1
  3289  0766                     l2082:	
  3290                           
  3291                           ;main.c: 378: }
  3292                           ;main.c: 379: if (zone1On == 1) {
  3293  0766  0334               	decf	_zone1On,w
  3294  0767  0435               	iorwf	_zone1On+1,w
  3295  0768  1D03               	btfss	3,2
  3296  0769  2F73               	goto	l2088
  3297                           
  3298                           ;main.c: 380: zone1Deactivate();
  3299  076A  120A  118A  22E3  120A  118A  	fcall	_zone1Deactivate
  3300                           
  3301                           ;main.c: 381: zone1On = 0;
  3302  076F  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0770  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0771  01B4               	clrf	_zone1On
  3305  0772  01B5               	clrf	_zone1On+1
  3306  0773                     l2088:	
  3307                           
  3308                           ;main.c: 382: }
  3309                           ;main.c: 383: }
  3310                           ;main.c: 384: if (row == 3 && col == 2) {
  3311  0773  3003               	movlw	3
  3312  0774  063E               	xorwf	_row,w
  3313  0775  043F               	iorwf	_row+1,w
  3314  0776  1D03               	btfss	3,2
  3315  0777  2F99               	goto	l2104
  3316  0778  3002               	movlw	2
  3317  0779  0640               	xorwf	_col,w
  3318  077A  0441               	iorwf	_col+1,w
  3319  077B  1D03               	btfss	3,2
  3320  077C  2F99               	goto	l2104
  3321                           
  3322                           ;main.c: 385: if (zone2On == 0) {
  3323  077D  0832               	movf	_zone2On,w
  3324  077E  0433               	iorwf	_zone2On+1,w
  3325  077F  1D03               	btfss	3,2
  3326  0780  2F8C               	goto	l2098
  3327                           
  3328                           ;main.c: 386: zone2Activate();
  3329  0781  120A  118A  2312  120A  118A  	fcall	_zone2Activate
  3330                           
  3331                           ;main.c: 387: zone2On = 1;
  3332  0786  3001               	movlw	1
  3333  0787  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0788  1303               	bcf	3,6	;RP1=0, select bank0
  3335  0789  00B2               	movwf	_zone2On
  3336  078A  3000               	movlw	0
  3337  078B  00B3               	movwf	_zone2On+1
  3338  078C                     l2098:	
  3339                           
  3340                           ;main.c: 388: }
  3341                           ;main.c: 389: if (zone2On == 1) {
  3342  078C  0332               	decf	_zone2On,w
  3343  078D  0433               	iorwf	_zone2On+1,w
  3344  078E  1D03               	btfss	3,2
  3345  078F  2F99               	goto	l2104
  3346                           
  3347                           ;main.c: 390: zone2Deactivate();
  3348  0790  120A  118A  2341  120A  118A  	fcall	_zone2Deactivate
  3349                           
  3350                           ;main.c: 391: zone2On = 0;
  3351  0795  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0796  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0797  01B2               	clrf	_zone2On
  3354  0798  01B3               	clrf	_zone2On+1
  3355  0799                     l2104:	
  3356                           
  3357                           ;main.c: 392: }
  3358                           ;main.c: 393: }
  3359                           ;main.c: 394: if (row == 4 && col == 2) {
  3360  0799  3004               	movlw	4
  3361  079A  063E               	xorwf	_row,w
  3362  079B  043F               	iorwf	_row+1,w
  3363  079C  1D03               	btfss	3,2
  3364  079D  0008               	return
  3365  079E  3002               	movlw	2
  3366  079F  0640               	xorwf	_col,w
  3367  07A0  0441               	iorwf	_col+1,w
  3368  07A1  1D03               	btfss	3,2
  3369  07A2  0008               	return
  3370                           
  3371                           ;main.c: 395: if (zone3On == 0) {
  3372  07A3  0830               	movf	_zone3On,w
  3373  07A4  0431               	iorwf	_zone3On+1,w
  3374  07A5  1D03               	btfss	3,2
  3375  07A6  2FB2               	goto	l2114
  3376                           
  3377                           ;main.c: 396: zone3Activate();
  3378  07A7  120A  118A  2370  120A  118A  	fcall	_zone3Activate
  3379                           
  3380                           ;main.c: 397: zone3On = 1;
  3381  07AC  3001               	movlw	1
  3382  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3383  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3384  07AF  00B0               	movwf	_zone3On
  3385  07B0  3000               	movlw	0
  3386  07B1  00B1               	movwf	_zone3On+1
  3387  07B2                     l2114:	
  3388                           
  3389                           ;main.c: 398: }
  3390                           ;main.c: 399: if (zone3On == 1) {
  3391  07B2  0330               	decf	_zone3On,w
  3392  07B3  0431               	iorwf	_zone3On+1,w
  3393  07B4  1D03               	btfss	3,2
  3394  07B5  0008               	return
  3395                           
  3396                           ;main.c: 400: zone3Deactivate();
  3397  07B6  120A  118A  239F   	fcall	_zone3Deactivate
  3398                           
  3399                           ;main.c: 401: zone3On = 0;
  3400  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3401  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3402  07BB  01B0               	clrf	_zone3On
  3403  07BC  01B1               	clrf	_zone3On+1
  3404  07BD  0008               	return
  3405  07BE                     __end_of_activateZones:	
  3406                           
  3407                           	psect	text20
  3408  039F                     __ptext20:	
  3409 ;; *************** function _zone3Deactivate *****************
  3410 ;; Defined at:
  3411 ;;		line 186 in file "main.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  message        11    0[BANK0 ] unsigned char [11]
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3425 ;;      Params:         0       0       0       0       0
  3426 ;;      Locals:         0      11       0       0       0
  3427 ;;      Temps:          4       0       0       0       0
  3428 ;;      Totals:         4      11       0       0       0
  3429 ;;Total ram usage:       15 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    3
  3432 ;; This function calls:
  3433 ;;		_LCDdelay2
  3434 ;;		_clearDisplay
  3435 ;;		_resetCursor
  3436 ;;		_writeMessage
  3437 ;; This function is called by:
  3438 ;;		_activateZones
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           
  3443                           ;psect for function _zone3Deactivate
  3444  039F                     _zone3Deactivate:	
  3445                           
  3446                           ;main.c: 187: clearDisplay ();
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _zone3Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3450  039F  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3451                           
  3452                           ;main.c: 188: resetCursor ();
  3453  03A4  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3454                           
  3455                           ;main.c: 189: char message[] = "Zone 3 Off";
  3456  03A9  3057               	movlw	zone3Deactivate@message& (0+255)
  3457  03AA  0084               	movwf	4
  3458  03AB  30A8               	movlw	low zone3Deactivate@F1198
  3459  03AC  00F7               	movwf	??_zone3Deactivate
  3460  03AD  0804               	movf	4,w
  3461  03AE  00F8               	movwf	??_zone3Deactivate+1
  3462  03AF  300B               	movlw	11
  3463  03B0  00F9               	movwf	??_zone3Deactivate+2
  3464  03B1                     u1480:	
  3465  03B1  0877               	movf	??_zone3Deactivate,w
  3466  03B2  0084               	movwf	4
  3467  03B3  1783               	bsf	3,7	;select IRP bank3
  3468  03B4  0800               	movf	0,w
  3469  03B5  00FA               	movwf	??_zone3Deactivate+3
  3470  03B6  0AF7               	incf	??_zone3Deactivate,f
  3471  03B7  0878               	movf	??_zone3Deactivate+1,w
  3472  03B8  0084               	movwf	4
  3473  03B9  1383               	bcf	3,7	;select IRP bank0
  3474  03BA  087A               	movf	??_zone3Deactivate+3,w
  3475  03BB  0080               	movwf	0
  3476  03BC  0AF8               	incf	??_zone3Deactivate+1,f
  3477  03BD  0BF9               	decfsz	??_zone3Deactivate+2,f
  3478  03BE  2BB1               	goto	u1480
  3479                           
  3480                           ;main.c: 190: writeMessage(message);
  3481  03BF  3057               	movlw	(low (zone3Deactivate@message| 0))& (0+255)
  3482  03C0  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3483                           
  3484                           ;main.c: 191: LCDdelay2 ();
  3485  03C5  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3486                           
  3487                           ;main.c: 192: LCDdelay2 ();
  3488  03CA  120A  118A  2035   	fcall	_LCDdelay2
  3489  03CD  0008               	return
  3490  03CE                     __end_of_zone3Deactivate:	
  3491                           
  3492                           	psect	text21
  3493  0370                     __ptext21:	
  3494 ;; *************** function _zone3Activate *****************
  3495 ;; Defined at:
  3496 ;;		line 154 in file "main.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  message        10    0[BANK0 ] unsigned char [10]
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         0      10       0       0       0
  3512 ;;      Temps:          4       0       0       0       0
  3513 ;;      Totals:         4      10       0       0       0
  3514 ;;Total ram usage:       14 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    3
  3517 ;; This function calls:
  3518 ;;		_LCDdelay2
  3519 ;;		_clearDisplay
  3520 ;;		_resetCursor
  3521 ;;		_writeMessage
  3522 ;; This function is called by:
  3523 ;;		_activateZones
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _zone3Activate
  3529  0370                     _zone3Activate:	
  3530                           
  3531                           ;main.c: 155: clearDisplay ();
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _zone3Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3535  0370  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3536                           
  3537                           ;main.c: 156: resetCursor ();
  3538  0375  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3539                           
  3540                           ;main.c: 157: char message[] = "Zone 3 On";
  3541  037A  3057               	movlw	zone3Activate@message& (0+255)
  3542  037B  0084               	movwf	4
  3543  037C  30C9               	movlw	low zone3Activate@F1186
  3544  037D  00F7               	movwf	??_zone3Activate
  3545  037E  0804               	movf	4,w
  3546  037F  00F8               	movwf	??_zone3Activate+1
  3547  0380  300A               	movlw	10
  3548  0381  00F9               	movwf	??_zone3Activate+2
  3549  0382                     u1440:	
  3550  0382  0877               	movf	??_zone3Activate,w
  3551  0383  0084               	movwf	4
  3552  0384  1783               	bsf	3,7	;select IRP bank3
  3553  0385  0800               	movf	0,w
  3554  0386  00FA               	movwf	??_zone3Activate+3
  3555  0387  0AF7               	incf	??_zone3Activate,f
  3556  0388  0878               	movf	??_zone3Activate+1,w
  3557  0389  0084               	movwf	4
  3558  038A  1383               	bcf	3,7	;select IRP bank0
  3559  038B  087A               	movf	??_zone3Activate+3,w
  3560  038C  0080               	movwf	0
  3561  038D  0AF8               	incf	??_zone3Activate+1,f
  3562  038E  0BF9               	decfsz	??_zone3Activate+2,f
  3563  038F  2B82               	goto	u1440
  3564                           
  3565                           ;main.c: 158: writeMessage(message);
  3566  0390  3057               	movlw	(low (zone3Activate@message| 0))& (0+255)
  3567  0391  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3568                           
  3569                           ;main.c: 159: LCDdelay2 ();
  3570  0396  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3571                           
  3572                           ;main.c: 160: LCDdelay2 ();
  3573  039B  120A  118A  2035   	fcall	_LCDdelay2
  3574  039E  0008               	return
  3575  039F                     __end_of_zone3Activate:	
  3576                           
  3577                           	psect	text22
  3578  0341                     __ptext22:	
  3579 ;; *************** function _zone2Deactivate *****************
  3580 ;; Defined at:
  3581 ;;		line 178 in file "main.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  message        11    0[BANK0 ] unsigned char [11]
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0       0       0       0       0
  3596 ;;      Locals:         0      11       0       0       0
  3597 ;;      Temps:          4       0       0       0       0
  3598 ;;      Totals:         4      11       0       0       0
  3599 ;;Total ram usage:       15 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    3
  3602 ;; This function calls:
  3603 ;;		_LCDdelay2
  3604 ;;		_clearDisplay
  3605 ;;		_resetCursor
  3606 ;;		_writeMessage
  3607 ;; This function is called by:
  3608 ;;		_activateZones
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _zone2Deactivate
  3614  0341                     _zone2Deactivate:	
  3615                           
  3616                           ;main.c: 179: clearDisplay ();
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in _zone2Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3620  0341  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3621                           
  3622                           ;main.c: 180: resetCursor ();
  3623  0346  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3624                           
  3625                           ;main.c: 181: char message[] = "Zone 2 Off";
  3626  034B  3057               	movlw	zone2Deactivate@message& (0+255)
  3627  034C  0084               	movwf	4
  3628  034D  30B3               	movlw	low zone2Deactivate@F1195
  3629  034E  00F7               	movwf	??_zone2Deactivate
  3630  034F  0804               	movf	4,w
  3631  0350  00F8               	movwf	??_zone2Deactivate+1
  3632  0351  300B               	movlw	11
  3633  0352  00F9               	movwf	??_zone2Deactivate+2
  3634  0353                     u1470:	
  3635  0353  0877               	movf	??_zone2Deactivate,w
  3636  0354  0084               	movwf	4
  3637  0355  1783               	bsf	3,7	;select IRP bank3
  3638  0356  0800               	movf	0,w
  3639  0357  00FA               	movwf	??_zone2Deactivate+3
  3640  0358  0AF7               	incf	??_zone2Deactivate,f
  3641  0359  0878               	movf	??_zone2Deactivate+1,w
  3642  035A  0084               	movwf	4
  3643  035B  1383               	bcf	3,7	;select IRP bank0
  3644  035C  087A               	movf	??_zone2Deactivate+3,w
  3645  035D  0080               	movwf	0
  3646  035E  0AF8               	incf	??_zone2Deactivate+1,f
  3647  035F  0BF9               	decfsz	??_zone2Deactivate+2,f
  3648  0360  2B53               	goto	u1470
  3649                           
  3650                           ;main.c: 182: writeMessage(message);
  3651  0361  3057               	movlw	(low (zone2Deactivate@message| 0))& (0+255)
  3652  0362  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3653                           
  3654                           ;main.c: 183: LCDdelay2 ();
  3655  0367  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3656                           
  3657                           ;main.c: 184: LCDdelay2 ();
  3658  036C  120A  118A  2035   	fcall	_LCDdelay2
  3659  036F  0008               	return
  3660  0370                     __end_of_zone2Deactivate:	
  3661                           
  3662                           	psect	text23
  3663  0312                     __ptext23:	
  3664 ;; *************** function _zone2Activate *****************
  3665 ;; Defined at:
  3666 ;;		line 146 in file "main.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  message        10    0[BANK0 ] unsigned char [10]
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       0       0       0       0
  3681 ;;      Locals:         0      10       0       0       0
  3682 ;;      Temps:          4       0       0       0       0
  3683 ;;      Totals:         4      10       0       0       0
  3684 ;;Total ram usage:       14 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    3
  3687 ;; This function calls:
  3688 ;;		_LCDdelay2
  3689 ;;		_clearDisplay
  3690 ;;		_resetCursor
  3691 ;;		_writeMessage
  3692 ;; This function is called by:
  3693 ;;		_activateZones
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _zone2Activate
  3699  0312                     _zone2Activate:	
  3700                           
  3701                           ;main.c: 147: clearDisplay ();
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _zone2Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3705  0312  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3706                           
  3707                           ;main.c: 148: resetCursor ();
  3708  0317  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3709                           
  3710                           ;main.c: 149: char message[] = "Zone 2 On";
  3711  031C  3057               	movlw	zone2Activate@message& (0+255)
  3712  031D  0084               	movwf	4
  3713  031E  30D3               	movlw	low zone2Activate@F1183
  3714  031F  00F7               	movwf	??_zone2Activate
  3715  0320  0804               	movf	4,w
  3716  0321  00F8               	movwf	??_zone2Activate+1
  3717  0322  300A               	movlw	10
  3718  0323  00F9               	movwf	??_zone2Activate+2
  3719  0324                     u1430:	
  3720  0324  0877               	movf	??_zone2Activate,w
  3721  0325  0084               	movwf	4
  3722  0326  1783               	bsf	3,7	;select IRP bank3
  3723  0327  0800               	movf	0,w
  3724  0328  00FA               	movwf	??_zone2Activate+3
  3725  0329  0AF7               	incf	??_zone2Activate,f
  3726  032A  0878               	movf	??_zone2Activate+1,w
  3727  032B  0084               	movwf	4
  3728  032C  1383               	bcf	3,7	;select IRP bank0
  3729  032D  087A               	movf	??_zone2Activate+3,w
  3730  032E  0080               	movwf	0
  3731  032F  0AF8               	incf	??_zone2Activate+1,f
  3732  0330  0BF9               	decfsz	??_zone2Activate+2,f
  3733  0331  2B24               	goto	u1430
  3734                           
  3735                           ;main.c: 150: writeMessage(message);
  3736  0332  3057               	movlw	(low (zone2Activate@message| 0))& (0+255)
  3737  0333  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3738                           
  3739                           ;main.c: 151: LCDdelay2 ();
  3740  0338  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3741                           
  3742                           ;main.c: 152: LCDdelay2 ();
  3743  033D  120A  118A  2035   	fcall	_LCDdelay2
  3744  0340  0008               	return
  3745  0341                     __end_of_zone2Activate:	
  3746                           
  3747                           	psect	text24
  3748  02E3                     __ptext24:	
  3749 ;; *************** function _zone1Deactivate *****************
  3750 ;; Defined at:
  3751 ;;		line 170 in file "main.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  message        11    0[BANK0 ] unsigned char [11]
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       0       0       0       0
  3766 ;;      Locals:         0      11       0       0       0
  3767 ;;      Temps:          4       0       0       0       0
  3768 ;;      Totals:         4      11       0       0       0
  3769 ;;Total ram usage:       15 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    3
  3772 ;; This function calls:
  3773 ;;		_LCDdelay2
  3774 ;;		_clearDisplay
  3775 ;;		_resetCursor
  3776 ;;		_writeMessage
  3777 ;; This function is called by:
  3778 ;;		_activateZones
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _zone1Deactivate
  3784  02E3                     _zone1Deactivate:	
  3785                           
  3786                           ;main.c: 171: clearDisplay ();
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _zone1Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3790  02E3  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3791                           
  3792                           ;main.c: 172: resetCursor ();
  3793  02E8  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3794                           
  3795                           ;main.c: 173: char message[] = "Zone 1 Off";
  3796  02ED  3057               	movlw	zone1Deactivate@message& (0+255)
  3797  02EE  0084               	movwf	4
  3798  02EF  30BE               	movlw	low zone1Deactivate@F1192
  3799  02F0  00F7               	movwf	??_zone1Deactivate
  3800  02F1  0804               	movf	4,w
  3801  02F2  00F8               	movwf	??_zone1Deactivate+1
  3802  02F3  300B               	movlw	11
  3803  02F4  00F9               	movwf	??_zone1Deactivate+2
  3804  02F5                     u1460:	
  3805  02F5  0877               	movf	??_zone1Deactivate,w
  3806  02F6  0084               	movwf	4
  3807  02F7  1783               	bsf	3,7	;select IRP bank3
  3808  02F8  0800               	movf	0,w
  3809  02F9  00FA               	movwf	??_zone1Deactivate+3
  3810  02FA  0AF7               	incf	??_zone1Deactivate,f
  3811  02FB  0878               	movf	??_zone1Deactivate+1,w
  3812  02FC  0084               	movwf	4
  3813  02FD  1383               	bcf	3,7	;select IRP bank0
  3814  02FE  087A               	movf	??_zone1Deactivate+3,w
  3815  02FF  0080               	movwf	0
  3816  0300  0AF8               	incf	??_zone1Deactivate+1,f
  3817  0301  0BF9               	decfsz	??_zone1Deactivate+2,f
  3818  0302  2AF5               	goto	u1460
  3819                           
  3820                           ;main.c: 174: writeMessage(message);
  3821  0303  3057               	movlw	(low (zone1Deactivate@message| 0))& (0+255)
  3822  0304  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3823                           
  3824                           ;main.c: 175: LCDdelay2 ();
  3825  0309  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3826                           
  3827                           ;main.c: 176: LCDdelay2 ();
  3828  030E  120A  118A  2035   	fcall	_LCDdelay2
  3829  0311  0008               	return
  3830  0312                     __end_of_zone1Deactivate:	
  3831                           
  3832                           	psect	text25
  3833  02B4                     __ptext25:	
  3834 ;; *************** function _zone1Activate *****************
  3835 ;; Defined at:
  3836 ;;		line 138 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  message        10    0[BANK0 ] unsigned char [10]
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         0      10       0       0       0
  3852 ;;      Temps:          4       0       0       0       0
  3853 ;;      Totals:         4      10       0       0       0
  3854 ;;Total ram usage:       14 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    3
  3857 ;; This function calls:
  3858 ;;		_LCDdelay2
  3859 ;;		_clearDisplay
  3860 ;;		_resetCursor
  3861 ;;		_writeMessage
  3862 ;; This function is called by:
  3863 ;;		_activateZones
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _zone1Activate
  3869  02B4                     _zone1Activate:	
  3870                           
  3871                           ;main.c: 139: clearDisplay ();
  3872                           
  3873                           ;incstack = 0
  3874                           ; Regs used in _zone1Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3875  02B4  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3876                           
  3877                           ;main.c: 140: resetCursor ();
  3878  02B9  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3879                           
  3880                           ;main.c: 141: char message[] = "Zone 1 On";
  3881  02BE  3057               	movlw	zone1Activate@message& (0+255)
  3882  02BF  0084               	movwf	4
  3883  02C0  30DD               	movlw	low zone1Activate@F1180
  3884  02C1  00F7               	movwf	??_zone1Activate
  3885  02C2  0804               	movf	4,w
  3886  02C3  00F8               	movwf	??_zone1Activate+1
  3887  02C4  300A               	movlw	10
  3888  02C5  00F9               	movwf	??_zone1Activate+2
  3889  02C6                     u1420:	
  3890  02C6  0877               	movf	??_zone1Activate,w
  3891  02C7  0084               	movwf	4
  3892  02C8  1783               	bsf	3,7	;select IRP bank3
  3893  02C9  0800               	movf	0,w
  3894  02CA  00FA               	movwf	??_zone1Activate+3
  3895  02CB  0AF7               	incf	??_zone1Activate,f
  3896  02CC  0878               	movf	??_zone1Activate+1,w
  3897  02CD  0084               	movwf	4
  3898  02CE  1383               	bcf	3,7	;select IRP bank0
  3899  02CF  087A               	movf	??_zone1Activate+3,w
  3900  02D0  0080               	movwf	0
  3901  02D1  0AF8               	incf	??_zone1Activate+1,f
  3902  02D2  0BF9               	decfsz	??_zone1Activate+2,f
  3903  02D3  2AC6               	goto	u1420
  3904                           
  3905                           ;main.c: 142: writeMessage(message);
  3906  02D4  3057               	movlw	(low (zone1Activate@message| 0))& (0+255)
  3907  02D5  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3908                           
  3909                           ;main.c: 143: LCDdelay2 ();
  3910  02DA  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3911                           
  3912                           ;main.c: 144: LCDdelay2 ();
  3913  02DF  120A  118A  2035   	fcall	_LCDdelay2
  3914  02E2  0008               	return
  3915  02E3                     __end_of_zone1Activate:	
  3916                           
  3917                           	psect	text26
  3918  0285                     __ptext26:	
  3919 ;; *************** function _zone0Deactivate *****************
  3920 ;; Defined at:
  3921 ;;		line 162 in file "main.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  message        12    0[BANK0 ] unsigned char [12]
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       0       0       0
  3936 ;;      Locals:         0      12       0       0       0
  3937 ;;      Temps:          4       0       0       0       0
  3938 ;;      Totals:         4      12       0       0       0
  3939 ;;Total ram usage:       16 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    3
  3942 ;; This function calls:
  3943 ;;		_LCDdelay2
  3944 ;;		_clearDisplay
  3945 ;;		_resetCursor
  3946 ;;		_writeMessage
  3947 ;; This function is called by:
  3948 ;;		_activateZones
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function _zone0Deactivate
  3954  0285                     _zone0Deactivate:	
  3955                           
  3956                           ;main.c: 163: clearDisplay ();
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in _zone0Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3960  0285  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  3961                           
  3962                           ;main.c: 164: resetCursor ();
  3963  028A  120A  118A  2006  120A  118A  	fcall	_resetCursor
  3964                           
  3965                           ;main.c: 165: char message[] = " Zone 0 Off";
  3966  028F  3057               	movlw	zone0Deactivate@message& (0+255)
  3967  0290  0084               	movwf	4
  3968  0291  309C               	movlw	low zone0Deactivate@F1189
  3969  0292  00F7               	movwf	??_zone0Deactivate
  3970  0293  0804               	movf	4,w
  3971  0294  00F8               	movwf	??_zone0Deactivate+1
  3972  0295  300C               	movlw	12
  3973  0296  00F9               	movwf	??_zone0Deactivate+2
  3974  0297                     u1450:	
  3975  0297  0877               	movf	??_zone0Deactivate,w
  3976  0298  0084               	movwf	4
  3977  0299  1783               	bsf	3,7	;select IRP bank3
  3978  029A  0800               	movf	0,w
  3979  029B  00FA               	movwf	??_zone0Deactivate+3
  3980  029C  0AF7               	incf	??_zone0Deactivate,f
  3981  029D  0878               	movf	??_zone0Deactivate+1,w
  3982  029E  0084               	movwf	4
  3983  029F  1383               	bcf	3,7	;select IRP bank0
  3984  02A0  087A               	movf	??_zone0Deactivate+3,w
  3985  02A1  0080               	movwf	0
  3986  02A2  0AF8               	incf	??_zone0Deactivate+1,f
  3987  02A3  0BF9               	decfsz	??_zone0Deactivate+2,f
  3988  02A4  2A97               	goto	u1450
  3989                           
  3990                           ;main.c: 166: writeMessage(message);
  3991  02A5  3057               	movlw	(low (zone0Deactivate@message| 0))& (0+255)
  3992  02A6  120A  118A  2099  120A  118A  	fcall	_writeMessage
  3993                           
  3994                           ;main.c: 167: LCDdelay2 ();
  3995  02AB  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  3996                           
  3997                           ;main.c: 168: LCDdelay2 ();
  3998  02B0  120A  118A  2035   	fcall	_LCDdelay2
  3999  02B3  0008               	return
  4000  02B4                     __end_of_zone0Deactivate:	
  4001                           
  4002                           	psect	text27
  4003  0143                     __ptext27:	
  4004 ;; *************** function _zone0Activate *****************
  4005 ;; Defined at:
  4006 ;;		line 130 in file "main.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  message        10    0[BANK0 ] unsigned char [10]
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         0       0       0       0       0
  4021 ;;      Locals:         0      10       0       0       0
  4022 ;;      Temps:          4       0       0       0       0
  4023 ;;      Totals:         4      10       0       0       0
  4024 ;;Total ram usage:       14 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    3
  4027 ;; This function calls:
  4028 ;;		_LCDdelay2
  4029 ;;		_clearDisplay
  4030 ;;		_resetCursor
  4031 ;;		_writeMessage
  4032 ;; This function is called by:
  4033 ;;		_activateZones
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _zone0Activate
  4039  0143                     _zone0Activate:	
  4040                           
  4041                           ;main.c: 131: clearDisplay ();
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _zone0Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4045  0143  120A  158A  27FB  120A  118A  	fcall	_clearDisplay
  4046                           
  4047                           ;main.c: 132: resetCursor ();
  4048  0148  120A  118A  2006  120A  118A  	fcall	_resetCursor
  4049                           
  4050                           ;main.c: 133: char message[] = "Zone 0 On";
  4051  014D  3057               	movlw	zone0Activate@message& (0+255)
  4052  014E  0084               	movwf	4
  4053  014F  30A0               	movlw	low zone0Activate@F1177
  4054  0150  00F7               	movwf	??_zone0Activate
  4055  0151  0804               	movf	4,w
  4056  0152  00F8               	movwf	??_zone0Activate+1
  4057  0153  300A               	movlw	10
  4058  0154  00F9               	movwf	??_zone0Activate+2
  4059  0155                     u1410:	
  4060  0155  0877               	movf	??_zone0Activate,w
  4061  0156  0084               	movwf	4
  4062  0157  1383               	bcf	3,7	;select IRP bank1
  4063  0158  0800               	movf	0,w
  4064  0159  00FA               	movwf	??_zone0Activate+3
  4065  015A  0AF7               	incf	??_zone0Activate,f
  4066  015B  0878               	movf	??_zone0Activate+1,w
  4067  015C  0084               	movwf	4
  4068  015D  087A               	movf	??_zone0Activate+3,w
  4069  015E  0080               	movwf	0
  4070  015F  0AF8               	incf	??_zone0Activate+1,f
  4071  0160  0BF9               	decfsz	??_zone0Activate+2,f
  4072  0161  2955               	goto	u1410
  4073                           
  4074                           ;main.c: 134: writeMessage(message);
  4075  0162  3057               	movlw	(low (zone0Activate@message| 0))& (0+255)
  4076  0163  120A  118A  2099  120A  118A  	fcall	_writeMessage
  4077                           
  4078                           ;main.c: 135: LCDdelay2 ();
  4079  0168  120A  118A  2035  120A  118A  	fcall	_LCDdelay2
  4080                           
  4081                           ;main.c: 136: LCDdelay2 ();
  4082  016D  120A  118A  2035   	fcall	_LCDdelay2
  4083  0170  0008               	return
  4084  0171                     __end_of_zone0Activate:	
  4085                           
  4086                           	psect	text28
  4087  0099                     __ptext28:	
  4088 ;; *************** function _writeMessage *****************
  4089 ;; Defined at:
  4090 ;;		line 42 in file "LCD.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  message         1    wreg     PTR unsigned char 
  4093 ;;		 -> checkZoneMessage@messagerow(13), checkMessage@messagerow(17), modeSelect@messagecol(12), modeSelect@messagerow(9
      +), 
  4094 ;;		 -> ButtonGrid@messagecol(6), ButtonGrid@messagerow(6), zone3Deactivate@message(11), zone2Deactivate@message(11), 
  4095 ;;		 -> zone1Deactivate@message(11), zone0Deactivate@message(12), zone3Activate@message(10), zone2Activate@message(10), 
  4096 ;;		 -> zone1Activate@message(10), zone0Activate@message(10), alarmOff@message(10), alarmOn@message(9), 
  4097 ;;		 -> currentTemp@message2(13), currentTemp@message1(7), zone3Alert@message(13), zone2Alert@message(13), 
  4098 ;;		 -> zone1Alert@message(13), zone0Alert@message(13), zone3OK@message(10), zone2OK@message(10), 
  4099 ;;		 -> zone1OK@message(10), zone0OK@message(10), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  message         1    6[COMMON] PTR unsigned char 
  4102 ;;		 -> checkZoneMessage@messagerow(13), checkMessage@messagerow(17), modeSelect@messagecol(12), modeSelect@messagerow(9
      +), 
  4103 ;;		 -> ButtonGrid@messagecol(6), ButtonGrid@messagerow(6), zone3Deactivate@message(11), zone2Deactivate@message(11), 
  4104 ;;		 -> zone1Deactivate@message(11), zone0Deactivate@message(12), zone3Activate@message(10), zone2Activate@message(10), 
  4105 ;;		 -> zone1Activate@message(10), zone0Activate@message(10), alarmOff@message(10), alarmOn@message(9), 
  4106 ;;		 -> currentTemp@message2(13), currentTemp@message1(7), zone3Alert@message(13), zone2Alert@message(13), 
  4107 ;;		 -> zone1Alert@message(13), zone0Alert@message(13), zone3OK@message(10), zone2OK@message(10), 
  4108 ;;		 -> zone1OK@message(10), zone0OK@message(10), 
  4109 ;;  i               2    4[COMMON] int 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4119 ;;      Params:         0       0       0       0       0
  4120 ;;      Locals:         3       0       0       0       0
  4121 ;;      Temps:          1       0       0       0       0
  4122 ;;      Totals:         4       0       0       0       0
  4123 ;;Total ram usage:        4 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    2
  4126 ;; This function calls:
  4127 ;;		_writeChar
  4128 ;; This function is called by:
  4129 ;;		_zone0OK
  4130 ;;		_zone1OK
  4131 ;;		_zone2OK
  4132 ;;		_zone3OK
  4133 ;;		_zone0Alert
  4134 ;;		_zone1Alert
  4135 ;;		_zone2Alert
  4136 ;;		_zone3Alert
  4137 ;;		_alarmOn
  4138 ;;		_alarmOff
  4139 ;;		_zone0Activate
  4140 ;;		_zone1Activate
  4141 ;;		_zone2Activate
  4142 ;;		_zone3Activate
  4143 ;;		_zone0Deactivate
  4144 ;;		_zone1Deactivate
  4145 ;;		_zone2Deactivate
  4146 ;;		_zone3Deactivate
  4147 ;;		_writeMessageline1
  4148 ;;		_writeMessageline2
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _writeMessage
  4154  0099                     _writeMessage:	
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _writeMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4158                           ;writeMessage@message stored from wreg
  4159  0099  00F6               	movwf	writeMessage@message
  4160                           
  4161                           ;LCD.c: 43: for (int i = 0; message[i] != '\0'; i++){
  4162  009A  01F4               	clrf	writeMessage@i
  4163  009B  01F5               	clrf	writeMessage@i+1
  4164  009C                     l1602:	
  4165  009C  0874               	movf	writeMessage@i,w
  4166  009D  0776               	addwf	writeMessage@message,w
  4167  009E  00F3               	movwf	??_writeMessage
  4168  009F  0873               	movf	??_writeMessage,w
  4169  00A0  0084               	movwf	4
  4170  00A1  1383               	bcf	3,7	;select IRP bank0
  4171  00A2  0800               	movf	0,w
  4172  00A3  1903               	btfsc	3,2
  4173  00A4  0008               	return
  4174                           
  4175                           ;LCD.c: 44: writeChar (message[i]);
  4176  00A5  0874               	movf	writeMessage@i,w
  4177  00A6  0776               	addwf	writeMessage@message,w
  4178  00A7  00F3               	movwf	??_writeMessage
  4179  00A8  0873               	movf	??_writeMessage,w
  4180  00A9  0084               	movwf	4
  4181  00AA  1383               	bcf	3,7	;select IRP bank0
  4182  00AB  0800               	movf	0,w
  4183  00AC  120A  118A  20FA  120A  118A  	fcall	_writeChar
  4184  00B1  3001               	movlw	1
  4185  00B2  07F4               	addwf	writeMessage@i,f
  4186  00B3  1803               	skipnc
  4187  00B4  0AF5               	incf	writeMessage@i+1,f
  4188  00B5  3000               	movlw	0
  4189  00B6  07F5               	addwf	writeMessage@i+1,f
  4190  00B7  289C               	goto	l1602
  4191  00B8                     __end_of_writeMessage:	
  4192                           
  4193                           	psect	text29
  4194  00FA                     __ptext29:	
  4195 ;; *************** function _writeChar *****************
  4196 ;; Defined at:
  4197 ;;		line 27 in file "LCD.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  var             1    wreg     unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  var             1    2[COMMON] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, pclath, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4211 ;;      Params:         0       0       0       0       0
  4212 ;;      Locals:         1       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0
  4214 ;;      Totals:         1       0       0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    1
  4218 ;; This function calls:
  4219 ;;		_LCDdelay
  4220 ;; This function is called by:
  4221 ;;		_writeMessage
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           
  4226                           ;psect for function _writeChar
  4227  00FA                     _writeChar:	
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _writeChar: [wreg+status,2+status,0+pclath+cstack]
  4231                           ;writeChar@var stored from wreg
  4232  00FA  00F2               	movwf	writeChar@var
  4233                           
  4234                           ;LCD.c: 28: PORTA = 0;
  4235  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  4236  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  4237  00FD  0185               	clrf	5	;volatile
  4238                           
  4239                           ;LCD.c: 29: PORTD = 0;
  4240  00FE  0188               	clrf	8	;volatile
  4241                           
  4242                           ;LCD.c: 30: RA1 = 1;
  4243  00FF  1485               	bsf	5,1	;volatile
  4244                           
  4245                           ;LCD.c: 31: RA2 = 0;
  4246  0100  1105               	bcf	5,2	;volatile
  4247                           
  4248                           ;LCD.c: 32: LCDdelay ();
  4249  0101  120A  118A  2025  120A  118A  	fcall	_LCDdelay
  4250                           
  4251                           ;LCD.c: 33: RA3 = 1;
  4252  0106  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0107  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0108  1585               	bsf	5,3	;volatile
  4255                           
  4256                           ;LCD.c: 34: LCDdelay ();
  4257  0109  120A  118A  2025  120A  118A  	fcall	_LCDdelay
  4258                           
  4259                           ;LCD.c: 35: PORTD = var;
  4260  010E  0872               	movf	writeChar@var,w
  4261  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0111  0088               	movwf	8	;volatile
  4264                           
  4265                           ;LCD.c: 36: LCDdelay ();
  4266  0112  120A  118A  2025  120A  118A  	fcall	_LCDdelay
  4267                           
  4268                           ;LCD.c: 37: RA3 = 0;
  4269  0117  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0118  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0119  1185               	bcf	5,3	;volatile
  4272                           
  4273                           ;LCD.c: 38: LCDdelay ();
  4274  011A  120A  118A  2025   	fcall	_LCDdelay
  4275  011D  0008               	return
  4276  011E                     __end_of_writeChar:	
  4277                           
  4278                           	psect	text30
  4279  0006                     __ptext30:	
  4280 ;; *************** function _resetCursor *****************
  4281 ;; Defined at:
  4282 ;;		line 83 in file "LCD.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    2
  4303 ;; This function calls:
  4304 ;;		_writeCmd
  4305 ;; This function is called by:
  4306 ;;		_zone0OK
  4307 ;;		_zone1OK
  4308 ;;		_zone2OK
  4309 ;;		_zone3OK
  4310 ;;		_zone0Alert
  4311 ;;		_zone1Alert
  4312 ;;		_zone2Alert
  4313 ;;		_zone3Alert
  4314 ;;		_alarmOn
  4315 ;;		_alarmOff
  4316 ;;		_zone0Activate
  4317 ;;		_zone1Activate
  4318 ;;		_zone2Activate
  4319 ;;		_zone3Activate
  4320 ;;		_zone0Deactivate
  4321 ;;		_zone1Deactivate
  4322 ;;		_zone2Deactivate
  4323 ;;		_zone3Deactivate
  4324 ;;		_modeSelect
  4325 ;;		_checkZoneMessage
  4326 ;;		_currentTemp
  4327 ;;		_ButtonGrid
  4328 ;;		_checkMessage
  4329 ;;		_Return
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _resetCursor
  4335  0006                     _resetCursor:	
  4336                           
  4337                           ;LCD.c: 84: writeCmd(0x02);
  4338                           
  4339                           ;incstack = 0
  4340                           ; Regs used in _resetCursor: [wreg+status,2+status,0+pclath+cstack]
  4341  0006  3002               	movlw	2
  4342  0007  120A  118A  20D8   	fcall	_writeCmd
  4343  000A  0008               	return
  4344  000B                     __end_of_resetCursor:	
  4345                           
  4346                           	psect	text31
  4347  0FFB                     __ptext31:	
  4348 ;; *************** function _clearDisplay *****************
  4349 ;; Defined at:
  4350 ;;		line 90 in file "LCD.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    2
  4371 ;; This function calls:
  4372 ;;		_writeCmd
  4373 ;; This function is called by:
  4374 ;;		_zone0OK
  4375 ;;		_zone1OK
  4376 ;;		_zone2OK
  4377 ;;		_zone3OK
  4378 ;;		_zone0Alert
  4379 ;;		_zone1Alert
  4380 ;;		_zone2Alert
  4381 ;;		_zone3Alert
  4382 ;;		_alarmOn
  4383 ;;		_alarmOff
  4384 ;;		_zone0Activate
  4385 ;;		_zone1Activate
  4386 ;;		_zone2Activate
  4387 ;;		_zone3Activate
  4388 ;;		_zone0Deactivate
  4389 ;;		_zone1Deactivate
  4390 ;;		_zone2Deactivate
  4391 ;;		_zone3Deactivate
  4392 ;;		_checkZoneMessage
  4393 ;;		_currentTemp
  4394 ;;		_ButtonGrid
  4395 ;;		_checkMessage
  4396 ;;		_Return
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _clearDisplay
  4402  0FFB                     _clearDisplay:	
  4403                           
  4404                           ;LCD.c: 91: writeCmd(0x01);
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4408  0FFB  3001               	movlw	1
  4409  0FFC  120A  118A  20D8   	fcall	_writeCmd
  4410  0FFF  0008               	return
  4411  1000                     __end_of_clearDisplay:	
  4412                           
  4413                           	psect	text32
  4414  0035                     __ptext32:	
  4415 ;; *************** function _LCDdelay2 *****************
  4416 ;; Defined at:
  4417 ;;		line 18 in file "LCD.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  i               2    0[COMMON] unsigned int 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         2       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0
  4434 ;;      Totals:         2       0       0       0       0
  4435 ;;Total ram usage:        2 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_zone0OK
  4441 ;;		_zone1OK
  4442 ;;		_zone2OK
  4443 ;;		_zone3OK
  4444 ;;		_zone0Alert
  4445 ;;		_zone1Alert
  4446 ;;		_zone2Alert
  4447 ;;		_zone3Alert
  4448 ;;		_alarmOn
  4449 ;;		_alarmOff
  4450 ;;		_zone0Activate
  4451 ;;		_zone1Activate
  4452 ;;		_zone2Activate
  4453 ;;		_zone3Activate
  4454 ;;		_zone0Deactivate
  4455 ;;		_zone1Deactivate
  4456 ;;		_zone2Deactivate
  4457 ;;		_zone3Deactivate
  4458 ;;		_alarmOnOff
  4459 ;;		_currentTemp
  4460 ;;		_activateButtonCheck
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _LCDdelay2
  4466  0035                     _LCDdelay2:	
  4467                           
  4468                           ;LCD.c: 19: for (unsigned i=0; i<50000; i++);
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _LCDdelay2: [wreg+status,2]
  4472  0035  01F0               	clrf	LCDdelay2@i
  4473  0036  01F1               	clrf	LCDdelay2@i+1
  4474  0037                     L10:	
  4475  0037  30C3               	movlw	195
  4476  0038  0271               	subwf	LCDdelay2@i+1,w
  4477  0039  3050               	movlw	80
  4478  003A  1903               	skipnz
  4479  003B  0270               	subwf	LCDdelay2@i,w
  4480  003C  1803               	btfsc	3,0
  4481  003D  0008               	return
  4482  003E  3001               	movlw	1
  4483  003F  07F0               	addwf	LCDdelay2@i,f
  4484  0040  1803               	skipnc
  4485  0041  0AF1               	incf	LCDdelay2@i+1,f
  4486  0042  3000               	movlw	0
  4487  0043  07F1               	addwf	LCDdelay2@i+1,f
  4488  0044  2837               	goto	L10
  4489  0045                     __end_of_LCDdelay2:	
  4490                           
  4491                           	psect	text33
  4492  006B                     __ptext33:	
  4493 ;; *************** function _LCDsetup *****************
  4494 ;; Defined at:
  4495 ;;		line 4 in file "LCD.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0
  4512 ;;      Totals:         0       0       0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    3
  4516 ;; This function calls:
  4517 ;;		_displayOn
  4518 ;;		_turnon2linemode
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;;		_ButtonGrid
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           
  4526                           ;psect for function _LCDsetup
  4527  006B                     _LCDsetup:	
  4528                           
  4529                           ;LCD.c: 5: ADCON1 = 0x06;
  4530                           
  4531                           ;incstack = 0
  4532                           ; Regs used in _LCDsetup: [wreg+status,2+status,0+pclath+cstack]
  4533  006B  3006               	movlw	6
  4534  006C  1683               	bsf	3,5	;RP0=1, select bank1
  4535  006D  1303               	bcf	3,6	;RP1=0, select bank1
  4536  006E  009F               	movwf	31	;volatile
  4537                           
  4538                           ;LCD.c: 6: TRISA = 0x00;
  4539  006F  0185               	clrf	5	;volatile
  4540                           
  4541                           ;LCD.c: 7: PORTA = 0x00;
  4542  0070  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0071  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0072  0185               	clrf	5	;volatile
  4545                           
  4546                           ;LCD.c: 8: TRISD = 0x00;
  4547  0073  1683               	bsf	3,5	;RP0=1, select bank1
  4548  0074  1303               	bcf	3,6	;RP1=0, select bank1
  4549  0075  0188               	clrf	8	;volatile
  4550                           
  4551                           ;LCD.c: 9: PORTD = 0x00;
  4552  0076  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0077  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0078  0188               	clrf	8	;volatile
  4555                           
  4556                           ;LCD.c: 10: displayOn ();
  4557  0079  120A  158A  27F1  120A  118A  	fcall	_displayOn
  4558                           
  4559                           ;LCD.c: 11: turnon2linemode();
  4560  007E  120A  158A  27F6   	fcall	_turnon2linemode
  4561  0081  0008               	return
  4562  0082                     __end_of_LCDsetup:	
  4563                           
  4564                           	psect	text34
  4565  0FF6                     __ptext34:	
  4566 ;; *************** function _turnon2linemode *****************
  4567 ;; Defined at:
  4568 ;;		line 94 in file "LCD.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4582 ;;      Params:         0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    2
  4589 ;; This function calls:
  4590 ;;		_writeCmd
  4591 ;; This function is called by:
  4592 ;;		_LCDsetup
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _turnon2linemode
  4598  0FF6                     _turnon2linemode:	
  4599                           
  4600                           ;LCD.c: 95: writeCmd(0x38);
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _turnon2linemode: [wreg+status,2+status,0+pclath+cstack]
  4604  0FF6  3038               	movlw	56
  4605  0FF7  120A  118A  20D8   	fcall	_writeCmd
  4606  0FFA  0008               	return
  4607  0FFB                     __end_of_turnon2linemode:	
  4608                           
  4609                           	psect	text35
  4610  0FF1                     __ptext35:	
  4611 ;; *************** function _displayOn *****************
  4612 ;; Defined at:
  4613 ;;		line 86 in file "LCD.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    2
  4634 ;; This function calls:
  4635 ;;		_writeCmd
  4636 ;; This function is called by:
  4637 ;;		_LCDsetup
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function _displayOn
  4643  0FF1                     _displayOn:	
  4644                           
  4645                           ;LCD.c: 87: writeCmd(0x0F);
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in _displayOn: [wreg+status,2+status,0+pclath+cstack]
  4649  0FF1  300F               	movlw	15
  4650  0FF2  120A  118A  20D8   	fcall	_writeCmd
  4651  0FF5  0008               	return
  4652  0FF6                     __end_of_displayOn:	
  4653                           
  4654                           	psect	text36
  4655  00D8                     __ptext36:	
  4656 ;; *************** function _writeCmd *****************
  4657 ;; Defined at:
  4658 ;;		line 67 in file "LCD.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  cmd             1    wreg     unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  cmd             1    2[COMMON] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         0       0       0       0       0
  4673 ;;      Locals:         1       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0
  4675 ;;      Totals:         1       0       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    1
  4679 ;; This function calls:
  4680 ;;		_LCDdelay
  4681 ;; This function is called by:
  4682 ;;		_writeMessageline2
  4683 ;;		_resetCursor
  4684 ;;		_displayOn
  4685 ;;		_clearDisplay
  4686 ;;		_turnon2linemode
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _writeCmd
  4692  00D8                     _writeCmd:	
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _writeCmd: [wreg+status,2+status,0+pclath+cstack]
  4696                           ;writeCmd@cmd stored from wreg
  4697  00D8  00F2               	movwf	writeCmd@cmd
  4698                           
  4699                           ;LCD.c: 70: RA1 = 0;
  4700  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  4701  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  4702  00DB  1085               	bcf	5,1	;volatile
  4703                           
  4704                           ;LCD.c: 71: RA2 = 0;
  4705  00DC  1105               	bcf	5,2	;volatile
  4706                           
  4707                           ;LCD.c: 72: LCDdelay ();
  4708  00DD  120A  118A  2025  120A  118A  	fcall	_LCDdelay
  4709                           
  4710                           ;LCD.c: 73: RA3 = 1;
  4711  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4712  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4713  00E4  1585               	bsf	5,3	;volatile
  4714                           
  4715                           ;LCD.c: 74: LCDdelay ();
  4716  00E5  120A  118A  2025  120A  118A  	fcall	_LCDdelay
  4717                           
  4718                           ;LCD.c: 75: PORTD = cmd;
  4719  00EA  0872               	movf	writeCmd@cmd,w
  4720  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  4721  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  4722  00ED  0088               	movwf	8	;volatile
  4723                           
  4724                           ;LCD.c: 76: LCDdelay ();
  4725  00EE  120A  118A  2025  120A  118A  	fcall	_LCDdelay
  4726                           
  4727                           ;LCD.c: 77: RA3 = 0;
  4728  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  4729  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  4730  00F5  1185               	bcf	5,3	;volatile
  4731                           
  4732                           ;LCD.c: 78: LCDdelay ();
  4733  00F6  120A  118A  2025   	fcall	_LCDdelay
  4734  00F9  0008               	return
  4735  00FA                     __end_of_writeCmd:	
  4736                           
  4737                           	psect	text37
  4738  0025                     __ptext37:	
  4739 ;; *************** function _LCDdelay *****************
  4740 ;; Defined at:
  4741 ;;		line 14 in file "LCD.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  i               2    0[COMMON] unsigned int 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         0       0       0       0       0
  4756 ;;      Locals:         2       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0
  4758 ;;      Totals:         2       0       0       0       0
  4759 ;;Total ram usage:        2 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_writeChar
  4765 ;;		_writeCmd
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _LCDdelay
  4771  0025                     _LCDdelay:	
  4772                           
  4773                           ;LCD.c: 15: for (unsigned i=0; i<20; i++);
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _LCDdelay: [wreg+status,2]
  4777  0025  01F0               	clrf	LCDdelay@i
  4778  0026  01F1               	clrf	LCDdelay@i+1
  4779  0027                     L11:	
  4780  0027  3000               	movlw	0
  4781  0028  0271               	subwf	LCDdelay@i+1,w
  4782  0029  3014               	movlw	20
  4783  002A  1903               	skipnz
  4784  002B  0270               	subwf	LCDdelay@i,w
  4785  002C  1803               	btfsc	3,0
  4786  002D  0008               	return
  4787  002E  3001               	movlw	1
  4788  002F  07F0               	addwf	LCDdelay@i,f
  4789  0030  1803               	skipnc
  4790  0031  0AF1               	incf	LCDdelay@i+1,f
  4791  0032  3000               	movlw	0
  4792  0033  07F1               	addwf	LCDdelay@i+1,f
  4793  0034  2827               	goto	L11
  4794  0035                     __end_of_LCDdelay:	
  4795  007E                     btemp	set	126	;btemp
  4796  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        281
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     21      76
    BANK1            80      0      78
    BANK3            96      0      87
    BANK2            96      0      95

Pointer List with Targets:

    writeMessageline2@message	PTR unsigned char  size(1) Largest target is 13
		 -> modeSelect@messagecol(BANK0[12]), ButtonGrid@messagecol(COMMON[6]), currentTemp@message2(COMMON[13]), 

    writeMessageline1@message	PTR unsigned char  size(1) Largest target is 17
		 -> checkZoneMessage@messagerow(BANK0[13]), checkMessage@messagerow(BANK0[17]), modeSelect@messagerow(BANK0[9]), ButtonGrid@messagerow(COMMON[6]), 
		 -> currentTemp@message1(COMMON[7]), 

    writeMessage@message	PTR unsigned char  size(1) Largest target is 17
		 -> checkZoneMessage@messagerow(BANK0[13]), checkMessage@messagerow(BANK0[17]), modeSelect@messagecol(BANK0[12]), modeSelect@messagerow(BANK0[9]), 
		 -> ButtonGrid@messagecol(COMMON[6]), ButtonGrid@messagerow(COMMON[6]), zone3Deactivate@message(BANK0[11]), zone2Deactivate@message(BANK0[11]), 
		 -> zone1Deactivate@message(BANK0[11]), zone0Deactivate@message(BANK0[12]), zone3Activate@message(BANK0[10]), zone2Activate@message(BANK0[10]), 
		 -> zone1Activate@message(BANK0[10]), zone0Activate@message(BANK0[10]), alarmOff@message(BANK0[10]), alarmOn@message(BANK0[9]), 
		 -> currentTemp@message2(COMMON[13]), currentTemp@message1(COMMON[7]), zone3Alert@message(BANK0[13]), zone2Alert@message(BANK0[13]), 
		 -> zone1Alert@message(BANK0[13]), zone0Alert@message(BANK0[13]), zone3OK@message(BANK0[10]), zone2OK@message(BANK0[10]), 
		 -> zone1OK@message(BANK0[10]), zone0OK@message(BANK0[10]), 


Critical Paths under _main in COMMON

    _checkZones->_checkZoneMessage
    _zone3OK->_writeMessage
    _zone3Alert->_writeMessage
    _zone2OK->_writeMessage
    _zone2Alert->_writeMessage
    _zone1OK->_writeMessage
    _zone1Alert->_writeMessage
    _zone0OK->_writeMessage
    _zone0Alert->_writeMessage
    _checkZoneMessage->_writeMessageline1
    _alarmOnOff->_modeSelect
    _modeSelect->_writeMessageline1
    _modeSelect->_writeMessageline2
    _writeMessageline2->_writeMessage
    _writeMessageline1->_writeMessage
    _alarmOn->_writeMessage
    _alarmOff->_writeMessage
    _activateZones->_zone0Activate
    _activateZones->_zone0Deactivate
    _activateZones->_zone1Activate
    _activateZones->_zone1Deactivate
    _activateZones->_zone2Activate
    _activateZones->_zone2Deactivate
    _activateZones->_zone3Activate
    _activateZones->_zone3Deactivate
    _zone3Deactivate->_writeMessage
    _zone3Activate->_writeMessage
    _zone2Deactivate->_writeMessage
    _zone2Activate->_writeMessage
    _zone1Deactivate->_writeMessage
    _zone1Activate->_writeMessage
    _zone0Deactivate->_writeMessage
    _zone0Activate->_writeMessage
    _writeMessage->_writeChar
    _writeChar->_LCDdelay
    _resetCursor->_writeCmd
    _clearDisplay->_writeCmd
    _turnon2linemode->_writeCmd
    _displayOn->_writeCmd
    _writeCmd->_LCDdelay

Critical Paths under _main in BANK0

    _checkZones->_checkZoneMessage
    _checkZones->_zone0Alert
    _checkZones->_zone1Alert
    _checkZones->_zone2Alert
    _checkZones->_zone3Alert
    _alarmOnOff->_modeSelect
    _activateZones->_zone0Deactivate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19354
                           _LCDsetup
                      _activateZones
                         _alarmOnOff
                       _checkButtons
                         _checkZones
 ---------------------------------------------------------------------------------
 (1) _checkZones                                           0     0      0    8256
                   _checkZoneMessage
                         _zone0Alert
                            _zone0OK
                         _zone1Alert
                            _zone1OK
                         _zone2Alert
                            _zone2OK
                         _zone3Alert
                            _zone3OK
 ---------------------------------------------------------------------------------
 (2) _zone3OK                                             14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone3Alert                                          17    17      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2OK                                             14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Alert                                          17    17      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1OK                                             14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Alert                                          17    17      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0OK                                             14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Alert                                          17    17      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _checkZoneMessage                                    17    17      0    1016
                                              8 COMMON     4     4      0
                                              0 BANK0     13    13      0
                       _clearDisplay
                        _resetCursor
                  _writeMessageline1
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         1     1      0      24
                                              0 COMMON     1     1      0
                        _buttonsetup
 ---------------------------------------------------------------------------------
 (2) _buttonsetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _alarmOnOff                                           0     0      0    3698
                          _LCDdelay2
                           _alarmOff
                            _alarmOn
                         _modeSelect
 ---------------------------------------------------------------------------------
 (2) _modeSelect                                          25    25      0    1842
                                              8 COMMON     4     4      0
                                              0 BANK0     21    21      0
                        _resetCursor
                  _writeMessageline1
                  _writeMessageline2
 ---------------------------------------------------------------------------------
 (3) _writeMessageline2                                    1     1      0     869
                                              7 COMMON     1     1      0
                           _writeCmd
                       _writeMessage
 ---------------------------------------------------------------------------------
 (3) _writeMessageline1                                    1     1      0     855
                                              7 COMMON     1     1      0
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _alarmOn                                             13    13      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0      9     9      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _alarmOff                                            14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _activateZones                                        0     0      0    7240
                      _zone0Activate
                    _zone0Deactivate
                      _zone1Activate
                    _zone1Deactivate
                      _zone2Activate
                    _zone2Deactivate
                      _zone3Activate
                    _zone3Deactivate
 ---------------------------------------------------------------------------------
 (2) _zone3Deactivate                                     15    15      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     11    11      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone3Activate                                       14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Deactivate                                     15    15      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     11    11      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Activate                                       14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Deactivate                                     15    15      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     11    11      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Activate                                       14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Deactivate                                     16    16      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     12    12      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Activate                                       14    14      0     905
                                              7 COMMON     4     4      0
                                              0 BANK0     10    10      0
                          _LCDdelay2
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (3) _writeMessage                                         4     4      0     698
                                              3 COMMON     4     4      0
                          _writeChar
 ---------------------------------------------------------------------------------
 (4) _writeChar                                            1     1      0      68
                                              2 COMMON     1     1      0
                           _LCDdelay
 ---------------------------------------------------------------------------------
 (3) _resetCursor                                          0     0      0      68
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         0     0      0      68
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _LCDdelay2                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCDsetup                                             0     0      0     136
                          _displayOn
                    _turnon2linemode
 ---------------------------------------------------------------------------------
 (2) _turnon2linemode                                      0     0      0      68
                           _writeCmd
 ---------------------------------------------------------------------------------
 (2) _displayOn                                            0     0      0      68
                           _writeCmd
 ---------------------------------------------------------------------------------
 (4) _writeCmd                                             1     1      0      68
                                              2 COMMON     1     1      0
                           _LCDdelay
 ---------------------------------------------------------------------------------
 (5) _LCDdelay                                             2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDsetup
     _displayOn
       _writeCmd
         _LCDdelay
     _turnon2linemode
       _writeCmd
         _LCDdelay
   _activateZones
     _zone0Activate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone0Deactivate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Activate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Deactivate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Activate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Deactivate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Activate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Deactivate
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _alarmOnOff
     _LCDdelay2
     _alarmOff
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _alarmOn
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _modeSelect
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
       _writeMessageline2
         _writeCmd
           _LCDdelay
         _writeMessage
           _writeChar
             _LCDdelay
   _checkButtons
     _buttonsetup
   _checkZones
     _checkZoneMessage
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
     _zone0Alert
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone0OK
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Alert
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1OK
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Alert
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2OK
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Alert
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3OK
       _LCDdelay2
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      57       9       90.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      5F      11       99.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     15E      12        0.0%
ABS                  0      0     15E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jan 07 18:01:13 2018

      __end_of_checkButtons 0680        zone2Deactivate@F1195 01B3                           pc 0002  
                        fsr 0004                         l400 0639                         l410 0661  
                       l403 0649                         l412 0665                         l405 064D  
                       l414 0669                         l407 0651                         l417 067C  
                       l279 00D5                         l396 0631                         l398 0635  
                       _RA1 0029                         _RA2 002A                         _RA3 002B  
                       _RC0 0038                         _RC1 0039                         _RC2 003A  
                       _RC3 003B                         _RC4 003C                         _RC5 003D  
                       _RC6 003E                         _RC7 003F            currentTemp@F1166 0042  
          currentTemp@F1168 012E                         _col 0040           zone3Alert@message 0057  
                       fsr0 0004                         _row 003E                         indf 0000  
              __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000                        l2020 06CB  
                      l2012 06B6                        l2104 0799                        l2032 06EB  
                      l2024 06D6                        l2008 06AB                        l2114 07B2  
                      l2044 070B                        l2036 06F6                        l2072 074D  
                      l1602 009C                        l2082 0766                        l2066 0740  
                      l2088 0773                        l2098 078C                        l1910 062B  
                      l1902 0617                        l1906 0621                        l1924 0643  
                      l1960 067E                        l1952 0673                        l1938 065B  
                      l1982 04A9                        l1898 060D                        u1310 01DF  
                      u1400 0183                        u1320 020D                        u1410 0155  
                      u1330 023B                        u1420 02C6                        u1500 04DD  
                      u1340 0269                        u1430 0324                        u1510 0130  
                      u1350 03E0                        u1440 0382                        u1360 040F  
                      u1450 0297                        u1370 043E                        u1460 02F5  
                      u1380 046D                        u1470 0353                        u1390 01B1  
                      u1480 03B1                        u1490 04C8            _checkZoneMessage 011E  
                      _main 00B8                        btemp 007E                        start 0000  
        __size_of_LCDdelay2 0010      __size_of_zone0Activate 002E      __size_of_zone1Activate 002F  
      __end_of_clearDisplay 1000      __size_of_zone2Activate 002F                 _zoneActMode 003A  
    __size_of_zone3Activate 002F                _zone0Alerted 002E            __end_of_LCDdelay 0035  
              _zone1Alerted 002C                       ?_main 0070               __CFG_WDTE$OFF 0000  
              _zone2Alerted 002A            __end_of_LCDsetup 0082        zone3Deactivate@F1198 01A8  
              _zone3Alerted 0028                       _PORTA 0005                       _PORTC 0007  
                     _PORTD 0008                       _TRISA 0085                       _TRISC 0087  
                     _TRISD 0088             __end_of_alarmOn 01CD  checkZoneMessage@messagerow 0057  
             __CFG_PWRTE$ON 0000       __end_of_activateZones 07BE             ButtonGrid@F1201 004F  
           ButtonGrid@F1203 0049                ?_buttonsetup 0070              zone0OK@message 0057  
        zone0Activate@F1177 00A0              __CFG_BOREN$OFF 0000                       pclath 000A  
                     status 0003             __end_of_zone0OK 01FB             __end_of_zone1OK 0229  
           __end_of_zone2OK 0257              zone1OK@message 0057             __end_of_zone3OK 0285  
                     wtemp0 007E      zone2Deactivate@message 0057       __size_of_writeMessage 001F  
           __initialization 07BE              zone2OK@message 0057                __end_of_main 00D8  
                    ??_main 007C              zone3OK@message 0057               _zone0Activate 0143  
         __end_of_LCDdelay2 0045               _zone1Activate 02B4                      _ADCON1 009F  
             _zone2Activate 0312               _zone3Activate 0370                _writeMessage 0099  
              ?_resetCursor 0070       __size_of_checkButtons 0086            __end_of_alarmOff 019F  
                 ??_alarmOn 0077              ?_zone0Activate 0070              ?_zone1Activate 0070  
            ?_zone2Activate 0070                _checkButtons 05FA                   ??_zone0OK 0077  
                 ??_zone1OK 0077              ?_zone3Activate 0070                   ??_zone2OK 0077  
                 ??_zone3OK 0077    __size_of_turnon2linemode 0005            __end_of_writeCmd 00FA  
  __size_of_zone0Deactivate 002F     __end_of__initialization 07FC                zone0OK@F1142 00D2  
              zone1OK@F1145 00C8       __size_of_clearDisplay 0005                   ?_LCDdelay 0070  
              zone2OK@F1148 00BE                   ?_LCDsetup 0070                zone3OK@F1151 00B4  
  __size_of_zone1Deactivate 002F                _alarmOnOrOff 003C              __pcstackCOMMON 0070  
              __pidataBANK0 0056                __pidataBANK1 04F6                __pidataBANK2 059B  
              __pidataBANK3 0544    __size_of_zone2Deactivate 002F                   LCDdelay@i 0070  
             _durationValue 0020    __end_of_checkZoneMessage 0143    __size_of_zone3Deactivate 002F  
        __size_of_displayOn 0005                _clearDisplay 0FFB               alarmOff@F1174 00AA  
      __size_of_buttonsetup 0017                  __pbssBANK0 0020                  _checkZones 0680  
                _alarmOnOff 048A                  ??_LCDdelay 0070                  ??_LCDsetup 0073  
                _alertValue 0055                  __pmaintext 00B8             alarmOff@message 0057  
           ??_zone0Activate 0077             ??_zone1Activate 0077             ??_zone2Activate 0077  
                 ?_alarmOff 0070             ??_zone3Activate 0077          zone1Activate@F1180 01DD  
           zone0Alert@F1154 0162          __size_of_writeChar 0024           ??_turnon2linemode 0073  
      __size_of_resetCursor 0005           ??_zone0Deactivate 0077           __end_of_displayOn 0FF6  
           zone1Alert@F1157 0155                     _alarmOn 019F                  _modeSelect 04BB  
         ??_zone1Deactivate 0077                   ?_writeCmd 0070                     __ptext1 0680  
                   __ptext2 0257                     __ptext3 045B                     __ptext4 0229  
                   __ptext5 042C                     __ptext6 01FB                     __ptext7 03FD  
                   __ptext8 01CD                     __ptext9 03CE                  ??_alarmOff 0077  
         ??_zone2Deactivate 0077                     _zone0OK 01CD                     _zone1OK 01FB  
                   _zone2OK 0229                     _zone3OK 0257                     _zone0On 0036  
                   _zone1On 0034                     _zone2On 0032                     _zone3On 0030  
                   clrloop0 0012        end_of_initialization 07FC                   _LCDdelay2 0035  
               ?_checkZones 0070             zone2Alert@F1160 0148                 ?_alarmOnOff 0070  
         ??_zone3Deactivate 0077      zone0Deactivate@message 0057      zone3Deactivate@message 0057  
                _tempChange 007C                writeChar@var 0072      __size_of_activateZones 00A9  
           zone3Alert@F1163 013B                  ??_writeCmd 0072       checkZoneMessage@F1219 0121  
         __end_of_writeChar 011E                  ?_LCDdelay2 0070                  _zone0Alert 03CE  
                _zone1Alert 03FD                  _zone2Alert 042C                  _zone3Alert 045B  
      zone0Activate@message 0057           __size_of_LCDdelay 0010           __size_of_LCDsetup 0017  
  writeMessageline1@message 0077           checkMessage@F1211 0110    writeMessageline2@message 0077  
               ?_modeSelect 0070         __size_of_checkZones 0095         __size_of_alarmOnOff 0031  
         ?_checkZoneMessage 0070              _durationChange 0026         start_initialization 07BE  
        ??_checkZoneMessage 0078                  LCDdelay2@i 0070               _activateZones 0715  
                init_fetch0 0045                 __pdataBANK0 0042                 __pdataBANK1 00A0  
               __pdataBANK2 0110                 __pdataBANK3 0190        zone1Activate@message 0057  
         zone0Alert@message 0057                 __pbssCOMMON 007C                   ___latbits 0002  
             __pcstackBANK0 0057              ?_activateZones 0070               ??_buttonsetup 0070  
         __size_of_alarmOff 002E             _turnon2linemode 0FF6                alarmOn@F1171 00E5  
           _zone0Deactivate 0285                 ??_LCDdelay2 0070          zone2Activate@F1183 01D3  
               _alertChange 0024                 ?_zone0Alert 0070                 ?_zone1Alert 0070  
               ?_zone2Alert 0070         __size_of_modeSelect 003B                 ?_zone3Alert 0070  
           _zone1Deactivate 02E3              alarmOn@message 0057             _zone2Deactivate 0341  
                  ?_alarmOn 0070                   _displayOn 0FF1       __end_of_zone0Activate 0171  
      modeSelect@messagecol 0057           __size_of_writeCmd 0022        zone2Activate@message 0057  
      modeSelect@messagerow 0063             _zone3Deactivate 039F           _writeMessageline1 000B  
         _writeMessageline2 0019       __end_of_zone1Activate 02E3       __end_of_zone2Activate 0341  
        ?_writeMessageline1 0070          ?_writeMessageline2 0070       __end_of_zone3Activate 039F  
                  ?_zone0OK 0070                    ?_zone1OK 0070                    ?_zone2OK 0070  
                  ?_zone3OK 0070               ?_writeMessage 0070                ??_checkZones 007C  
              ??_alarmOnOff 007C               ??_resetCursor 0073         __end_of_buttonsetup 0099  
       ??_writeMessageline1 0077         ??_writeMessageline2 0077                    _LCDdelay 0025  
                 clear_ram0 0011                    _LCDsetup 006B                 writeCmd@cmd 0072  
                 _tempValue 0022            checkButtons@rval 0070             modeSelect@F1206 00DC  
           modeSelect@F1208 0190                  ?_displayOn 0070          __end_of_checkZones 0715  
 __end_of_writeMessageline1 0011   __end_of_writeMessageline2 0025           zone1Alert@message 0057  
   __end_of_turnon2linemode 0FFB          __end_of_alarmOnOff 04BB         __size_of_zone0Alert 002F  
       __size_of_zone1Alert 002F             ??_activateZones 007B         __size_of_zone2Alert 002F  
       __size_of_zone3Alert 002F     __end_of_zone0Deactivate 02B4               ?_checkButtons 0070  
                 _zoneCheck 0038                   _writeChar 00FA              ??_writeMessage 0073  
      zone3Activate@message 0057     __end_of_zone1Deactivate 0312         writeMessage@message 0076  
    zone1Deactivate@message 0057     __end_of_zone2Deactivate 0370         __end_of_resetCursor 000B  
   __end_of_zone3Deactivate 03CE                ??_modeSelect 0078            __size_of_alarmOn 002E  
                  _alarmOff 0171              ??_checkButtons 0070                 _buttonsetup 0082  
                ?_writeChar 0070               ?_clearDisplay 0070                    __ptext10 011E  
                  __ptext11 05FA                    __ptext20 039F                    __ptext12 0082  
                  __ptext21 0370                    __ptext13 048A                    __ptext30 0006  
                  __ptext22 0341                    __ptext14 04BB                    __ptext31 0FFB  
                  __ptext23 0312                    __ptext15 0019                    __ptext32 0035  
                  __ptext24 02E3                    __ptext16 000B                    __ptext33 006B  
                  __ptext25 02B4                    __ptext17 019F                    __ptext34 0FF6  
                  __ptext26 0285                    __ptext18 0171                    __ptext35 0FF1  
                  __ptext27 0143                    __ptext19 0715                    __ptext36 00D8  
                  __ptext28 0099                    __ptext37 0025                    __ptext29 00FA  
      zone0Deactivate@F1189 019C            __size_of_zone0OK 002E            __size_of_zone1OK 002E  
          __size_of_zone2OK 002E            __size_of_zone3OK 002E               __size_of_main 0020  
 __size_of_checkZoneMessage 0025          __end_of_modeSelect 04F6                 ??_displayOn 0073  
                  _writeCmd 00D8  __size_of_writeMessageline1 0006  __size_of_writeMessageline2 000C  
          ?_turnon2linemode 0070           zone2Alert@message 0057            ?_zone0Deactivate 0070  
            ??_clearDisplay 0073                    init_ram0 0049            ?_zone1Deactivate 0070  
              ??_zone0Alert 0077                ??_zone1Alert 0077                 _resetCursor 0006  
        zone3Activate@F1186 01C9                ??_zone2Alert 0077                ??_zone3Alert 0077  
      zone1Deactivate@F1192 01BE            ?_zone2Deactivate 0070        __end_of_writeMessage 00B8  
          ?_zone3Deactivate 0070          __end_of_zone0Alert 03FD          __end_of_zone1Alert 042C  
        __end_of_zone2Alert 045B          __end_of_zone3Alert 048A                 ??_writeChar 0072  
             writeMessage@i 0074  
