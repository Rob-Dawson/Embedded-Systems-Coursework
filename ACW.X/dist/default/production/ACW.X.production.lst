

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 16 20:13:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0l,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBANK3,global,class=CODE,delta=2
     8                           	psect	idataBANK0h,global,class=CODE,delta=2
     9                           	psect	strings,global,class=STRING,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssBANK0h,global,bit,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK0h,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0h,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK0l,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0l,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	dabs	1,0x187,0,Clock@time_rx7
   100                           	dabs	1,0x30,1
   101                           	dabs	1,0x187,0,Clock@time_rx7
   102                           	dabs	1,0x30,1
   103                           	dabs	1,0x187,0,_time_rx7
   104                           	dabs	1,0x30,1
   105                           	dabs	1,0x30,1,_time_rx
   106                           	dabs	1,0x7E,2
   107  0000                     
   108                           ; Version 1.45
   109                           ; Generated 16/11/2017 GMT
   110                           ; 
   111                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC16F877A Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0008                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0088                     	;# 
   302  0089                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0094                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442                           
   443                           	psect	idataBANK0l
   444  13E5                     __pidataBANK0l:	
   445                           
   446                           ;initializer for ButtonGrid@F1241
   447  13E5  3472               	retlw	114
   448  13E6  346F               	retlw	111
   449  13E7  3477               	retlw	119
   450  13E8  343A               	retlw	58
   451  13E9  3430               	retlw	48
   452  13EA  3400               	retlw	0
   453                           
   454                           ;initializer for _alertValue
   455  13EB  3401               	retlw	1
   456                           
   457                           ;initializer for _triggerValue
   458  13EC  3414               	retlw	20
   459                           
   460                           	psect	idataBANK1
   461  0C5C                     __pidataBANK1:	
   462                           
   463                           ;initializer for zone3OK@F1188
   464  0C5C  345A               	retlw	90
   465  0C5D  346F               	retlw	111
   466  0C5E  346E               	retlw	110
   467  0C5F  3465               	retlw	101
   468  0C60  3420               	retlw	32
   469  0C61  3433               	retlw	51
   470  0C62  3420               	retlw	32
   471  0C63  344F               	retlw	79
   472  0C64  344B               	retlw	75
   473  0C65  3400               	retlw	0
   474                           
   475                           ;initializer for zone2OK@F1185
   476  0C66  345A               	retlw	90
   477  0C67  346F               	retlw	111
   478  0C68  346E               	retlw	110
   479  0C69  3465               	retlw	101
   480  0C6A  3420               	retlw	32
   481  0C6B  3432               	retlw	50
   482  0C6C  3420               	retlw	32
   483  0C6D  344F               	retlw	79
   484  0C6E  344B               	retlw	75
   485  0C6F  3400               	retlw	0
   486                           
   487                           ;initializer for zone1OK@F1182
   488  0C70  345A               	retlw	90
   489  0C71  346F               	retlw	111
   490  0C72  346E               	retlw	110
   491  0C73  3465               	retlw	101
   492  0C74  3420               	retlw	32
   493  0C75  3431               	retlw	49
   494  0C76  3420               	retlw	32
   495  0C77  344F               	retlw	79
   496  0C78  344B               	retlw	75
   497  0C79  3400               	retlw	0
   498                           
   499                           ;initializer for zone0OK@F1179
   500  0C7A  345A               	retlw	90
   501  0C7B  346F               	retlw	111
   502  0C7C  346E               	retlw	110
   503  0C7D  3465               	retlw	101
   504  0C7E  3420               	retlw	32
   505  0C7F  3430               	retlw	48
   506  0C80  3420               	retlw	32
   507  0C81  344F               	retlw	79
   508  0C82  344B               	retlw	75
   509  0C83  3400               	retlw	0
   510                           
   511                           ;initializer for modeSelect@F1246
   512  0C84  3453               	retlw	83
   513  0C85  3465               	retlw	101
   514  0C86  346C               	retlw	108
   515  0C87  3465               	retlw	101
   516  0C88  3463               	retlw	99
   517  0C89  3474               	retlw	116
   518  0C8A  3420               	retlw	32
   519  0C8B  3461               	retlw	97
   520  0C8C  3400               	retlw	0
   521                           
   522                           ;initializer for alarmOn@F1208
   523  0C8D  3441               	retlw	65
   524  0C8E  346C               	retlw	108
   525  0C8F  3461               	retlw	97
   526  0C90  3472               	retlw	114
   527  0C91  346D               	retlw	109
   528  0C92  3420               	retlw	32
   529  0C93  344F               	retlw	79
   530  0C94  346E               	retlw	110
   531  0C95  3400               	retlw	0
   532                           
   533                           ;initializer for currentTemp@F1203
   534  0C96  345A               	retlw	90
   535  0C97  346F               	retlw	111
   536  0C98  346E               	retlw	110
   537  0C99  3465               	retlw	101
   538  0C9A  3420               	retlw	32
   539  0C9B  3430               	retlw	48
   540  0C9C  3400               	retlw	0
   541                           
   542                           ;initializer for checkZoneMessage@F1255
   543  0C9D  3443               	retlw	67
   544  0C9E  3468               	retlw	104
   545  0C9F  3465               	retlw	101
   546  0CA0  3463               	retlw	99
   547  0CA1  346B               	retlw	107
   548  0CA2  3400               	retlw	0
   549                           
   550                           ;initializer for ButtonGrid@F1243
   551  0CA3  3463               	retlw	99
   552  0CA4  346F               	retlw	111
   553  0CA5  346C               	retlw	108
   554  0CA6  343A               	retlw	58
   555  0CA7  3430               	retlw	48
   556  0CA8  3400               	retlw	0
   557                           
   558                           	psect	idataBANK2
   559  0D59                     __pidataBANK2:	
   560                           
   561                           ;initializer for currentTemp@F1205
   562  0D59  3454               	retlw	84
   563  0D5A  3465               	retlw	101
   564  0D5B  346D               	retlw	109
   565  0D5C  3470               	retlw	112
   566  0D5D  3465               	retlw	101
   567  0D5E  3472               	retlw	114
   568  0D5F  3461               	retlw	97
   569  0D60  3474               	retlw	116
   570  0D61  3475               	retlw	117
   571  0D62  3472               	retlw	114
   572  0D63  3465               	retlw	101
   573  0D64  343A               	retlw	58
   574  0D65  3400               	retlw	0
   575                           
   576                           ;initializer for zone3Alert@F1200
   577  0D66  345A               	retlw	90
   578  0D67  346F               	retlw	111
   579  0D68  346E               	retlw	110
   580  0D69  3465               	retlw	101
   581  0D6A  3420               	retlw	32
   582  0D6B  3433               	retlw	51
   583  0D6C  3420               	retlw	32
   584  0D6D  3441               	retlw	65
   585  0D6E  346C               	retlw	108
   586  0D6F  3465               	retlw	101
   587  0D70  3472               	retlw	114
   588  0D71  3474               	retlw	116
   589  0D72  3400               	retlw	0
   590                           
   591                           ;initializer for zone2Alert@F1197
   592  0D73  345A               	retlw	90
   593  0D74  346F               	retlw	111
   594  0D75  346E               	retlw	110
   595  0D76  3465               	retlw	101
   596  0D77  3420               	retlw	32
   597  0D78  3432               	retlw	50
   598  0D79  3420               	retlw	32
   599  0D7A  3441               	retlw	65
   600  0D7B  346C               	retlw	108
   601  0D7C  3465               	retlw	101
   602  0D7D  3472               	retlw	114
   603  0D7E  3474               	retlw	116
   604  0D7F  3400               	retlw	0
   605                           
   606                           ;initializer for zone1Alert@F1194
   607  0D80  345A               	retlw	90
   608  0D81  346F               	retlw	111
   609  0D82  346E               	retlw	110
   610  0D83  3465               	retlw	101
   611  0D84  3420               	retlw	32
   612  0D85  3431               	retlw	49
   613  0D86  3420               	retlw	32
   614  0D87  3441               	retlw	65
   615  0D88  346C               	retlw	108
   616  0D89  3465               	retlw	101
   617  0D8A  3472               	retlw	114
   618  0D8B  3474               	retlw	116
   619  0D8C  3400               	retlw	0
   620                           
   621                           ;initializer for zone0Alert@F1191
   622  0D8D  345A               	retlw	90
   623  0D8E  346F               	retlw	111
   624  0D8F  346E               	retlw	110
   625  0D90  3465               	retlw	101
   626  0D91  3420               	retlw	32
   627  0D92  3430               	retlw	48
   628  0D93  3420               	retlw	32
   629  0D94  3441               	retlw	65
   630  0D95  346C               	retlw	108
   631  0D96  3465               	retlw	101
   632  0D97  3472               	retlw	114
   633  0D98  3474               	retlw	116
   634  0D99  3400               	retlw	0
   635                           
   636                           ;initializer for changeTriggerMessage@F1258
   637  0D9A  3443               	retlw	67
   638  0D9B  3468               	retlw	104
   639  0D9C  3461               	retlw	97
   640  0D9D  346E               	retlw	110
   641  0D9E  3467               	retlw	103
   642  0D9F  3465               	retlw	101
   643  0DA0  3420               	retlw	32
   644  0DA1  3454               	retlw	84
   645  0DA2  3465               	retlw	101
   646  0DA3  346D               	retlw	109
   647  0DA4  3470               	retlw	112
   648  0DA5  3400               	retlw	0
   649                           
   650                           ;initializer for modeSelect@F1248
   651  0DA6  3446               	retlw	70
   652  0DA7  3475               	retlw	117
   653  0DA8  346E               	retlw	110
   654  0DA9  3463               	retlw	99
   655  0DAA  3474               	retlw	116
   656  0DAB  3469               	retlw	105
   657  0DAC  346F               	retlw	111
   658  0DAD  346E               	retlw	110
   659  0DAE  342E               	retlw	46
   660  0DAF  342E               	retlw	46
   661  0DB0  342E               	retlw	46
   662  0DB1  3400               	retlw	0
   663                           
   664                           	psect	idataBANK3
   665  0E0D                     __pidataBANK3:	
   666                           
   667                           ;initializer for zone3Deactivate@F1235
   668  0E0D  345A               	retlw	90
   669  0E0E  346F               	retlw	111
   670  0E0F  346E               	retlw	110
   671  0E10  3465               	retlw	101
   672  0E11  3420               	retlw	32
   673  0E12  3433               	retlw	51
   674  0E13  3420               	retlw	32
   675  0E14  344F               	retlw	79
   676  0E15  3466               	retlw	102
   677  0E16  3466               	retlw	102
   678  0E17  3400               	retlw	0
   679                           
   680                           ;initializer for zone2Deactivate@F1232
   681  0E18  345A               	retlw	90
   682  0E19  346F               	retlw	111
   683  0E1A  346E               	retlw	110
   684  0E1B  3465               	retlw	101
   685  0E1C  3420               	retlw	32
   686  0E1D  3432               	retlw	50
   687  0E1E  3420               	retlw	32
   688  0E1F  344F               	retlw	79
   689  0E20  3466               	retlw	102
   690  0E21  3466               	retlw	102
   691  0E22  3400               	retlw	0
   692                           
   693                           ;initializer for zone1Deactivate@F1229
   694  0E23  345A               	retlw	90
   695  0E24  346F               	retlw	111
   696  0E25  346E               	retlw	110
   697  0E26  3465               	retlw	101
   698  0E27  3420               	retlw	32
   699  0E28  3431               	retlw	49
   700  0E29  3420               	retlw	32
   701  0E2A  344F               	retlw	79
   702  0E2B  3466               	retlw	102
   703  0E2C  3466               	retlw	102
   704  0E2D  3400               	retlw	0
   705                           
   706                           ;initializer for zone0Deactivate@F1226
   707  0E2E  345A               	retlw	90
   708  0E2F  346F               	retlw	111
   709  0E30  346E               	retlw	110
   710  0E31  3465               	retlw	101
   711  0E32  3420               	retlw	32
   712  0E33  3430               	retlw	48
   713  0E34  3420               	retlw	32
   714  0E35  344F               	retlw	79
   715  0E36  3466               	retlw	102
   716  0E37  3466               	retlw	102
   717  0E38  3400               	retlw	0
   718                           
   719                           ;initializer for zone3Activate@F1223
   720  0E39  345A               	retlw	90
   721  0E3A  346F               	retlw	111
   722  0E3B  346E               	retlw	110
   723  0E3C  3465               	retlw	101
   724  0E3D  3420               	retlw	32
   725  0E3E  3433               	retlw	51
   726  0E3F  3420               	retlw	32
   727  0E40  344F               	retlw	79
   728  0E41  346E               	retlw	110
   729  0E42  3400               	retlw	0
   730                           
   731                           ;initializer for zone2Activate@F1220
   732  0E43  345A               	retlw	90
   733  0E44  346F               	retlw	111
   734  0E45  346E               	retlw	110
   735  0E46  3465               	retlw	101
   736  0E47  3420               	retlw	32
   737  0E48  3432               	retlw	50
   738  0E49  3420               	retlw	32
   739  0E4A  344F               	retlw	79
   740  0E4B  346E               	retlw	110
   741  0E4C  3400               	retlw	0
   742                           
   743                           ;initializer for zone1Activate@F1217
   744  0E4D  345A               	retlw	90
   745  0E4E  346F               	retlw	111
   746  0E4F  346E               	retlw	110
   747  0E50  3465               	retlw	101
   748  0E51  3420               	retlw	32
   749  0E52  3431               	retlw	49
   750  0E53  3420               	retlw	32
   751  0E54  344F               	retlw	79
   752  0E55  346E               	retlw	110
   753  0E56  3400               	retlw	0
   754                           
   755                           ;initializer for zone0Activate@F1214
   756  0E57  345A               	retlw	90
   757  0E58  346F               	retlw	111
   758  0E59  346E               	retlw	110
   759  0E5A  3465               	retlw	101
   760  0E5B  3420               	retlw	32
   761  0E5C  3430               	retlw	48
   762  0E5D  3420               	retlw	32
   763  0E5E  344F               	retlw	79
   764  0E5F  346E               	retlw	110
   765  0E60  3400               	retlw	0
   766                           
   767                           ;initializer for alarmOff@F1211
   768  0E61  3441               	retlw	65
   769  0E62  346C               	retlw	108
   770  0E63  3461               	retlw	97
   771  0E64  3472               	retlw	114
   772  0E65  346D               	retlw	109
   773  0E66  3420               	retlw	32
   774  0E67  344F               	retlw	79
   775  0E68  3466               	retlw	102
   776  0E69  3466               	retlw	102
   777  0E6A  3400               	retlw	0
   778                           
   779                           	psect	idataBANK0h
   780  13D2                     __pidataBANK0h:	
   781                           
   782                           ;initializer for zoneActivate@F1238
   783  13D2  345A               	retlw	90
   784  13D3  346F               	retlw	111
   785  13D4  346E               	retlw	110
   786  13D5  3465               	retlw	101
   787  13D6  3400               	retlw	0
   788                           
   789                           	psect	strings
   790  1000                     __pstrings:	
   791  1000                     stringtab:	
   792  1000                     __stringtab:	
   793  1000                     stringcode:	
   794                           ;	String table - string pointers are 1 byte each
   795                           
   796  1000                     stringdir:	
   797  1000  3010               	movlw	high stringdir
   798  1001  008A               	movwf	10
   799  1002  0804               	movf	4,w
   800  1003  0A84               	incf	4,f
   801  1004  0782               	addwf	2,f
   802  1005                     __stringbase:	
   803  1005  3400               	retlw	0
   804  1006                     __end_of__stringtab:	
   805  1006                     _table:	
   806  1006  3450               	retlw	80
   807  1007  3459               	retlw	89
   808  1008  3423               	retlw	35
   809  1009  3408               	retlw	8
   810  100A  3403               	retlw	3
   811  100B  3406               	retlw	6
   812  100C  3406               	retlw	6
   813  100D  3400               	retlw	0
   814  100E                     __end_of_table:		;_time_rx7
   815  0007                     _PORTC	set	7
   816  0008                     _PORTD	set	8
   817  0005                     _PORTA	set	5
   818  0028                     _RA0	set	40
   819  0035                     _RB5	set	53
   820  0030                     _RB0	set	48
   821  0034                     _RB4	set	52
   822  003F                     _RC7	set	63
   823  003E                     _RC6	set	62
   824  003D                     _RC5	set	61
   825  003B                     _RC3	set	59
   826  003A                     _RC2	set	58
   827  0039                     _RC1	set	57
   828  0038                     _RC0	set	56
   829  003C                     _RC4	set	60
   830  002B                     _RA3	set	43
   831  002A                     _RA2	set	42
   832  0029                     _RA1	set	41
   833  0037                     _RB7	set	55
   834  0087                     _TRISC	set	135
   835  0088                     _TRISD	set	136
   836  0085                     _TRISA	set	133
   837  009F                     _ADCON1	set	159
   838  0086                     _TRISB	set	134
   839  0428                     _TRISA0	set	1064
   840  0434                     _TRISB4	set	1076
   841                           
   842                           ; #config settings
   843  0000                     
   844                           	psect	cinit
   845  07AE                     start_initialization:	
   846  07AE                     __initialization:	
   847                           
   848                           ; Initialize objects allocated to BANK3
   849  07AE  1783               	bsf	3,7	;select IRP bank2
   850  07AF  30EE               	movlw	low (__pdataBANK3+94)
   851  07B0  00FD               	movwf	btemp+-1
   852  07B1  300E               	movlw	high __pidataBANK3
   853  07B2  00FE               	movwf	btemp
   854  07B3  300D               	movlw	low __pidataBANK3
   855  07B4  00FF               	movwf	btemp+1
   856  07B5  3090               	movlw	low __pdataBANK3
   857  07B6  0084               	movwf	4
   858  07B7  160A  118A  244B  120A  118A  	fcall	init_ram0
   859                           
   860                           ; Initialize objects allocated to BANK2
   861  07BC  3069               	movlw	low (__pdataBANK2+89)
   862  07BD  00FD               	movwf	btemp+-1
   863  07BE  300D               	movlw	high __pidataBANK2
   864  07BF  00FE               	movwf	btemp
   865  07C0  3059               	movlw	low __pidataBANK2
   866  07C1  00FF               	movwf	btemp+1
   867  07C2  3010               	movlw	low __pdataBANK2
   868  07C3  0084               	movwf	4
   869  07C4  160A  118A  244B  120A  118A  	fcall	init_ram0
   870                           
   871                           ; Initialize objects allocated to BANK1
   872  07C9  1383               	bcf	3,7	;select IRP bank0
   873  07CA  30ED               	movlw	low (__pdataBANK1+77)
   874  07CB  00FD               	movwf	btemp+-1
   875  07CC  300C               	movlw	high __pidataBANK1
   876  07CD  00FE               	movwf	btemp
   877  07CE  305C               	movlw	low __pidataBANK1
   878  07CF  00FF               	movwf	btemp+1
   879  07D0  30A0               	movlw	low __pdataBANK1
   880  07D1  0084               	movwf	4
   881  07D2  160A  118A  244B  120A  118A  	fcall	init_ram0
   882                           
   883                           ; Initialize objects allocated to BANK0l
   884  07D7  3028               	movlw	low (__pdataBANK0l+8)
   885  07D8  00FD               	movwf	btemp+-1
   886  07D9  3013               	movlw	high __pidataBANK0l
   887  07DA  00FE               	movwf	btemp
   888  07DB  30E5               	movlw	low __pidataBANK0l
   889  07DC  00FF               	movwf	btemp+1
   890  07DD  3020               	movlw	low __pdataBANK0l
   891  07DE  0084               	movwf	4
   892  07DF  160A  118A  244B  120A  118A  	fcall	init_ram0
   893                           
   894                           ; Initialize objects allocated to BANK0h
   895  07E4  306E               	movlw	low (__pdataBANK0h+5)
   896  07E5  00FD               	movwf	btemp+-1
   897  07E6  3013               	movlw	high __pidataBANK0h
   898  07E7  00FE               	movwf	btemp
   899  07E8  30D2               	movlw	low __pidataBANK0h
   900  07E9  00FF               	movwf	btemp+1
   901  07EA  3069               	movlw	low __pdataBANK0h
   902  07EB  0084               	movwf	4
   903  07EC  160A  118A  244B  120A  118A  	fcall	init_ram0
   904                           
   905                           ; Clear objects allocated to BANK0l
   906  07F1  01A8               	clrf	__pbssBANK0l& (0+127)
   907  07F2  01A9               	clrf	(__pbssBANK0l+1)& (0+127)
   908  07F3  01AA               	clrf	(__pbssBANK0l+2)& (0+127)
   909  07F4  01AB               	clrf	(__pbssBANK0l+3)& (0+127)
   910                           
   911                           ; Clear objects allocated to BITBANK0h
   912  07F5  01EE               	clrf	(__pbitbssBANK0h/(0+8))& (0+127)
   913                           
   914                           ; Clear objects allocated to BANK0h
   915  07F6  3031               	movlw	low __pbssBANK0h
   916  07F7  0084               	movwf	4
   917  07F8  3052               	movlw	low (__pbssBANK0h+33)
   918  07F9  160A  118A  23DD   	fcall	clear_ram0
   919  07FC                     end_of_initialization:	
   920                           ;End of C runtime variable initialization code
   921                           
   922  07FC                     __end_of__initialization:	
   923  07FC  0183               	clrf	3
   924  07FD  120A  118A  28CE   	ljmp	_main	;jump to C main() function
   925                           
   926                           	psect	bitbssBANK0h
   927  0370                     __pbitbssBANK0h:	
   928  0370                     readByte@j:	
   929  0370                     	ds	1
   930                           
   931                           	psect	bssBANK0h
   932  0031                     __pbssBANK0h:	
   933  0031                     _table1:	
   934  0031                     	ds	7
   935  0038                     _row:	
   936  0038                     	ds	2
   937  003A                     _col:	
   938  003A                     	ds	2
   939  003C                     _delayValue:	
   940  003C                     	ds	1
   941  003D                     _TriggerTemp:	
   942  003D                     	ds	1
   943  003E                     _delayChange:	
   944  003E                     	ds	1
   945  003F                     _dateChange:	
   946  003F                     	ds	1
   947  0040                     _timeChange:	
   948  0040                     	ds	1
   949  0041                     _tempChange:	
   950  0041                     	ds	1
   951  0042                     _zone3Alerted:	
   952  0042                     	ds	1
   953  0043                     _zone2Alerted:	
   954  0043                     	ds	1
   955  0044                     _zone1Alerted:	
   956  0044                     	ds	1
   957  0045                     _zone0Alerted:	
   958  0045                     	ds	1
   959  0046                     _zone3On:	
   960  0046                     	ds	1
   961  0047                     _zone2On:	
   962  0047                     	ds	1
   963  0048                     _zone1On:	
   964  0048                     	ds	1
   965  0049                     _zone0On:	
   966  0049                     	ds	1
   967  004A                     _zoneCheck:	
   968  004A                     	ds	1
   969  004B                     _zoneActMode:	
   970  004B                     	ds	1
   971  004C                     _alarmOnOrOff:	
   972  004C                     	ds	1
   973  004D                     _decimalNumber:	
   974  004D                     	ds	1
   975  004E                     _tempValue:	
   976  004E                     	ds	1
   977  004F                     _tempHigh:	
   978  004F                     	ds	1
   979  0050                     _tempLow:	
   980  0050                     	ds	1
   981  0051                     _value:	
   982  0051                     	ds	1
   983                           
   984                           	psect	dataBANK0h
   985  0069                     __pdataBANK0h:	
   986  0069                     zoneActivate@F1238:	
   987  0069                     	ds	5
   988                           
   989                           	psect	bssBANK0l
   990  0028                     __pbssBANK0l:	
   991  0028                     _durationValue:	
   992  0028                     	ds	1
   993  0029                     _alertChange:	
   994  0029                     	ds	1
   995  002A                     _durationChange:	
   996  002A                     	ds	1
   997  002B                     _triggerDelayTime:	
   998  002B                     	ds	1
   999                           
  1000                           	psect	dataBANK0l
  1001  0020                     __pdataBANK0l:	
  1002  0020                     ButtonGrid@F1241:	
  1003  0020                     	ds	6
  1004  0026                     _alertValue:	
  1005  0026                     	ds	1
  1006  0027                     _triggerValue:	
  1007  0027                     	ds	1
  1008                           
  1009                           	psect	dataBANK1
  1010  00A0                     __pdataBANK1:	
  1011  00A0                     zone3OK@F1188:	
  1012  00A0                     	ds	10
  1013  00AA                     zone2OK@F1185:	
  1014  00AA                     	ds	10
  1015  00B4                     zone1OK@F1182:	
  1016  00B4                     	ds	10
  1017  00BE                     zone0OK@F1179:	
  1018  00BE                     	ds	10
  1019  00C8                     modeSelect@F1246:	
  1020  00C8                     	ds	9
  1021  00D1                     alarmOn@F1208:	
  1022  00D1                     	ds	9
  1023  00DA                     currentTemp@F1203:	
  1024  00DA                     	ds	7
  1025  00E1                     checkZoneMessage@F1255:	
  1026  00E1                     	ds	6
  1027  00E7                     ButtonGrid@F1243:	
  1028  00E7                     	ds	6
  1029                           
  1030                           	psect	dataBANK3
  1031  0190                     __pdataBANK3:	
  1032  0190                     zone3Deactivate@F1235:	
  1033  0190                     	ds	11
  1034  019B                     zone2Deactivate@F1232:	
  1035  019B                     	ds	11
  1036  01A6                     zone1Deactivate@F1229:	
  1037  01A6                     	ds	11
  1038  01B1                     zone0Deactivate@F1226:	
  1039  01B1                     	ds	11
  1040  01BC                     zone3Activate@F1223:	
  1041  01BC                     	ds	10
  1042  01C6                     zone2Activate@F1220:	
  1043  01C6                     	ds	10
  1044  01D0                     zone1Activate@F1217:	
  1045  01D0                     	ds	10
  1046  01DA                     zone0Activate@F1214:	
  1047  01DA                     	ds	10
  1048  01E4                     alarmOff@F1211:	
  1049  01E4                     	ds	10
  1050                           
  1051                           	psect	dataBANK2
  1052  0110                     __pdataBANK2:	
  1053  0110                     currentTemp@F1205:	
  1054  0110                     	ds	13
  1055  011D                     zone3Alert@F1200:	
  1056  011D                     	ds	13
  1057  012A                     zone2Alert@F1197:	
  1058  012A                     	ds	13
  1059  0137                     zone1Alert@F1194:	
  1060  0137                     	ds	13
  1061  0144                     zone0Alert@F1191:	
  1062  0144                     	ds	13
  1063  0151                     changeTriggerMessage@F1258:	
  1064  0151                     	ds	12
  1065  015D                     modeSelect@F1248:	
  1066  015D                     	ds	12
  1067                           
  1068                           	psect	inittext
  1069  1447                     init_fetch0:	
  1070                           ;	Called with low address in FSR and high address in W
  1071                           
  1072  1447  087E               	movf	126,w
  1073  1448  008A               	movwf	10
  1074  1449  087F               	movf	127,w
  1075  144A  0082               	movwf	2
  1076  144B                     init_ram0:	
  1077                           ;Called with:
  1078                           ;	high address of idata address in btemp 
  1079                           ;	low address of idata address in btemp+1 
  1080                           ;	low address of data in FSR
  1081                           ;	high address + 1 of data in btemp-1
  1082                           
  1083  144B  2447  160A  118A   	fcall	init_fetch0
  1084  144E  0080               	movwf	0
  1085  144F  0A84               	incf	4,f
  1086  1450  0804               	movf	4,w
  1087  1451  067D               	xorwf	125,w
  1088  1452  1903               	btfsc	3,2
  1089  1453  3400               	retlw	0
  1090  1454  0AFF               	incf	127,f
  1091  1455  1903               	btfsc	3,2
  1092  1456  0AFE               	incf	126,f
  1093  1457  2C4B               	goto	init_ram0
  1094                           
  1095                           	psect	clrtext
  1096  13DD                     clear_ram0:	
  1097                           ;	Called with FSR containing the base address, and
  1098                           ;	W with the last address+1
  1099                           
  1100  13DD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1101  13DE                     clrloop0:	
  1102  13DE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1103  13DF  0A84               	incf	4,f	;increment pointer
  1104  13E0  0604               	xorwf	4,w	;XOR with final address
  1105  13E1  1903               	btfsc	3,2	;have we reached the end yet?
  1106  13E2  3400               	retlw	0	;all done for this memory range, return
  1107  13E3  0604               	xorwf	4,w	;XOR again to restore value
  1108  13E4  2BDE               	goto	clrloop0	;do the next byte
  1109                           
  1110                           	psect	cstackCOMMON
  1111  0070                     __pcstackCOMMON:	
  1112  0070                     ?_clearDisplay:	
  1113  0070                     ?_resetCursor:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_writeMessage:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_LCDdelay3:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ??_LCDdelay3:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_writeMessageline1:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_writeMessageline2:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_LCDsetup:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_checkButtons:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ??_checkButtons:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_LCDdelay2:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ??_LCDdelay2:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_getTemperature:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_clockInit:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_Cinit:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_setTime:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_getTime:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_display:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_displayDate:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_writeChar:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_delay:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ??_delay:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_displayOn:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_turnon2linemode:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_writeCmd:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_delaySeconds:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_zone0OK:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_zone1OK:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_zone2OK:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_zone3OK:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_zone0Alert:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_zone1Alert:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_zone2Alert:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_zone3Alert:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_alarmOn:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_alarmOff:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_zone0Activate:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_zone1Activate:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_zone2Activate:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_zone3Activate:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_zone0Deactivate:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_zone1Deactivate:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_zone2Deactivate:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_zone3Deactivate:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_zoneActivate:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_modeSelect:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?_alarmOnOff:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_showTemp:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_showTime:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_showDate:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_checkZoneMessage:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_changeTriggerMessage:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_checkZones:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_checkZones2:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_activateZonesMode:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_activateZones:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_deactivateZones:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_changeTempMode:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_changeTemp:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_changeTimeMode:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ??_changeTimeMode:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_changeTime:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_changeDateMode:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ??_changeDateMode:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_changeDate:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_changeDelayMode:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ??_changeDelayMode:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_changeDelay:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_Return:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_buzzer2:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_init:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ??_init:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_main:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_LCDdelay:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ??_LCDdelay:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_buttonsetup:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ??_buttonsetup:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_buttondelay:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ??_buttondelay:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_writeTime:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ??_writeTime:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ?_readTime:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ??_readTime:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_tempDelay:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_reset:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_writeByte:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_readByte:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?___awdiv:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?___awmod:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0070                     checkButtons@rval:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380  0070                     tempDelay@y:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     delaySeconds@d:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     LCDdelay@i:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0070                     LCDdelay2@i:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392  0070                     LCDdelay3@i:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0070                     buttondelay@i:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398  0070                     delay@i:	
  1399                           ; 2 bytes @ 0x0
  1400                           
  1401  0070                     ___awdiv@divisor:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404  0070                     ___awmod@divisor:	
  1405                           ; 2 bytes @ 0x0
  1406                           
  1407                           
  1408                           ; 2 bytes @ 0x0
  1409  0070                     	ds	1
  1410  0071                     ??_tempDelay:	
  1411                           
  1412                           ; 1 bytes @ 0x1
  1413  0071                     	ds	1
  1414  0072                     ??_writeChar:	
  1415  0072                     ??_writeCmd:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418  0072                     ??_delaySeconds:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0072                     ??_buzzer2:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424  0072                     writeChar@var:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0072                     writeCmd@cmd:	
  1428                           ; 1 bytes @ 0x2
  1429                           
  1430  0072                     tempDelay@x:	
  1431                           ; 1 bytes @ 0x2
  1432                           
  1433  0072                     writeTime@i:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436  0072                     readTime@j:	
  1437                           ; 2 bytes @ 0x2
  1438                           
  1439  0072                     ___awdiv@dividend:	
  1440                           ; 2 bytes @ 0x2
  1441                           
  1442  0072                     ___awmod@dividend:	
  1443                           ; 2 bytes @ 0x2
  1444                           
  1445                           
  1446                           ; 2 bytes @ 0x2
  1447  0072                     	ds	1
  1448  0073                     ??_clearDisplay:	
  1449  0073                     ??_resetCursor:	
  1450                           ; 1 bytes @ 0x3
  1451                           
  1452  0073                     ??_writeMessage:	
  1453                           ; 1 bytes @ 0x3
  1454                           
  1455  0073                     ??_LCDsetup:	
  1456                           ; 1 bytes @ 0x3
  1457                           
  1458  0073                     ??_Cinit:	
  1459                           ; 1 bytes @ 0x3
  1460                           
  1461  0073                     ??_displayOn:	
  1462                           ; 1 bytes @ 0x3
  1463                           
  1464  0073                     ??_turnon2linemode:	
  1465                           ; 1 bytes @ 0x3
  1466                           
  1467  0073                     ??_Return:	
  1468                           ; 1 bytes @ 0x3
  1469                           
  1470  0073                     tempDelay@z:	
  1471                           ; 1 bytes @ 0x3
  1472                           
  1473  0073                     delaySeconds@i:	
  1474                           ; 1 bytes @ 0x3
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0x3
  1478  0073                     	ds	1
  1479  0074                     ??_reset:	
  1480  0074                     ??_writeByte:	
  1481                           ; 1 bytes @ 0x4
  1482                           
  1483  0074                     ??_readByte:	
  1484                           ; 1 bytes @ 0x4
  1485                           
  1486  0074                     ??___awdiv:	
  1487                           ; 1 bytes @ 0x4
  1488                           
  1489  0074                     ??___awmod:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492  0074                     writeTime@timeClock:	
  1493                           ; 1 bytes @ 0x4
  1494                           
  1495  0074                     writeMessage@i:	
  1496                           ; 1 bytes @ 0x4
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0x4
  1500  0074                     	ds	1
  1501  0075                     ??_clockInit:	
  1502  0075                     ??_setTime:	
  1503                           ; 1 bytes @ 0x5
  1504                           
  1505  0075                     ??_getTime:	
  1506                           ; 1 bytes @ 0x5
  1507                           
  1508  0075                     reset@presance:	
  1509                           ; 1 bytes @ 0x5
  1510                           
  1511  0075                     readByte@value:	
  1512                           ; 1 bytes @ 0x5
  1513                           
  1514  0075                     ___awdiv@counter:	
  1515                           ; 1 bytes @ 0x5
  1516                           
  1517  0075                     ___awmod@counter:	
  1518                           ; 1 bytes @ 0x5
  1519                           
  1520  0075                     delaySeconds@j:	
  1521                           ; 1 bytes @ 0x5
  1522                           
  1523  0075                     setTime@i:	
  1524                           ; 2 bytes @ 0x5
  1525                           
  1526                           
  1527                           ; 2 bytes @ 0x5
  1528  0075                     	ds	1
  1529  0076                     writeMessage@message:	
  1530  0076                     writeByte@temp:	
  1531                           ; 1 bytes @ 0x6
  1532                           
  1533  0076                     readByte@i:	
  1534                           ; 1 bytes @ 0x6
  1535                           
  1536  0076                     ___awdiv@sign:	
  1537                           ; 1 bytes @ 0x6
  1538                           
  1539  0076                     ___awmod@sign:	
  1540                           ; 1 bytes @ 0x6
  1541                           
  1542  0076                     getTime@i:	
  1543                           ; 1 bytes @ 0x6
  1544                           
  1545                           
  1546                           ; 2 bytes @ 0x6
  1547  0076                     	ds	1
  1548  0077                     ??_writeMessageline1:	
  1549  0077                     ??_writeMessageline2:	
  1550                           ; 1 bytes @ 0x7
  1551                           
  1552  0077                     ??_zone0OK:	
  1553                           ; 1 bytes @ 0x7
  1554                           
  1555  0077                     ??_zone1OK:	
  1556                           ; 1 bytes @ 0x7
  1557                           
  1558  0077                     ??_zone2OK:	
  1559                           ; 1 bytes @ 0x7
  1560                           
  1561  0077                     ??_zone3OK:	
  1562                           ; 1 bytes @ 0x7
  1563                           
  1564  0077                     ??_zone0Alert:	
  1565                           ; 1 bytes @ 0x7
  1566                           
  1567  0077                     ??_zone1Alert:	
  1568                           ; 1 bytes @ 0x7
  1569                           
  1570  0077                     ??_zone2Alert:	
  1571                           ; 1 bytes @ 0x7
  1572                           
  1573  0077                     ??_zone3Alert:	
  1574                           ; 1 bytes @ 0x7
  1575                           
  1576  0077                     ??_alarmOn:	
  1577                           ; 1 bytes @ 0x7
  1578                           
  1579  0077                     ??_alarmOff:	
  1580                           ; 1 bytes @ 0x7
  1581                           
  1582  0077                     ??_zone0Activate:	
  1583                           ; 1 bytes @ 0x7
  1584                           
  1585  0077                     ??_zone1Activate:	
  1586                           ; 1 bytes @ 0x7
  1587                           
  1588  0077                     ??_zone2Activate:	
  1589                           ; 1 bytes @ 0x7
  1590                           
  1591  0077                     ??_zone3Activate:	
  1592                           ; 1 bytes @ 0x7
  1593                           
  1594  0077                     ??_zone0Deactivate:	
  1595                           ; 1 bytes @ 0x7
  1596                           
  1597  0077                     ??_zone1Deactivate:	
  1598                           ; 1 bytes @ 0x7
  1599                           
  1600  0077                     ??_zone2Deactivate:	
  1601                           ; 1 bytes @ 0x7
  1602                           
  1603  0077                     ??_zone3Deactivate:	
  1604                           ; 1 bytes @ 0x7
  1605                           
  1606  0077                     ??_zoneActivate:	
  1607                           ; 1 bytes @ 0x7
  1608                           
  1609  0077                     writeMessageline1@message:	
  1610                           ; 1 bytes @ 0x7
  1611                           
  1612  0077                     writeMessageline2@message:	
  1613                           ; 1 bytes @ 0x7
  1614                           
  1615  0077                     writeByte@value:	
  1616                           ; 1 bytes @ 0x7
  1617                           
  1618  0077                     ___awdiv@quotient:	
  1619                           ; 1 bytes @ 0x7
  1620                           
  1621  0077                     zoneActivate@message:	
  1622                           ; 2 bytes @ 0x7
  1623                           
  1624                           
  1625                           ; 5 bytes @ 0x7
  1626  0077                     	ds	1
  1627  0078                     ??_modeSelect:	
  1628  0078                     ??_checkZoneMessage:	
  1629                           ; 1 bytes @ 0x8
  1630                           
  1631  0078                     ??_changeTriggerMessage:	
  1632                           ; 1 bytes @ 0x8
  1633                           
  1634  0078                     writeByte@i:	
  1635                           ; 1 bytes @ 0x8
  1636                           
  1637  0078                     checkZoneMessage@messagerow:	
  1638                           ; 1 bytes @ 0x8
  1639                           
  1640                           
  1641                           ; 6 bytes @ 0x8
  1642  0078                     	ds	1
  1643  0079                     ??_getTemperature:	
  1644  0079                     ??_display:	
  1645                           ; 1 bytes @ 0x9
  1646                           
  1647  0079                     ??_displayDate:	
  1648                           ; 1 bytes @ 0x9
  1649                           
  1650  0079                     ??_changeTemp:	
  1651                           ; 1 bytes @ 0x9
  1652                           
  1653  0079                     ??_changeTime:	
  1654                           ; 1 bytes @ 0x9
  1655                           
  1656  0079                     ??_changeDate:	
  1657                           ; 1 bytes @ 0x9
  1658                           
  1659  0079                     ??_changeDelay:	
  1660                           ; 1 bytes @ 0x9
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x9
  1664  0079                     	ds	2
  1665  007B                     ??_checkZones2:	
  1666  007B                     ??_activateZones:	
  1667                           ; 1 bytes @ 0xB
  1668                           
  1669  007B                     ??_deactivateZones:	
  1670                           ; 1 bytes @ 0xB
  1671                           
  1672                           
  1673                           ; 1 bytes @ 0xB
  1674  007B                     	ds	1
  1675  007C                     ??_alarmOnOff:	
  1676  007C                     ??_showTemp:	
  1677                           ; 1 bytes @ 0xC
  1678                           
  1679  007C                     ??_showTime:	
  1680                           ; 1 bytes @ 0xC
  1681                           
  1682  007C                     ??_showDate:	
  1683                           ; 1 bytes @ 0xC
  1684                           
  1685  007C                     ??_activateZonesMode:	
  1686                           ; 1 bytes @ 0xC
  1687                           
  1688  007C                     ??_changeTempMode:	
  1689                           ; 1 bytes @ 0xC
  1690                           
  1691  007C                     changeTemp@tens:	
  1692                           ; 1 bytes @ 0xC
  1693                           
  1694  007C                     changeDelay@tens:	
  1695                           ; 1 bytes @ 0xC
  1696                           
  1697                           
  1698                           ; 1 bytes @ 0xC
  1699  007C                     	ds	1
  1700  007D                     changeTemp@units:	
  1701  007D                     changeDelay@units:	
  1702                           ; 1 bytes @ 0xD
  1703                           
  1704                           
  1705                           ; 1 bytes @ 0xD
  1706  007D                     	ds	1
  1707  007E                     ??_checkZones:	
  1708                           
  1709                           	psect	cstackBANK0h
  1710  0052                     __pcstackBANK0h:	
  1711                           ; 1 bytes @ 0xE
  1712                           
  1713  0052                     changeTime@sectens:	
  1714  0052                     changeDate@daytens:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0052                     display@tens:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0052                     displayDate@tens:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0052                     getTemperature@decimal:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0052                     alarmOn@message:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0052                     zone0OK@message:	
  1730                           ; 9 bytes @ 0x0
  1731                           
  1732  0052                     zone1OK@message:	
  1733                           ; 10 bytes @ 0x0
  1734                           
  1735  0052                     zone2OK@message:	
  1736                           ; 10 bytes @ 0x0
  1737                           
  1738  0052                     zone3OK@message:	
  1739                           ; 10 bytes @ 0x0
  1740                           
  1741  0052                     alarmOff@message:	
  1742                           ; 10 bytes @ 0x0
  1743                           
  1744  0052                     zone0Activate@message:	
  1745                           ; 10 bytes @ 0x0
  1746                           
  1747  0052                     zone1Activate@message:	
  1748                           ; 10 bytes @ 0x0
  1749                           
  1750  0052                     zone2Activate@message:	
  1751                           ; 10 bytes @ 0x0
  1752                           
  1753  0052                     zone3Activate@message:	
  1754                           ; 10 bytes @ 0x0
  1755                           
  1756  0052                     zone0Deactivate@message:	
  1757                           ; 10 bytes @ 0x0
  1758                           
  1759  0052                     zone1Deactivate@message:	
  1760                           ; 11 bytes @ 0x0
  1761                           
  1762  0052                     zone2Deactivate@message:	
  1763                           ; 11 bytes @ 0x0
  1764                           
  1765  0052                     zone3Deactivate@message:	
  1766                           ; 11 bytes @ 0x0
  1767                           
  1768  0052                     modeSelect@messagecol:	
  1769                           ; 11 bytes @ 0x0
  1770                           
  1771  0052                     changeTriggerMessage@messagerow:	
  1772                           ; 12 bytes @ 0x0
  1773                           
  1774  0052                     zone0Alert@message:	
  1775                           ; 12 bytes @ 0x0
  1776                           
  1777  0052                     zone1Alert@message:	
  1778                           ; 13 bytes @ 0x0
  1779                           
  1780  0052                     zone2Alert@message:	
  1781                           ; 13 bytes @ 0x0
  1782                           
  1783  0052                     zone3Alert@message:	
  1784                           ; 13 bytes @ 0x0
  1785                           
  1786                           
  1787                           ; 13 bytes @ 0x0
  1788  0052                     	ds	1
  1789  0053                     changeTime@secunits:	
  1790  0053                     changeDate@dayunits:	
  1791                           ; 1 bytes @ 0x1
  1792                           
  1793  0053                     display@units:	
  1794                           ; 1 bytes @ 0x1
  1795                           
  1796  0053                     displayDate@units:	
  1797                           ; 1 bytes @ 0x1
  1798                           
  1799  0053                     getTemperature@tens:	
  1800                           ; 1 bytes @ 0x1
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x1
  1804  0053                     	ds	1
  1805  0054                     changeTime@mintens:	
  1806  0054                     changeDate@montens:	
  1807                           ; 1 bytes @ 0x2
  1808                           
  1809  0054                     display@minutesTens:	
  1810                           ; 1 bytes @ 0x2
  1811                           
  1812  0054                     displayDate@minutesTens:	
  1813                           ; 1 bytes @ 0x2
  1814                           
  1815  0054                     getTemperature@units:	
  1816                           ; 1 bytes @ 0x2
  1817                           
  1818                           
  1819                           ; 1 bytes @ 0x2
  1820  0054                     	ds	1
  1821  0055                     changeTime@minunits:	
  1822  0055                     changeDate@monunits:	
  1823                           ; 1 bytes @ 0x3
  1824                           
  1825  0055                     display@minutesUnits:	
  1826                           ; 1 bytes @ 0x3
  1827                           
  1828  0055                     displayDate@minutesUnits:	
  1829                           ; 1 bytes @ 0x3
  1830                           
  1831  0055                     getTemperature@tensDecimal:	
  1832                           ; 1 bytes @ 0x3
  1833                           
  1834                           
  1835                           ; 1 bytes @ 0x3
  1836  0055                     	ds	1
  1837  0056                     changeTime@hourtens:	
  1838  0056                     changeDate@yeartens:	
  1839                           ; 1 bytes @ 0x4
  1840                           
  1841  0056                     display@hoursTens:	
  1842                           ; 1 bytes @ 0x4
  1843                           
  1844  0056                     displayDate@hoursTens:	
  1845                           ; 1 bytes @ 0x4
  1846                           
  1847                           
  1848                           ; 1 bytes @ 0x4
  1849  0056                     	ds	1
  1850  0057                     changeTime@hourunits:	
  1851  0057                     changeDate@yearunits:	
  1852                           ; 1 bytes @ 0x5
  1853                           
  1854  0057                     display@hoursUnits:	
  1855                           ; 1 bytes @ 0x5
  1856                           
  1857  0057                     displayDate@hoursUnits:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860                           
  1861                           ; 1 bytes @ 0x5
  1862  0057                     	ds	1
  1863  0058                     display@value:	
  1864  0058                     displayDate@value:	
  1865                           ; 1 bytes @ 0x6
  1866                           
  1867                           
  1868                           ; 1 bytes @ 0x6
  1869  0058                     	ds	1
  1870  0059                     display@value1:	
  1871  0059                     displayDate@value1:	
  1872                           ; 1 bytes @ 0x7
  1873                           
  1874                           
  1875                           ; 1 bytes @ 0x7
  1876  0059                     	ds	1
  1877  005A                     display@value2:	
  1878  005A                     displayDate@value2:	
  1879                           ; 1 bytes @ 0x8
  1880                           
  1881                           
  1882                           ; 1 bytes @ 0x8
  1883  005A                     	ds	4
  1884  005E                     modeSelect@messagerow:	
  1885                           
  1886                           ; 9 bytes @ 0xC
  1887  005E                     	ds	9
  1888  0067                     ??_main:	
  1889                           
  1890                           ; 1 bytes @ 0x15
  1891  0067                     	ds	2
  1892                           
  1893                           	psect	maintext
  1894  00CE                     __pmaintext:	
  1895 ;;
  1896 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1897 ;;
  1898 ;; *************** function _main *****************
  1899 ;; Defined at:
  1900 ;;		line 815 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : B00/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0
  1916 ;;      Temps:          0       2       0       0       0       0
  1917 ;;      Totals:         0       2       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels required when called:    6
  1920 ;; This function calls:
  1921 ;;		_LCDsetup
  1922 ;;		_Return
  1923 ;;		_activateZones
  1924 ;;		_activateZonesMode
  1925 ;;		_alarmOnOff
  1926 ;;		_buzzer2
  1927 ;;		_changeDate
  1928 ;;		_changeDateMode
  1929 ;;		_changeDelay
  1930 ;;		_changeDelayMode
  1931 ;;		_changeTemp
  1932 ;;		_changeTempMode
  1933 ;;		_changeTime
  1934 ;;		_changeTimeMode
  1935 ;;		_checkButtons
  1936 ;;		_checkZones
  1937 ;;		_checkZones2
  1938 ;;		_deactivateZones
  1939 ;;		_delaySeconds
  1940 ;;		_init
  1941 ;;		_showDate
  1942 ;;		_showTemp
  1943 ;;		_showTime
  1944 ;; This function is called by:
  1945 ;;		Startup code after reset
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _main
  1951  00CE                     _main:	
  1952                           
  1953                           ;main.c: 816: LCDsetup ();
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1957  00CE  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  1958  00D3                     l387:	
  1959                           ;main.c: 817: while(1){
  1960                           
  1961                           
  1962                           ;main.c: 818: checkButtons ();
  1963  00D3  120A  158A  26E1  120A  118A  	fcall	_checkButtons
  1964                           
  1965                           ;main.c: 820: alarmOnOff ();
  1966  00D8  120A  158A  21B4  120A  118A  	fcall	_alarmOnOff
  1967                           
  1968                           ;main.c: 823: checkZones ();
  1969  00DD  160A  118A  25A9  120A  118A  	fcall	_checkZones
  1970                           
  1971                           ;main.c: 825: if (zoneCheck == 1)
  1972  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1973  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1974  00E4  034A               	decf	_zoneCheck,w
  1975  00E5  1D03               	btfss	3,2
  1976  00E6  28EC               	goto	l388
  1977                           
  1978                           ;main.c: 826: {
  1979                           ;main.c: 827: checkZones2();
  1980  00E7  120A  158A  266B  120A  118A  	fcall	_checkZones2
  1981  00EC                     l388:	
  1982                           
  1983                           ;main.c: 828: }
  1984                           ;main.c: 829: activateZonesMode();
  1985  00EC  160A  118A  25CD  120A  118A  	fcall	_activateZonesMode
  1986                           
  1987                           ;main.c: 831: if (zoneActMode == 1)
  1988  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1989  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1990  00F3  034B               	decf	_zoneActMode,w
  1991  00F4  1D03               	btfss	3,2
  1992  00F5  2900               	goto	l389
  1993                           
  1994                           ;main.c: 832: {
  1995                           ;main.c: 833: activateZones();
  1996  00F6  120A  158A  25B2  120A  118A  	fcall	_activateZones
  1997                           
  1998                           ;main.c: 834: deactivateZones();
  1999  00FB  120A  158A  24A9  120A  118A  	fcall	_deactivateZones
  2000  0100                     l389:	
  2001                           
  2002                           ;main.c: 835: }
  2003                           ;main.c: 836: changeTempMode ();
  2004  0100  160A  118A  25F2  120A  118A  	fcall	_changeTempMode
  2005                           
  2006                           ;main.c: 837: if (tempChange == 1){
  2007  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0107  0341               	decf	_tempChange,w
  2010  0108  1D03               	btfss	3,2
  2011  0109  290F               	goto	l390
  2012                           
  2013                           ;main.c: 838: changeTemp();
  2014  010A  120A  118A  2035  120A  118A  	fcall	_changeTemp
  2015  010F                     l390:	
  2016                           
  2017                           ;main.c: 839: }
  2018                           ;main.c: 840: changeTimeMode ();
  2019  010F  160A  118A  2585  120A  118A  	fcall	_changeTimeMode
  2020                           
  2021                           ;main.c: 841: if (timeChange == 1){
  2022  0114  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0115  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0116  0340               	decf	_timeChange,w
  2025  0117  1D03               	btfss	3,2
  2026  0118  291E               	goto	l391
  2027                           
  2028                           ;main.c: 842: changeTime();
  2029  0119  120A  118A  25D1  120A  118A  	fcall	_changeTime
  2030  011E                     l391:	
  2031                           
  2032                           ;main.c: 843: }
  2033                           ;main.c: 844: changeDateMode ();
  2034  011E  160A  118A  2561  120A  118A  	fcall	_changeDateMode
  2035                           
  2036                           ;main.c: 845: if (dateChange == 1){
  2037  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0125  033F               	decf	_dateChange,w
  2040  0126  1D03               	btfss	3,2
  2041  0127  292D               	goto	l392
  2042                           
  2043                           ;main.c: 846: changeDate();
  2044  0128  120A  118A  23F4  120A  118A  	fcall	_changeDate
  2045  012D                     l392:	
  2046                           
  2047                           ;main.c: 847: }
  2048                           ;main.c: 849: changeDelayMode();
  2049  012D  160A  118A  24FB  120A  118A  	fcall	_changeDelayMode
  2050                           
  2051                           ;main.c: 850: if (delayChange == 1) {
  2052  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0133  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0134  033E               	decf	_delayChange,w
  2055  0135  1D03               	btfss	3,2
  2056  0136  293C               	goto	l5391
  2057                           
  2058                           ;main.c: 851: changeDelay();
  2059  0137  120A  158A  2767  120A  118A  	fcall	_changeDelay
  2060  013C                     l5391:	
  2061                           
  2062                           ;main.c: 852: }
  2063                           ;main.c: 853: showTemp();
  2064  013C  120A  158A  2000  120A  118A  	fcall	_showTemp
  2065                           
  2066                           ;main.c: 854: showTime();
  2067  0141  120A  158A  2328  120A  118A  	fcall	_showTime
  2068                           
  2069                           ;main.c: 855: showDate();
  2070  0146  120A  158A  22F0  120A  118A  	fcall	_showDate
  2071                           
  2072                           ;main.c: 857: Return ();
  2073  014B  160A  118A  24C1  120A  118A  	fcall	_Return
  2074                           
  2075                           ;main.c: 858: init();
  2076  0150  160A  118A  23BA  120A  118A  	fcall	_init
  2077                           
  2078                           ;main.c: 859: if (tempValue >= TriggerTemp) {
  2079  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0157  083D               	movf	_TriggerTemp,w
  2082  0158  024E               	subwf	_tempValue,w
  2083  0159  1C03               	skipc
  2084  015A  28D3               	goto	l387
  2085                           
  2086                           ;main.c: 860: if (zone0On == 1) {
  2087  015B  0349               	decf	_zone0On,w
  2088  015C  1D03               	btfss	3,2
  2089  015D  28D3               	goto	l387
  2090                           
  2091                           ;main.c: 861: zone0Alerted = 1;
  2092  015E  01C5               	clrf	_zone0Alerted
  2093  015F  0AC5               	incf	_zone0Alerted,f
  2094                           
  2095                           ;main.c: 862: delaySeconds(delayValue);
  2096  0160  083C               	movf	_delayValue,w
  2097  0161  00E7               	movwf	??_main
  2098  0162  01E8               	clrf	??_main+1
  2099  0163  0867               	movf	??_main,w
  2100  0164  00F0               	movwf	delaySeconds@d
  2101  0165  0868               	movf	??_main+1,w
  2102  0166  00F1               	movwf	delaySeconds@d+1
  2103  0167  120A  158A  21E2  120A  118A  	fcall	_delaySeconds
  2104                           
  2105                           ;main.c: 863: buzzer2();
  2106  016C  160A  118A  247F  120A  118A  	fcall	_buzzer2
  2107  0171  28D3               	goto	l387
  2108  0172                     __end_of_main:	
  2109                           
  2110                           	psect	text1
  2111  0B28                     __ptext1:	
  2112 ;; *************** function _showTime *****************
  2113 ;; Defined at:
  2114 ;;		line 309 in file "main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    3
  2135 ;; This function calls:
  2136 ;;		_Cinit
  2137 ;;		_clockInit
  2138 ;;		_display
  2139 ;;		_getTime
  2140 ;;		_setTime
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _showTime
  2148  0B28                     _showTime:	
  2149                           
  2150                           ;main.c: 310: if (row == 4 && col == 2) {
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _showTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2154  0B28  3004               	movlw	4
  2155  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0B2B  0638               	xorwf	_row,w
  2158  0B2C  0439               	iorwf	_row+1,w
  2159  0B2D  1D03               	btfss	3,2
  2160  0B2E  0008               	return
  2161  0B2F  3002               	movlw	2
  2162  0B30  063A               	xorwf	_col,w
  2163  0B31  043B               	iorwf	_col+1,w
  2164  0B32  1D03               	btfss	3,2
  2165  0B33  0008               	return
  2166                           
  2167                           ;main.c: 311: if (zoneActMode == 0 && tempChange == 0 && delayChange == 0 && timeChange 
      +                          == 0 && dateChange == 0 && zoneCheck == 0) {
  2168  0B34  084B               	movf	_zoneActMode,w
  2169  0B35  1D03               	btfss	3,2
  2170  0B36  0008               	return
  2171  0B37  0841               	movf	_tempChange,w
  2172  0B38  1D03               	btfss	3,2
  2173  0B39  0008               	return
  2174  0B3A  083E               	movf	_delayChange,w
  2175  0B3B  1D03               	btfss	3,2
  2176  0B3C  0008               	return
  2177  0B3D  0840               	movf	_timeChange,w
  2178  0B3E  1D03               	btfss	3,2
  2179  0B3F  0008               	return
  2180  0B40  083F               	movf	_dateChange,w
  2181  0B41  1D03               	btfss	3,2
  2182  0B42  0008               	return
  2183  0B43  084A               	movf	_zoneCheck,w
  2184  0B44  1D03               	btfss	3,2
  2185  0B45  0008               	return
  2186                           
  2187                           ;main.c: 312: clockInit();
  2188  0B46  160A  118A  2458  120A  158A  	fcall	_clockInit
  2189                           
  2190                           ;main.c: 313: Cinit();
  2191  0B4B  160A  118A  2617  120A  158A  	fcall	_Cinit
  2192                           
  2193                           ;main.c: 314: setTime();
  2194  0B50  120A  158A  22B8  120A  158A  	fcall	_setTime
  2195  0B55                     l4767:	
  2196                           ;main.c: 315: while (1) {
  2197                           
  2198                           
  2199                           ;main.c: 316: getTime();
  2200  0B55  120A  158A  224A  120A  158A  	fcall	_getTime
  2201                           
  2202                           ;main.c: 317: display();
  2203  0B5A  120A  118A  223B  120A  158A  	fcall	_display
  2204  0B5F  2B55               	goto	l4767
  2205  0B60                     __end_of_showTime:	
  2206                           
  2207                           	psect	text2
  2208  023B                     __ptext2:	
  2209 ;; *************** function _display *****************
  2210 ;; Defined at:
  2211 ;;		line 113 in file "clock.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  i               2    0        int 
  2216 ;;  value2          1    8[BANK0h] unsigned char 
  2217 ;;  value1          1    7[BANK0h] unsigned char 
  2218 ;;  value           1    6[BANK0h] unsigned char 
  2219 ;;  hoursUnits      1    5[BANK0h] unsigned char 
  2220 ;;  hoursTens       1    4[BANK0h] unsigned char 
  2221 ;;  minutesUnits    1    3[BANK0h] unsigned char 
  2222 ;;  minutesTens     1    2[BANK0h] unsigned char 
  2223 ;;  units           1    1[BANK0h] unsigned char 
  2224 ;;  tens            1    0[BANK0h] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       0       0       0       0       0
  2235 ;;      Locals:         0       9       0       0       0       0
  2236 ;;      Temps:          3       0       0       0       0       0
  2237 ;;      Totals:         3       9       0       0       0       0
  2238 ;;Total ram usage:       12 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		___awdiv
  2243 ;;		_buttondelay
  2244 ;;		_writeChar
  2245 ;;		_writeCmd
  2246 ;; This function is called by:
  2247 ;;		_showTime
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _display
  2253  023B                     _display:	
  2254                           
  2255                           ;clock.c: 115: int i;
  2256                           ;clock.c: 117: if(row == 4 && col == 1)
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
  2260  023B  3004               	movlw	4
  2261  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2262  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2263  023E  0638               	xorwf	_row,w
  2264  023F  0439               	iorwf	_row+1,w
  2265  0240  1D03               	btfss	3,2
  2266  0241  2A52               	goto	l624
  2267  0242  033A               	decf	_col,w
  2268  0243  043B               	iorwf	_col+1,w
  2269  0244  1D03               	btfss	3,2
  2270  0245  2A52               	goto	l624
  2271                           
  2272                           ;clock.c: 118: {
  2273                           ;clock.c: 119: table1[0]=table1[3];
  2274  0246  0834               	movf	_table1+3,w
  2275  0247  00F9               	movwf	??_display
  2276  0248  0879               	movf	??_display,w
  2277  0249  00B1               	movwf	_table1
  2278                           
  2279                           ;clock.c: 120: table1[1]=table1[4];
  2280  024A  0835               	movf	_table1+4,w
  2281  024B  00F9               	movwf	??_display
  2282  024C  0879               	movf	??_display,w
  2283  024D  00B2               	movwf	_table1+1
  2284                           
  2285                           ;clock.c: 121: table1[2]=table1[6];
  2286  024E  0837               	movf	_table1+6,w
  2287  024F  00F9               	movwf	??_display
  2288  0250  0879               	movf	??_display,w
  2289  0251  00B3               	movwf	_table1+2
  2290  0252                     l624:	
  2291                           
  2292                           ;clock.c: 122: }
  2293                           ;clock.c: 124: value = table1[0];
  2294  0252  0831               	movf	_table1,w
  2295  0253  00F9               	movwf	??_display
  2296  0254  0879               	movf	??_display,w
  2297  0255  00D1               	movwf	_value
  2298                           
  2299                           ;clock.c: 125: if (value > 100)
  2300  0256  3065               	movlw	101
  2301  0257  0251               	subwf	_value,w
  2302  0258  1C03               	skipc
  2303  0259  2A70               	goto	l4611
  2304                           
  2305                           ;clock.c: 126: {
  2306                           ;clock.c: 127: value = value / 100;
  2307  025A  3064               	movlw	100
  2308  025B  00F0               	movwf	___awdiv@divisor
  2309  025C  3000               	movlw	0
  2310  025D  00F1               	movwf	___awdiv@divisor+1
  2311  025E  0851               	movf	_value,w
  2312  025F  00F9               	movwf	??_display
  2313  0260  01FA               	clrf	??_display+1
  2314  0261  0879               	movf	??_display,w
  2315  0262  00F2               	movwf	___awdiv@dividend
  2316  0263  087A               	movf	??_display+1,w
  2317  0264  00F3               	movwf	___awdiv@dividend+1
  2318  0265  120A  158A  2500  120A  118A  	fcall	___awdiv
  2319  026A  0870               	movf	?___awdiv,w
  2320  026B  00FB               	movwf	??_display+2
  2321  026C  087B               	movf	??_display+2,w
  2322  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2323  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2324  026F  00D1               	movwf	_value
  2325  0270                     l4611:	
  2326                           
  2327                           ;clock.c: 128: }
  2328                           ;clock.c: 130: char value = table1[0];
  2329  0270  0831               	movf	_table1,w
  2330  0271  00F9               	movwf	??_display
  2331  0272  0879               	movf	??_display,w
  2332  0273  00D8               	movwf	display@value
  2333                           
  2334                           ;clock.c: 131: char tens = (value >> 4)&0x07;
  2335  0274  0858               	movf	display@value,w
  2336  0275  00F9               	movwf	??_display
  2337  0276  3004               	movlw	4
  2338  0277                     u5875:	
  2339  0277  1003               	clrc
  2340  0278  0CF9               	rrf	??_display,f
  2341  0279  3EFF               	addlw	-1
  2342  027A  1D03               	skipz
  2343  027B  2A77               	goto	u5875
  2344  027C  0879               	movf	??_display,w
  2345  027D  3907               	andlw	7
  2346  027E  00FA               	movwf	??_display+1
  2347  027F  087A               	movf	??_display+1,w
  2348  0280  00D2               	movwf	display@tens
  2349                           
  2350                           ;clock.c: 132: char units = (value & 0x0f);
  2351  0281  0858               	movf	display@value,w
  2352  0282  390F               	andlw	15
  2353  0283  00F9               	movwf	??_display
  2354  0284  0879               	movf	??_display,w
  2355  0285  00D3               	movwf	display@units
  2356                           
  2357                           ;clock.c: 134: char value1 = table1[1];
  2358  0286  0832               	movf	_table1+1,w
  2359  0287  00F9               	movwf	??_display
  2360  0288  0879               	movf	??_display,w
  2361  0289  00D9               	movwf	display@value1
  2362                           
  2363                           ;clock.c: 135: char minutesTens = (value1 >> 4)&0x07;
  2364  028A  0859               	movf	display@value1,w
  2365  028B  00F9               	movwf	??_display
  2366  028C  3004               	movlw	4
  2367  028D                     u5885:	
  2368  028D  1003               	clrc
  2369  028E  0CF9               	rrf	??_display,f
  2370  028F  3EFF               	addlw	-1
  2371  0290  1D03               	skipz
  2372  0291  2A8D               	goto	u5885
  2373  0292  0879               	movf	??_display,w
  2374  0293  3907               	andlw	7
  2375  0294  00FA               	movwf	??_display+1
  2376  0295  087A               	movf	??_display+1,w
  2377  0296  00D4               	movwf	display@minutesTens
  2378                           
  2379                           ;clock.c: 136: char minutesUnits = (value1 & 0x0f);
  2380  0297  0859               	movf	display@value1,w
  2381  0298  390F               	andlw	15
  2382  0299  00F9               	movwf	??_display
  2383  029A  0879               	movf	??_display,w
  2384  029B  00D5               	movwf	display@minutesUnits
  2385                           
  2386                           ;clock.c: 138: char value2 = table1[2];
  2387  029C  0833               	movf	_table1+2,w
  2388  029D  00F9               	movwf	??_display
  2389  029E  0879               	movf	??_display,w
  2390  029F  00DA               	movwf	display@value2
  2391                           
  2392                           ;clock.c: 139: char hoursTens = (value2 >> 4)&0x07;
  2393  02A0  085A               	movf	display@value2,w
  2394  02A1  00F9               	movwf	??_display
  2395  02A2  3004               	movlw	4
  2396  02A3                     u5895:	
  2397  02A3  1003               	clrc
  2398  02A4  0CF9               	rrf	??_display,f
  2399  02A5  3EFF               	addlw	-1
  2400  02A6  1D03               	skipz
  2401  02A7  2AA3               	goto	u5895
  2402  02A8  0879               	movf	??_display,w
  2403  02A9  3907               	andlw	7
  2404  02AA  00FA               	movwf	??_display+1
  2405  02AB  087A               	movf	??_display+1,w
  2406  02AC  00D6               	movwf	display@hoursTens
  2407                           
  2408                           ;clock.c: 140: char hoursUnits = (value2 & 0x0f);
  2409  02AD  085A               	movf	display@value2,w
  2410  02AE  390F               	andlw	15
  2411  02AF  00F9               	movwf	??_display
  2412  02B0  0879               	movf	??_display,w
  2413  02B1  00D7               	movwf	display@hoursUnits
  2414                           
  2415                           ;clock.c: 142: __nop();
  2416  02B2  0000               	nop
  2417                           
  2418                           ;clock.c: 143: writeChar('\'' + tens - 30 + '\'');
  2419  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2420  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2421  02B5  0852               	movf	display@tens,w
  2422  02B6  3E30               	addlw	48
  2423  02B7  160A  118A  253D  120A  118A  	fcall	_writeChar
  2424                           
  2425                           ;clock.c: 144: writeChar('\'' + units - 30 + '\'');
  2426  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2427  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2428  02BE  0853               	movf	display@units,w
  2429  02BF  3E30               	addlw	48
  2430  02C0  160A  118A  253D  120A  118A  	fcall	_writeChar
  2431                           
  2432                           ;clock.c: 145: writeChar(':');
  2433  02C5  303A               	movlw	58
  2434  02C6  160A  118A  253D  120A  118A  	fcall	_writeChar
  2435                           
  2436                           ;clock.c: 146: writeChar('\'' + minutesTens - 30 + '\'');
  2437  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2438  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2439  02CD  0854               	movf	display@minutesTens,w
  2440  02CE  3E30               	addlw	48
  2441  02CF  160A  118A  253D  120A  118A  	fcall	_writeChar
  2442                           
  2443                           ;clock.c: 147: writeChar('\'' + minutesUnits - 30 + '\'');
  2444  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2445  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2446  02D6  0855               	movf	display@minutesUnits,w
  2447  02D7  3E30               	addlw	48
  2448  02D8  160A  118A  253D  120A  118A  	fcall	_writeChar
  2449                           
  2450                           ;clock.c: 148: writeChar(':');
  2451  02DD  303A               	movlw	58
  2452  02DE  160A  118A  253D  120A  118A  	fcall	_writeChar
  2453                           
  2454                           ;clock.c: 149: writeChar('\'' + hoursTens - 30 + '\'');
  2455  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2456  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2457  02E5  0856               	movf	display@hoursTens,w
  2458  02E6  3E30               	addlw	48
  2459  02E7  160A  118A  253D  120A  118A  	fcall	_writeChar
  2460                           
  2461                           ;clock.c: 150: writeChar('\'' + hoursUnits - 30 + '\'');
  2462  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2463  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2464  02EE  0857               	movf	display@hoursUnits,w
  2465  02EF  3E30               	addlw	48
  2466  02F0  160A  118A  253D  120A  118A  	fcall	_writeChar
  2467                           
  2468                           ;clock.c: 151: buttondelay();
  2469  02F5  160A  118A  2437  120A  118A  	fcall	_buttondelay
  2470                           
  2471                           ;clock.c: 152: buttondelay();
  2472  02FA  160A  118A  2437  120A  118A  	fcall	_buttondelay
  2473                           
  2474                           ;clock.c: 153: writeCmd(0x01);
  2475  02FF  3001               	movlw	1
  2476  0300  160A  118A  251B   	fcall	_writeCmd
  2477  0303  0008               	return
  2478  0304                     __end_of_display:	
  2479                           
  2480                           	psect	text3
  2481  0800                     __ptext3:	
  2482 ;; *************** function _showTemp *****************
  2483 ;; Defined at:
  2484 ;;		line 283 in file "main.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2498 ;;      Params:         0       0       0       0       0       0
  2499 ;;      Locals:         0       0       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0
  2501 ;;      Totals:         0       0       0       0       0       0
  2502 ;;Total ram usage:        0 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    3
  2505 ;; This function calls:
  2506 ;;		_getTemperature
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _showTemp
  2514  0800                     _showTemp:	
  2515                           
  2516                           ;main.c: 284: if (row == 2 && col == 4) {
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _showTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2520  0800  3002               	movlw	2
  2521  0801  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0802  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0803  0638               	xorwf	_row,w
  2524  0804  0439               	iorwf	_row+1,w
  2525  0805  1D03               	btfss	3,2
  2526  0806  0008               	return
  2527  0807  3004               	movlw	4
  2528  0808  063A               	xorwf	_col,w
  2529  0809  043B               	iorwf	_col+1,w
  2530  080A  1D03               	btfss	3,2
  2531  080B  0008               	return
  2532                           
  2533                           ;main.c: 290: getTemperature();
  2534  080C  120A  118A  2304   	fcall	_getTemperature
  2535  080F  0008               	return
  2536  0810                     __end_of_showTemp:	
  2537                           
  2538                           	psect	text4
  2539  0304                     __ptext4:	
  2540 ;; *************** function _getTemperature *****************
  2541 ;; Defined at:
  2542 ;;		line 164 in file "temperature.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  tensDecimal     1    3[BANK0h] unsigned char 
  2547 ;;  units           1    2[BANK0h] unsigned char 
  2548 ;;  tens            1    1[BANK0h] unsigned char 
  2549 ;;  decimal         1    0[BANK0h] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       0       0       0       0       0
  2560 ;;      Locals:         0       4       0       0       0       0
  2561 ;;      Temps:          3       0       0       0       0       0
  2562 ;;      Totals:         3       4       0       0       0       0
  2563 ;;Total ram usage:        7 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    2
  2566 ;; This function calls:
  2567 ;;		___awdiv
  2568 ;;		___awmod
  2569 ;;		_delay
  2570 ;;		_readByte
  2571 ;;		_reset
  2572 ;;		_tempDelay
  2573 ;;		_writeByte
  2574 ;;		_writeChar
  2575 ;; This function is called by:
  2576 ;;		_showTemp
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _getTemperature
  2582  0304                     _getTemperature:	
  2583                           
  2584                           ;temperature.c: 166: reset();
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _getTemperature: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2588  0304  120A  158A  2215  120A  118A  	fcall	_reset
  2589                           
  2590                           ;temperature.c: 167: writeByte(0xCC);
  2591  0309  30CC               	movlw	204
  2592  030A  120A  158A  2281  120A  118A  	fcall	_writeByte
  2593                           
  2594                           ;temperature.c: 168: writeByte(0x44);
  2595  030F  3044               	movlw	68
  2596  0310  120A  158A  2281  120A  118A  	fcall	_writeByte
  2597                           
  2598                           ;temperature.c: 169: tempDelay(2,70);
  2599  0315  3046               	movlw	70
  2600  0316  00F9               	movwf	??_getTemperature
  2601  0317  0879               	movf	??_getTemperature,w
  2602  0318  00F0               	movwf	tempDelay@y
  2603  0319  3002               	movlw	2
  2604  031A  160A  118A  23F9  120A  118A  	fcall	_tempDelay
  2605                           
  2606                           ;temperature.c: 170: reset();
  2607  031F  120A  158A  2215  120A  118A  	fcall	_reset
  2608                           
  2609                           ;temperature.c: 171: writeByte(0xCC);
  2610  0324  30CC               	movlw	204
  2611  0325  120A  158A  2281  120A  118A  	fcall	_writeByte
  2612                           
  2613                           ;temperature.c: 172: writeByte(0xBE);
  2614  032A  30BE               	movlw	190
  2615  032B  120A  158A  2281  120A  118A  	fcall	_writeByte
  2616                           
  2617                           ;temperature.c: 175: tempLow = readByte();
  2618  0330  120A  158A  2360  120A  118A  	fcall	_readByte
  2619  0335  00F9               	movwf	??_getTemperature
  2620  0336  0879               	movf	??_getTemperature,w
  2621  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0339  00D0               	movwf	_tempLow
  2624                           
  2625                           ;temperature.c: 176: tempHigh = readByte();
  2626  033A  120A  158A  2360  120A  118A  	fcall	_readByte
  2627  033F  00F9               	movwf	??_getTemperature
  2628  0340  0879               	movf	??_getTemperature,w
  2629  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0343  00CF               	movwf	_tempHigh
  2632                           
  2633                           ;temperature.c: 180: tempValue = (tempLow >> 4)| (tempHigh << 4);
  2634  0344  084F               	movf	_tempHigh,w
  2635  0345  00F9               	movwf	??_getTemperature
  2636  0346  3004               	movlw	4
  2637  0347                     u5795:	
  2638  0347  1003               	clrc
  2639  0348  0DF9               	rlf	??_getTemperature,f
  2640  0349  3EFF               	addlw	-1
  2641  034A  1D03               	skipz
  2642  034B  2B47               	goto	u5795
  2643  034C  0850               	movf	_tempLow,w
  2644  034D  00FA               	movwf	??_getTemperature+1
  2645  034E  3004               	movlw	4
  2646  034F                     u5805:	
  2647  034F  1003               	clrc
  2648  0350  0CFA               	rrf	??_getTemperature+1,f
  2649  0351  3EFF               	addlw	-1
  2650  0352  1D03               	skipz
  2651  0353  2B4F               	goto	u5805
  2652  0354  087A               	movf	??_getTemperature+1,w
  2653  0355  0479               	iorwf	??_getTemperature,w
  2654  0356  00FB               	movwf	??_getTemperature+2
  2655  0357  087B               	movf	??_getTemperature+2,w
  2656  0358  00CE               	movwf	_tempValue
  2657                           
  2658                           ;temperature.c: 182: char decimal = tempLow << 4;
  2659  0359  0850               	movf	_tempLow,w
  2660  035A  00F9               	movwf	??_getTemperature
  2661  035B  3003               	movlw	3
  2662  035C                     u5815:	
  2663  035C  1003               	clrc
  2664  035D  0DF9               	rlf	??_getTemperature,f
  2665  035E  3EFF               	addlw	-1
  2666  035F  1D03               	skipz
  2667  0360  2B5C               	goto	u5815
  2668  0361  1003               	clrc
  2669  0362  0D79               	rlf	??_getTemperature,w
  2670  0363  00FA               	movwf	??_getTemperature+1
  2671  0364  087A               	movf	??_getTemperature+1,w
  2672  0365  00D2               	movwf	getTemperature@decimal
  2673                           
  2674                           ;temperature.c: 184: if(tempValue > 100)
  2675  0366  3065               	movlw	101
  2676  0367  024E               	subwf	_tempValue,w
  2677  0368  1C03               	skipc
  2678  0369  2B80               	goto	l711
  2679                           
  2680                           ;temperature.c: 185: {
  2681                           ;temperature.c: 186: tempValue = tempValue / 100;
  2682  036A  3064               	movlw	100
  2683  036B  00F0               	movwf	___awdiv@divisor
  2684  036C  3000               	movlw	0
  2685  036D  00F1               	movwf	___awdiv@divisor+1
  2686  036E  084E               	movf	_tempValue,w
  2687  036F  00F9               	movwf	??_getTemperature
  2688  0370  01FA               	clrf	??_getTemperature+1
  2689  0371  0879               	movf	??_getTemperature,w
  2690  0372  00F2               	movwf	___awdiv@dividend
  2691  0373  087A               	movf	??_getTemperature+1,w
  2692  0374  00F3               	movwf	___awdiv@dividend+1
  2693  0375  120A  158A  2500  120A  118A  	fcall	___awdiv
  2694  037A  0870               	movf	?___awdiv,w
  2695  037B  00FB               	movwf	??_getTemperature+2
  2696  037C  087B               	movf	??_getTemperature+2,w
  2697  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2698  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2699  037F  00CE               	movwf	_tempValue
  2700  0380                     l711:	
  2701                           
  2702                           ;temperature.c: 187: }
  2703                           ;temperature.c: 190: char tens = tempValue/10;
  2704  0380  300A               	movlw	10
  2705  0381  00F0               	movwf	___awdiv@divisor
  2706  0382  3000               	movlw	0
  2707  0383  00F1               	movwf	___awdiv@divisor+1
  2708  0384  084E               	movf	_tempValue,w
  2709  0385  00F9               	movwf	??_getTemperature
  2710  0386  01FA               	clrf	??_getTemperature+1
  2711  0387  0879               	movf	??_getTemperature,w
  2712  0388  00F2               	movwf	___awdiv@dividend
  2713  0389  087A               	movf	??_getTemperature+1,w
  2714  038A  00F3               	movwf	___awdiv@dividend+1
  2715  038B  120A  158A  2500  120A  118A  	fcall	___awdiv
  2716  0390  0870               	movf	?___awdiv,w
  2717  0391  00FB               	movwf	??_getTemperature+2
  2718  0392  087B               	movf	??_getTemperature+2,w
  2719  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2721  0395  00D3               	movwf	getTemperature@tens
  2722                           
  2723                           ;temperature.c: 191: char units = tempValue%10;
  2724  0396  300A               	movlw	10
  2725  0397  00F0               	movwf	___awmod@divisor
  2726  0398  3000               	movlw	0
  2727  0399  00F1               	movwf	___awmod@divisor+1
  2728  039A  084E               	movf	_tempValue,w
  2729  039B  00F9               	movwf	??_getTemperature
  2730  039C  01FA               	clrf	??_getTemperature+1
  2731  039D  0879               	movf	??_getTemperature,w
  2732  039E  00F2               	movwf	___awmod@dividend
  2733  039F  087A               	movf	??_getTemperature+1,w
  2734  03A0  00F3               	movwf	___awmod@dividend+1
  2735  03A1  120A  158A  2411  120A  118A  	fcall	___awmod
  2736  03A6  0870               	movf	?___awmod,w
  2737  03A7  00FB               	movwf	??_getTemperature+2
  2738  03A8  087B               	movf	??_getTemperature+2,w
  2739  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2740  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2741  03AB  00D4               	movwf	getTemperature@units
  2742                           
  2743                           ;temperature.c: 194: if(decimal & 0x80)
  2744  03AC  1FD2               	btfss	getTemperature@decimal,7
  2745  03AD  2BB3               	goto	l4575
  2746                           
  2747                           ;temperature.c: 195: {
  2748                           ;temperature.c: 196: decimalNumber = decimalNumber + 5000;
  2749  03AE  084D               	movf	_decimalNumber,w
  2750  03AF  3E88               	addlw	136
  2751  03B0  00F9               	movwf	??_getTemperature
  2752  03B1  0879               	movf	??_getTemperature,w
  2753  03B2  00CD               	movwf	_decimalNumber
  2754  03B3                     l4575:	
  2755                           
  2756                           ;temperature.c: 197: }
  2757                           ;temperature.c: 198: char tensDecimal = decimalNumber/1000;
  2758  03B3  30E8               	movlw	232
  2759  03B4  00F0               	movwf	___awdiv@divisor
  2760  03B5  3003               	movlw	3
  2761  03B6  00F1               	movwf	___awdiv@divisor+1
  2762  03B7  084D               	movf	_decimalNumber,w
  2763  03B8  00F9               	movwf	??_getTemperature
  2764  03B9  01FA               	clrf	??_getTemperature+1
  2765  03BA  0879               	movf	??_getTemperature,w
  2766  03BB  00F2               	movwf	___awdiv@dividend
  2767  03BC  087A               	movf	??_getTemperature+1,w
  2768  03BD  00F3               	movwf	___awdiv@dividend+1
  2769  03BE  120A  158A  2500  120A  118A  	fcall	___awdiv
  2770  03C3  0870               	movf	?___awdiv,w
  2771  03C4  00FB               	movwf	??_getTemperature+2
  2772  03C5  087B               	movf	??_getTemperature+2,w
  2773  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2774  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2775  03C8  00D5               	movwf	getTemperature@tensDecimal
  2776                           
  2777                           ;temperature.c: 199: __nop();
  2778  03C9  0000               	nop
  2779                           
  2780                           ;temperature.c: 201: writeChar('\'' + tens - 30 + '\'');
  2781  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2782  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2783  03CC  0853               	movf	getTemperature@tens,w
  2784  03CD  3E30               	addlw	48
  2785  03CE  160A  118A  253D  120A  118A  	fcall	_writeChar
  2786                           
  2787                           ;temperature.c: 202: writeChar('\'' + units - 30 + '\'');
  2788  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2789  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2790  03D5  0854               	movf	getTemperature@units,w
  2791  03D6  3E30               	addlw	48
  2792  03D7  160A  118A  253D  120A  118A  	fcall	_writeChar
  2793                           
  2794                           ;temperature.c: 203: writeChar('.');
  2795  03DC  302E               	movlw	46
  2796  03DD  160A  118A  253D  120A  118A  	fcall	_writeChar
  2797                           
  2798                           ;temperature.c: 204: writeChar('\'' + tensDecimal - 30 + '\'');
  2799  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2800  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2801  03E4  0855               	movf	getTemperature@tensDecimal,w
  2802  03E5  3E30               	addlw	48
  2803  03E6  160A  118A  253D  120A  118A  	fcall	_writeChar
  2804                           
  2805                           ;temperature.c: 205: delay();
  2806  03EB  160A  118A  246B  120A  118A  	fcall	_delay
  2807                           
  2808                           ;temperature.c: 206: delay();
  2809  03F0  160A  118A  246B   	fcall	_delay
  2810  03F3  0008               	return
  2811  03F4                     __end_of_getTemperature:	
  2812                           
  2813                           	psect	text5
  2814  0A81                     __ptext5:	
  2815 ;; *************** function _writeByte *****************
  2816 ;; Defined at:
  2817 ;;		line 54 in file "temperature.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  value           1    wreg     unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  value           1    7[COMMON] unsigned char 
  2822 ;;  i               1    8[COMMON] unsigned char 
  2823 ;;  temp            1    6[COMMON] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, pclath, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       0       0       0       0       0
  2834 ;;      Locals:         3       0       0       0       0       0
  2835 ;;      Temps:          2       0       0       0       0       0
  2836 ;;      Totals:         5       0       0       0       0       0
  2837 ;;Total ram usage:        5 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    1
  2840 ;; This function calls:
  2841 ;;		_tempDelay
  2842 ;; This function is called by:
  2843 ;;		_getTemperature
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function _writeByte
  2849  0A81                     _writeByte:	
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _writeByte: [wreg+status,2+status,0+pclath+cstack]
  2853                           ;writeByte@value stored from wreg
  2854  0A81  00F7               	movwf	writeByte@value
  2855                           
  2856                           ;temperature.c: 56: char temp;
  2857                           ;temperature.c: 57: for(char i = 0; i < 8; ++i)
  2858  0A82  01F8               	clrf	writeByte@i
  2859  0A83                     L1:	
  2860  0A83  3008               	movlw	8
  2861  0A84  0278               	subwf	writeByte@i,w
  2862  0A85  1803               	btfsc	3,0
  2863  0A86  0008               	return
  2864                           
  2865                           ;temperature.c: 58: {
  2866                           ;temperature.c: 59: temp = value & 0x01;
  2867  0A87  0877               	movf	writeByte@value,w
  2868  0A88  3901               	andlw	1
  2869  0A89  00F4               	movwf	??_writeByte
  2870  0A8A  0874               	movf	??_writeByte,w
  2871  0A8B  00F6               	movwf	writeByte@temp
  2872                           
  2873                           ;temperature.c: 60: TRISA0 = 0;
  2874  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  2875  0A8D  1303               	bcf	3,6	;RP1=0, select bank1
  2876  0A8E  1005               	bcf	5,0	;volatile
  2877                           
  2878                           ;temperature.c: 61: RA0 = 0;
  2879  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0A90  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0A91  1005               	bcf	5,0	;volatile
  2882                           
  2883                           ;temperature.c: 62: __nop();
  2884  0A92  0000               	nop
  2885                           
  2886                           ;temperature.c: 63: __nop();
  2887  0A93  0000               	nop
  2888                           
  2889                           ;temperature.c: 64: __nop();
  2890  0A94  0000               	nop
  2891                           
  2892                           ;temperature.c: 65: __nop();
  2893  0A95  0000               	nop
  2894                           
  2895                           ;temperature.c: 66: __nop();
  2896  0A96  0000               	nop
  2897                           
  2898                           ;temperature.c: 68: if(temp == 1)
  2899  0A97  0376               	decf	writeByte@temp,w
  2900  0A98  1D03               	btfss	3,2
  2901  0A99  2A9D               	goto	l2921
  2902                           
  2903                           ;temperature.c: 69: {
  2904                           ;temperature.c: 70: RA0 = 1;
  2905  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0A9B  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0A9C  1405               	bsf	5,0	;volatile
  2908  0A9D                     l2921:	
  2909                           
  2910                           ;temperature.c: 71: }
  2911                           ;temperature.c: 72: tempDelay(2,7);
  2912  0A9D  3007               	movlw	7
  2913  0A9E  00F4               	movwf	??_writeByte
  2914  0A9F  0874               	movf	??_writeByte,w
  2915  0AA0  00F0               	movwf	tempDelay@y
  2916  0AA1  3002               	movlw	2
  2917  0AA2  160A  118A  23F9  120A  158A  	fcall	_tempDelay
  2918                           
  2919                           ;temperature.c: 73: TRISA0 = 1;
  2920  0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  2921  0AA8  1303               	bcf	3,6	;RP1=0, select bank1
  2922  0AA9  1405               	bsf	5,0	;volatile
  2923                           
  2924                           ;temperature.c: 74: __nop();
  2925  0AAA  0000               	nop
  2926                           
  2927                           ;temperature.c: 75: __nop();
  2928  0AAB  0000               	nop
  2929                           
  2930                           ;temperature.c: 76: value = value>>1;
  2931  0AAC  0877               	movf	writeByte@value,w
  2932  0AAD  00F4               	movwf	??_writeByte
  2933  0AAE  1003               	clrc
  2934  0AAF  0C74               	rrf	??_writeByte,w
  2935  0AB0  00F5               	movwf	??_writeByte+1
  2936  0AB1  0875               	movf	??_writeByte+1,w
  2937  0AB2  00F7               	movwf	writeByte@value
  2938  0AB3  3001               	movlw	1
  2939  0AB4  00F4               	movwf	??_writeByte
  2940  0AB5  0874               	movf	??_writeByte,w
  2941  0AB6  07F8               	addwf	writeByte@i,f
  2942  0AB7  2A83               	goto	L1
  2943  0AB8                     __end_of_writeByte:	
  2944                           
  2945                           	psect	text6
  2946  0A15                     __ptext6:	
  2947 ;; *************** function _reset *****************
  2948 ;; Defined at:
  2949 ;;		line 32 in file "temperature.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  presance        1    5[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0       0
  2964 ;;      Locals:         1       0       0       0       0       0
  2965 ;;      Temps:          1       0       0       0       0       0
  2966 ;;      Totals:         2       0       0       0       0       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    1
  2970 ;; This function calls:
  2971 ;;		_tempDelay
  2972 ;; This function is called by:
  2973 ;;		_getTemperature
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _reset
  2979  0A15                     _reset:	
  2980                           
  2981                           ;temperature.c: 34: char presance = 0;
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  2985  0A15  01F5               	clrf	reset@presance
  2986  0A16                     l2893:	
  2987                           ;temperature.c: 35: while(!presance)
  2988                           
  2989  0A16  0875               	movf	reset@presance,w
  2990  0A17  1D03               	btfss	3,2
  2991  0A18  0008               	return
  2992                           
  2993                           ;temperature.c: 36: {
  2994                           ;temperature.c: 37: TRISA0 = 0;
  2995  0A19  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0A1A  1303               	bcf	3,6	;RP1=0, select bank1
  2997  0A1B  1005               	bcf	5,0	;volatile
  2998                           
  2999                           ;temperature.c: 38: RA0 = 0;
  3000  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0A1D  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0A1E  1005               	bcf	5,0	;volatile
  3003                           
  3004                           ;temperature.c: 39: tempDelay(2,70);
  3005  0A1F  3046               	movlw	70
  3006  0A20  00F4               	movwf	??_reset
  3007  0A21  0874               	movf	??_reset,w
  3008  0A22  00F0               	movwf	tempDelay@y
  3009  0A23  3002               	movlw	2
  3010  0A24  160A  118A  23F9  120A  158A  	fcall	_tempDelay
  3011                           
  3012                           ;temperature.c: 40: TRISA = 1;
  3013  0A29  3001               	movlw	1
  3014  0A2A  1683               	bsf	3,5	;RP0=1, select bank1
  3015  0A2B  1303               	bcf	3,6	;RP1=0, select bank1
  3016  0A2C  0085               	movwf	5	;volatile
  3017                           
  3018                           ;temperature.c: 41: tempDelay(2,8);
  3019  0A2D  3008               	movlw	8
  3020  0A2E  00F4               	movwf	??_reset
  3021  0A2F  0874               	movf	??_reset,w
  3022  0A30  00F0               	movwf	tempDelay@y
  3023  0A31  3002               	movlw	2
  3024  0A32  160A  118A  23F9  120A  158A  	fcall	_tempDelay
  3025                           
  3026                           ;temperature.c: 42: if(RA0 == 1)
  3027  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0A39  1C05               	btfss	5,0	;volatile
  3030  0A3A  2A3D               	goto	l682
  3031                           
  3032                           ;temperature.c: 43: {
  3033                           ;temperature.c: 44: presance = 0;
  3034  0A3B  01F5               	clrf	reset@presance
  3035                           
  3036                           ;temperature.c: 45: }
  3037  0A3C  2A3F               	goto	l2891
  3038  0A3D                     l682:	
  3039                           
  3040                           ;temperature.c: 46: else
  3041                           ;temperature.c: 47: {
  3042                           ;temperature.c: 48: presance = 1;
  3043  0A3D  01F5               	clrf	reset@presance
  3044  0A3E  0AF5               	incf	reset@presance,f
  3045  0A3F                     l2891:	
  3046                           
  3047                           ;temperature.c: 49: }
  3048                           ;temperature.c: 50: tempDelay(2,60);
  3049  0A3F  303C               	movlw	60
  3050  0A40  00F4               	movwf	??_reset
  3051  0A41  0874               	movf	??_reset,w
  3052  0A42  00F0               	movwf	tempDelay@y
  3053  0A43  3002               	movlw	2
  3054  0A44  160A  118A  23F9  120A  158A  	fcall	_tempDelay
  3055  0A49  2A16               	goto	l2893
  3056  0A4A                     __end_of_reset:	
  3057                           
  3058                           	psect	text7
  3059  0B60                     __ptext7:	
  3060 ;; *************** function _readByte *****************
  3061 ;; Defined at:
  3062 ;;		line 80 in file "temperature.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  i               1    6[COMMON] unsigned char 
  3067 ;;  value           1    5[COMMON] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       0       0       0       0       0
  3078 ;;      Locals:         2       0       0       0       0       0
  3079 ;;      Temps:          1       0       0       0       0       0
  3080 ;;      Totals:         3       0       0       0       0       0
  3081 ;;Total ram usage:        3 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    1
  3084 ;; This function calls:
  3085 ;;		_tempDelay
  3086 ;; This function is called by:
  3087 ;;		_getTemperature
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _readByte
  3093  0B60                     _readByte:	
  3094                           
  3095                           ;temperature.c: 82: char i;
  3096                           ;temperature.c: 83: char value = 0;
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _readByte: [wreg+status,2+status,0+pclath+cstack]
  3100  0B60  01F5               	clrf	readByte@value
  3101                           
  3102                           ;temperature.c: 84: static bit j;
  3103                           ;temperature.c: 85: for(i = 0; i < 8; i++)
  3104  0B61  01F6               	clrf	readByte@i
  3105  0B62  3008               	movlw	8
  3106  0B63  0276               	subwf	readByte@i,w
  3107  0B64  1803               	btfsc	3,0
  3108  0B65  2B97               	goto	l2983
  3109                           
  3110                           ;temperature.c: 86: {
  3111                           ;temperature.c: 87: value >> = 1;
  3112  0B66  1003               	clrc
  3113  0B67                     L2:	
  3114  0B67  0CF5               	rrf	readByte@value,f
  3115                           
  3116                           ;temperature.c: 88: TRISA0 = 0;
  3117  0B68  1683               	bsf	3,5	;RP0=1, select bank1
  3118  0B69  1303               	bcf	3,6	;RP1=0, select bank1
  3119  0B6A  1005               	bcf	5,0	;volatile
  3120                           
  3121                           ;temperature.c: 89: RA0 = 0;
  3122  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0B6D  1005               	bcf	5,0	;volatile
  3125                           
  3126                           ;temperature.c: 91: __nop();
  3127  0B6E  0000               	nop
  3128                           
  3129                           ;temperature.c: 92: __nop();
  3130  0B6F  0000               	nop
  3131                           
  3132                           ;temperature.c: 93: __nop();
  3133  0B70  0000               	nop
  3134                           
  3135                           ;temperature.c: 94: __nop();
  3136  0B71  0000               	nop
  3137                           
  3138                           ;temperature.c: 95: __nop();
  3139  0B72  0000               	nop
  3140                           
  3141                           ;temperature.c: 96: __nop();
  3142  0B73  0000               	nop
  3143                           
  3144                           ;temperature.c: 98: TRISA0 = 1;
  3145  0B74  1683               	bsf	3,5	;RP0=1, select bank1
  3146  0B75  1303               	bcf	3,6	;RP1=0, select bank1
  3147  0B76  1405               	bsf	5,0	;volatile
  3148                           
  3149                           ;temperature.c: 99: __nop();
  3150  0B77  0000               	nop
  3151                           
  3152                           ;temperature.c: 100: __nop();
  3153  0B78  0000               	nop
  3154                           
  3155                           ;temperature.c: 101: __nop();
  3156  0B79  0000               	nop
  3157                           
  3158                           ;temperature.c: 102: __nop();
  3159  0B7A  0000               	nop
  3160                           
  3161                           ;temperature.c: 103: __nop();
  3162  0B7B  0000               	nop
  3163                           
  3164                           ;temperature.c: 104: j=RA0;
  3165  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0B7E  106E               	bcf	readByte@j/(0+8),readByte@j& (0+7)
  3168  0B7F  1805               	btfsc	5,0	;volatile
  3169  0B80  146E               	bsf	readByte@j/(0+8),readByte@j& (0+7)
  3170                           
  3171                           ;temperature.c: 105: if(j)
  3172  0B81  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0B82  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0B83  186E               	btfsc	readByte@j/(0+8),readByte@j& (0+7)
  3175                           
  3176                           ;temperature.c: 106: {
  3177                           ;temperature.c: 107: value|=0x80;
  3178  0B84  17F5               	bsf	readByte@value,7
  3179                           
  3180                           ;temperature.c: 108: }
  3181                           ;temperature.c: 109: tempDelay(2,7);
  3182  0B85  3007               	movlw	7
  3183  0B86  00F4               	movwf	??_readByte
  3184  0B87  0874               	movf	??_readByte,w
  3185  0B88  00F0               	movwf	tempDelay@y
  3186  0B89  3002               	movlw	2
  3187  0B8A  160A  118A  23F9  120A  158A  	fcall	_tempDelay
  3188  0B8F  3001               	movlw	1
  3189  0B90  00F4               	movwf	??_readByte
  3190  0B91  0874               	movf	??_readByte,w
  3191  0B92  07F6               	addwf	readByte@i,f
  3192  0B93  3008               	movlw	8
  3193  0B94  0276               	subwf	readByte@i,w
  3194  0B95  1C03               	skipc
  3195  0B96  2B67               	goto	L2
  3196  0B97                     l2983:	
  3197                           
  3198                           ;temperature.c: 110: }
  3199                           ;temperature.c: 111: return(value);
  3200  0B97  0875               	movf	readByte@value,w
  3201  0B98  0008               	return
  3202  0B99                     __end_of_readByte:	
  3203                           
  3204                           	psect	text8
  3205  13F9                     __ptext8:	
  3206 ;; *************** function _tempDelay *****************
  3207 ;; Defined at:
  3208 ;;		line 18 in file "temperature.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  x               1    wreg     unsigned char 
  3211 ;;  y               1    0[COMMON] unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  x               1    2[COMMON] unsigned char 
  3214 ;;  z               1    3[COMMON] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3224 ;;      Params:         1       0       0       0       0       0
  3225 ;;      Locals:         2       0       0       0       0       0
  3226 ;;      Temps:          1       0       0       0       0       0
  3227 ;;      Totals:         4       0       0       0       0       0
  3228 ;;Total ram usage:        4 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_reset
  3234 ;;		_writeByte
  3235 ;;		_readByte
  3236 ;;		_getTemperature
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function _tempDelay
  3242  13F9                     _tempDelay:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in _tempDelay: [wreg+status,2+status,0]
  3246                           ;tempDelay@x stored from wreg
  3247  13F9  00F2               	movwf	tempDelay@x
  3248  13FA                     l668:	
  3249                           ;temperature.c: 20: do{
  3250                           
  3251                           
  3252                           ;temperature.c: 21: char z = y;
  3253  13FA  0870               	movf	tempDelay@y,w
  3254  13FB  00F1               	movwf	??_tempDelay
  3255  13FC  0871               	movf	??_tempDelay,w
  3256  13FD  00F3               	movwf	tempDelay@z
  3257  13FE                     l2797:	
  3258                           ;temperature.c: 22: do{
  3259                           
  3260                           
  3261                           ;temperature.c: 23: ;
  3262                           ;temperature.c: 24: }while(--z);
  3263  13FE  3001               	movlw	1
  3264  13FF  02F3               	subwf	tempDelay@z,f
  3265  1400  1D03               	btfss	3,2
  3266  1401  2BFE               	goto	l2797
  3267                           
  3268                           ;temperature.c: 25: }while(--x);
  3269  1402  3001               	movlw	1
  3270  1403  02F2               	subwf	tempDelay@x,f
  3271  1404  1903               	btfsc	3,2
  3272  1405  0008               	return
  3273  1406  2BFA               	goto	l668
  3274  1407                     __end_of_tempDelay:	
  3275                           
  3276                           	psect	text9
  3277  0AF0                     __ptext9:	
  3278 ;; *************** function _showDate *****************
  3279 ;; Defined at:
  3280 ;;		line 322 in file "main.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    3
  3301 ;; This function calls:
  3302 ;;		_Cinit
  3303 ;;		_clockInit
  3304 ;;		_displayDate
  3305 ;;		_getTime
  3306 ;;		_setTime
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _showDate
  3314  0AF0                     _showDate:	
  3315                           
  3316                           ;main.c: 323: if (row == 3 && col == 2) {
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _showDate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3320  0AF0  3003               	movlw	3
  3321  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0AF3  0638               	xorwf	_row,w
  3324  0AF4  0439               	iorwf	_row+1,w
  3325  0AF5  1D03               	btfss	3,2
  3326  0AF6  0008               	return
  3327  0AF7  3002               	movlw	2
  3328  0AF8  063A               	xorwf	_col,w
  3329  0AF9  043B               	iorwf	_col+1,w
  3330  0AFA  1D03               	btfss	3,2
  3331  0AFB  0008               	return
  3332                           
  3333                           ;main.c: 324: if (zoneActMode == 0 && tempChange == 0 && delayChange == 0 && timeChange 
      +                          == 0 && dateChange == 0 && zoneCheck == 0) {
  3334  0AFC  084B               	movf	_zoneActMode,w
  3335  0AFD  1D03               	btfss	3,2
  3336  0AFE  0008               	return
  3337  0AFF  0841               	movf	_tempChange,w
  3338  0B00  1D03               	btfss	3,2
  3339  0B01  0008               	return
  3340  0B02  083E               	movf	_delayChange,w
  3341  0B03  1D03               	btfss	3,2
  3342  0B04  0008               	return
  3343  0B05  0840               	movf	_timeChange,w
  3344  0B06  1D03               	btfss	3,2
  3345  0B07  0008               	return
  3346  0B08  083F               	movf	_dateChange,w
  3347  0B09  1D03               	btfss	3,2
  3348  0B0A  0008               	return
  3349  0B0B  084A               	movf	_zoneCheck,w
  3350  0B0C  1D03               	btfss	3,2
  3351  0B0D  0008               	return
  3352                           
  3353                           ;main.c: 325: clockInit();
  3354  0B0E  160A  118A  2458  120A  158A  	fcall	_clockInit
  3355                           
  3356                           ;main.c: 326: Cinit();
  3357  0B13  160A  118A  2617  120A  158A  	fcall	_Cinit
  3358                           
  3359                           ;main.c: 327: setTime();
  3360  0B18  120A  158A  22B8  120A  158A  	fcall	_setTime
  3361  0B1D                     l4793:	
  3362                           ;main.c: 328: while (1) {
  3363                           
  3364                           
  3365                           ;main.c: 329: getTime();
  3366  0B1D  120A  158A  224A  120A  158A  	fcall	_getTime
  3367                           
  3368                           ;main.c: 330: displayDate();
  3369  0B22  120A  118A  2172  120A  158A  	fcall	_displayDate
  3370  0B27  2B1D               	goto	l4793
  3371  0B28                     __end_of_showDate:	
  3372                           
  3373                           	psect	text10
  3374  0AB8                     __ptext10:	
  3375 ;; *************** function _setTime *****************
  3376 ;; Defined at:
  3377 ;;		line 58 in file "clock.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  i               2    5[COMMON] int 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3391 ;;      Params:         0       0       0       0       0       0
  3392 ;;      Locals:         2       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0
  3394 ;;      Totals:         2       0       0       0       0       0
  3395 ;;Total ram usage:        2 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    1
  3398 ;; This function calls:
  3399 ;;		_writeTime
  3400 ;; This function is called by:
  3401 ;;		_showTime
  3402 ;;		_showDate
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _setTime
  3408  0AB8                     _setTime:	
  3409                           
  3410                           ;clock.c: 60: RB5 = 1;
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _setTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3414  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0ABA  1686               	bsf	6,5	;volatile
  3417                           
  3418                           ;clock.c: 61: writeTime(0xbe);
  3419  0ABB  30BE               	movlw	190
  3420  0ABC  120A  118A  2004  120A  158A  	fcall	_writeTime
  3421                           
  3422                           ;clock.c: 62: for(int i = 0; i < 8; ++i)
  3423  0AC1  01F5               	clrf	setTime@i
  3424  0AC2  01F6               	clrf	setTime@i+1
  3425  0AC3  0876               	movf	setTime@i+1,w
  3426  0AC4  3A80               	xorlw	128
  3427  0AC5  00FF               	movwf	127
  3428  0AC6  3080               	movlw	128
  3429  0AC7  027F               	subwf	127,w
  3430  0AC8  1D03               	skipz
  3431  0AC9  2ACC               	goto	u3535
  3432  0ACA  3008               	movlw	8
  3433  0ACB  0275               	subwf	setTime@i,w
  3434  0ACC                     u3535:	
  3435  0ACC  1803               	btfsc	3,0
  3436  0ACD  2AEC               	goto	l606
  3437  0ACE                     l3311:	
  3438                           
  3439                           ;clock.c: 63: {
  3440                           ;clock.c: 64: writeTime(table[i]);
  3441  0ACE  0875               	movf	setTime@i,w
  3442  0ACF  3E01               	addlw	low ((_table-__stringbase)| (0+32768))
  3443  0AD0  0084               	movwf	4
  3444  0AD1  160A  118A  2000  120A  158A  	fcall	stringdir
  3445  0AD6  120A  118A  2004  120A  158A  	fcall	_writeTime
  3446  0ADB  3001               	movlw	1
  3447  0ADC  07F5               	addwf	setTime@i,f
  3448  0ADD  1803               	skipnc
  3449  0ADE  0AF6               	incf	setTime@i+1,f
  3450  0ADF  3000               	movlw	0
  3451  0AE0  07F6               	addwf	setTime@i+1,f
  3452  0AE1  0876               	movf	setTime@i+1,w
  3453  0AE2  3A80               	xorlw	128
  3454  0AE3  00FF               	movwf	127
  3455  0AE4  3080               	movlw	128
  3456  0AE5  027F               	subwf	127,w
  3457  0AE6  1D03               	skipz
  3458  0AE7  2AEA               	goto	u3545
  3459  0AE8  3008               	movlw	8
  3460  0AE9  0275               	subwf	setTime@i,w
  3461  0AEA                     u3545:	
  3462  0AEA  1C03               	skipc
  3463  0AEB  2ACE               	goto	l3311
  3464  0AEC                     l606:	
  3465                           
  3466                           ;clock.c: 65: }
  3467                           ;clock.c: 66: RB5 = 0;
  3468  0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0AED  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0AEE  1286               	bcf	6,5	;volatile
  3471  0AEF  0008               	return
  3472  0AF0                     __end_of_setTime:	
  3473                           
  3474                           	psect	text11
  3475  0A4A                     __ptext11:	
  3476 ;; *************** function _getTime *****************
  3477 ;; Defined at:
  3478 ;;		line 71 in file "clock.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  i               2    6[COMMON] int 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3492 ;;      Params:         0       0       0       0       0       0
  3493 ;;      Locals:         2       0       0       0       0       0
  3494 ;;      Temps:          1       0       0       0       0       0
  3495 ;;      Totals:         3       0       0       0       0       0
  3496 ;;Total ram usage:        3 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; Hardware stack levels required when called:    1
  3499 ;; This function calls:
  3500 ;;		_readTime
  3501 ;;		_writeTime
  3502 ;; This function is called by:
  3503 ;;		_showTime
  3504 ;;		_showDate
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _getTime
  3510  0A4A                     _getTime:	
  3511                           
  3512                           ;clock.c: 73: RB5 = 1;
  3513                           
  3514                           ;incstack = 0
  3515                           ; Regs used in _getTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3516  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0A4C  1686               	bsf	6,5	;volatile
  3519                           
  3520                           ;clock.c: 74: writeTime(0xbf);
  3521  0A4D  30BF               	movlw	191
  3522  0A4E  120A  118A  2004  120A  158A  	fcall	_writeTime
  3523                           
  3524                           ;clock.c: 75: for(int i = 0; i < 7; ++i)
  3525  0A53  01F6               	clrf	getTime@i
  3526  0A54  01F7               	clrf	getTime@i+1
  3527  0A55  0877               	movf	getTime@i+1,w
  3528  0A56  3A80               	xorlw	128
  3529  0A57  00FF               	movwf	127
  3530  0A58  3080               	movlw	128
  3531  0A59  027F               	subwf	127,w
  3532  0A5A  1D03               	skipz
  3533  0A5B  2A5E               	goto	u3555
  3534  0A5C  3007               	movlw	7
  3535  0A5D  0276               	subwf	getTime@i,w
  3536  0A5E                     u3555:	
  3537  0A5E  1803               	btfsc	3,0
  3538  0A5F  2A7D               	goto	l611
  3539  0A60                     l3327:	
  3540                           
  3541                           ;clock.c: 76: {
  3542                           ;clock.c: 77: table1[i]=readTime();
  3543  0A60  120A  158A  23D4  120A  158A  	fcall	_readTime
  3544  0A65  00F5               	movwf	??_getTime
  3545  0A66  0876               	movf	getTime@i,w
  3546  0A67  3E31               	addlw	(low (_table1| 0))& (0+255)
  3547  0A68  0084               	movwf	4
  3548  0A69  0875               	movf	??_getTime,w
  3549  0A6A  1383               	bcf	3,7	;select IRP bank0
  3550  0A6B  0080               	movwf	0
  3551  0A6C  3001               	movlw	1
  3552  0A6D  07F6               	addwf	getTime@i,f
  3553  0A6E  1803               	skipnc
  3554  0A6F  0AF7               	incf	getTime@i+1,f
  3555  0A70  3000               	movlw	0
  3556  0A71  07F7               	addwf	getTime@i+1,f
  3557  0A72  0877               	movf	getTime@i+1,w
  3558  0A73  3A80               	xorlw	128
  3559  0A74  00FF               	movwf	127
  3560  0A75  3080               	movlw	128
  3561  0A76  027F               	subwf	127,w
  3562  0A77  1D03               	skipz
  3563  0A78  2A7B               	goto	u3565
  3564  0A79  3007               	movlw	7
  3565  0A7A  0276               	subwf	getTime@i,w
  3566  0A7B                     u3565:	
  3567  0A7B  1C03               	skipc
  3568  0A7C  2A60               	goto	l3327
  3569  0A7D                     l611:	
  3570                           
  3571                           ;clock.c: 78: }
  3572                           ;clock.c: 79: RB5 = 0;
  3573  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0A7F  1286               	bcf	6,5	;volatile
  3576  0A80  0008               	return
  3577  0A81                     __end_of_getTime:	
  3578                           
  3579                           	psect	text12
  3580  0BD4                     __ptext12:	
  3581 ;; *************** function _readTime *****************
  3582 ;; Defined at:
  3583 ;;		line 42 in file "clock.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  j               2    2[COMMON] int 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      unsigned char 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, btemp+1
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       0       0       0       0       0
  3598 ;;      Locals:         2       0       0       0       0       0
  3599 ;;      Temps:          2       0       0       0       0       0
  3600 ;;      Totals:         4       0       0       0       0       0
  3601 ;;Total ram usage:        4 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_getTime
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _readTime
  3612  0BD4                     _readTime:	
  3613                           
  3614                           ;clock.c: 45: TRISB4=1;
  3615                           
  3616                           ;incstack = 0
  3617                           ; Regs used in _readTime: [wreg+status,2+status,0+btemp+1]
  3618  0BD4  1683               	bsf	3,5	;RP0=1, select bank1
  3619  0BD5  1303               	bcf	3,6	;RP1=0, select bank1
  3620  0BD6  1606               	bsf	6,4	;volatile
  3621                           
  3622                           ;clock.c: 46: for(int j = 0; j < 8; j++)
  3623  0BD7  01F2               	clrf	readTime@j
  3624  0BD8  01F3               	clrf	readTime@j+1
  3625  0BD9  0873               	movf	readTime@j+1,w
  3626  0BDA  3A80               	xorlw	128
  3627  0BDB  00FF               	movwf	127
  3628  0BDC  3080               	movlw	128
  3629  0BDD  027F               	subwf	127,w
  3630  0BDE  1D03               	skipz
  3631  0BDF  2BE2               	goto	u2945
  3632  0BE0  3008               	movlw	8
  3633  0BE1  0272               	subwf	readTime@j,w
  3634  0BE2                     u2945:	
  3635  0BE2  1803               	btfsc	3,0
  3636  0BE3  2C09               	goto	l601
  3637  0BE4                     l600:	
  3638                           
  3639                           ;clock.c: 47: {
  3640                           ;clock.c: 48: RB0=0;
  3641  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  3643  0BE6  1006               	bcf	6,0	;volatile
  3644                           
  3645                           ;clock.c: 49: time_rx=time_rx>>1;
  3646  0BE7  0830               	movf	48,w
  3647  0BE8  00F0               	movwf	??_readTime
  3648  0BE9  1003               	clrc
  3649  0BEA  0C70               	rrf	??_readTime,w
  3650  0BEB  00F1               	movwf	??_readTime+1
  3651  0BEC  0871               	movf	??_readTime+1,w
  3652  0BED  00B0               	movwf	48
  3653                           
  3654                           ;clock.c: 50: time_rx7=RB4;
  3655  0BEE  1E06               	btfss	6,4	;volatile
  3656  0BEF  2BF4               	goto	u2950
  3657  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0BF2  17B0               	bsf	48,7	;volatile
  3660  0BF3  2BF7               	goto	l2869
  3661  0BF4                     u2950:	
  3662  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  3664  0BF6  13B0               	bcf	48,7	;volatile
  3665  0BF7                     l2869:	
  3666                           
  3667                           ;clock.c: 51: RB0=1;
  3668  0BF7  1406               	bsf	6,0	;volatile
  3669  0BF8  3001               	movlw	1
  3670  0BF9  07F2               	addwf	readTime@j,f
  3671  0BFA  1803               	skipnc
  3672  0BFB  0AF3               	incf	readTime@j+1,f
  3673  0BFC  3000               	movlw	0
  3674  0BFD  07F3               	addwf	readTime@j+1,f
  3675  0BFE  0873               	movf	readTime@j+1,w
  3676  0BFF  3A80               	xorlw	128
  3677  0C00  00FF               	movwf	127
  3678  0C01  3080               	movlw	128
  3679  0C02  027F               	subwf	127,w
  3680  0C03  1D03               	skipz
  3681  0C04  2C07               	goto	u2975
  3682  0C05  3008               	movlw	8
  3683  0C06  0272               	subwf	readTime@j,w
  3684  0C07                     u2975:	
  3685  0C07  1C03               	skipc
  3686  0C08  2BE4               	goto	l600
  3687  0C09                     l601:	
  3688                           
  3689                           ;clock.c: 52: }
  3690                           ;clock.c: 53: TRISB4=0;
  3691  0C09  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0C0A  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0C0B  1206               	bcf	6,4	;volatile
  3694                           
  3695                           ;clock.c: 54: RB0=0;
  3696  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0C0E  1006               	bcf	6,0	;volatile
  3699                           
  3700                           ;clock.c: 55: return(time_rx);
  3701  0C0F  0830               	movf	48,w
  3702  0C10  0008               	return
  3703  0C11                     __end_of_readTime:	
  3704                           
  3705                           	psect	text13
  3706  0172                     __ptext13:	
  3707 ;; *************** function _displayDate *****************
  3708 ;; Defined at:
  3709 ;;		line 157 in file "clock.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  i               2    0        int 
  3714 ;;  value2          1    8[BANK0h] unsigned char 
  3715 ;;  value1          1    7[BANK0h] unsigned char 
  3716 ;;  value           1    6[BANK0h] unsigned char 
  3717 ;;  hoursUnits      1    5[BANK0h] unsigned char 
  3718 ;;  hoursTens       1    4[BANK0h] unsigned char 
  3719 ;;  minutesUnits    1    3[BANK0h] unsigned char 
  3720 ;;  minutesTens     1    2[BANK0h] unsigned char 
  3721 ;;  units           1    1[BANK0h] unsigned char 
  3722 ;;  tens            1    0[BANK0h] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, pclath, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3732 ;;      Params:         0       0       0       0       0       0
  3733 ;;      Locals:         0       9       0       0       0       0
  3734 ;;      Temps:          3       0       0       0       0       0
  3735 ;;      Totals:         3       9       0       0       0       0
  3736 ;;Total ram usage:       12 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    2
  3739 ;; This function calls:
  3740 ;;		___awdiv
  3741 ;;		_buttondelay
  3742 ;;		_writeChar
  3743 ;;		_writeCmd
  3744 ;; This function is called by:
  3745 ;;		_showDate
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function _displayDate
  3751  0172                     _displayDate:	
  3752                           
  3753                           ;clock.c: 159: int i;
  3754                           ;clock.c: 161: if(row == 4 && col == 1)
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _displayDate: [wreg+status,2+status,0+pclath+cstack]
  3758  0172  3004               	movlw	4
  3759  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0175  0638               	xorwf	_row,w
  3762  0176  0439               	iorwf	_row+1,w
  3763  0177  1D03               	btfss	3,2
  3764  0178  2989               	goto	l629
  3765  0179  033A               	decf	_col,w
  3766  017A  043B               	iorwf	_col+1,w
  3767  017B  1D03               	btfss	3,2
  3768  017C  2989               	goto	l629
  3769                           
  3770                           ;clock.c: 162: {
  3771                           ;clock.c: 163: table1[0]=table1[3];
  3772  017D  0834               	movf	_table1+3,w
  3773  017E  00F9               	movwf	??_displayDate
  3774  017F  0879               	movf	??_displayDate,w
  3775  0180  00B1               	movwf	_table1
  3776                           
  3777                           ;clock.c: 164: table1[1]=table1[4];
  3778  0181  0835               	movf	_table1+4,w
  3779  0182  00F9               	movwf	??_displayDate
  3780  0183  0879               	movf	??_displayDate,w
  3781  0184  00B2               	movwf	_table1+1
  3782                           
  3783                           ;clock.c: 165: table1[2]=table1[6];
  3784  0185  0837               	movf	_table1+6,w
  3785  0186  00F9               	movwf	??_displayDate
  3786  0187  0879               	movf	??_displayDate,w
  3787  0188  00B3               	movwf	_table1+2
  3788  0189                     l629:	
  3789                           
  3790                           ;clock.c: 166: }
  3791                           ;clock.c: 168: value = table1[0];
  3792  0189  0831               	movf	_table1,w
  3793  018A  00F9               	movwf	??_displayDate
  3794  018B  0879               	movf	??_displayDate,w
  3795  018C  00D1               	movwf	_value
  3796                           
  3797                           ;clock.c: 169: if (value > 100)
  3798  018D  3065               	movlw	101
  3799  018E  0251               	subwf	_value,w
  3800  018F  1C03               	skipc
  3801  0190  29A7               	goto	l4661
  3802                           
  3803                           ;clock.c: 170: {
  3804                           ;clock.c: 171: value = value / 100;
  3805  0191  3064               	movlw	100
  3806  0192  00F0               	movwf	___awdiv@divisor
  3807  0193  3000               	movlw	0
  3808  0194  00F1               	movwf	___awdiv@divisor+1
  3809  0195  0851               	movf	_value,w
  3810  0196  00F9               	movwf	??_displayDate
  3811  0197  01FA               	clrf	??_displayDate+1
  3812  0198  0879               	movf	??_displayDate,w
  3813  0199  00F2               	movwf	___awdiv@dividend
  3814  019A  087A               	movf	??_displayDate+1,w
  3815  019B  00F3               	movwf	___awdiv@dividend+1
  3816  019C  120A  158A  2500  120A  118A  	fcall	___awdiv
  3817  01A1  0870               	movf	?___awdiv,w
  3818  01A2  00FB               	movwf	??_displayDate+2
  3819  01A3  087B               	movf	??_displayDate+2,w
  3820  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3821  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3822  01A6  00D1               	movwf	_value
  3823  01A7                     l4661:	
  3824                           
  3825                           ;clock.c: 172: }
  3826                           ;clock.c: 174: char value = table1[3];
  3827  01A7  0834               	movf	_table1+3,w
  3828  01A8  00F9               	movwf	??_displayDate
  3829  01A9  0879               	movf	??_displayDate,w
  3830  01AA  00D8               	movwf	displayDate@value
  3831                           
  3832                           ;clock.c: 175: char tens = (value >> 4)&0x07;
  3833  01AB  0858               	movf	displayDate@value,w
  3834  01AC  00F9               	movwf	??_displayDate
  3835  01AD  3004               	movlw	4
  3836  01AE                     u5935:	
  3837  01AE  1003               	clrc
  3838  01AF  0CF9               	rrf	??_displayDate,f
  3839  01B0  3EFF               	addlw	-1
  3840  01B1  1D03               	skipz
  3841  01B2  29AE               	goto	u5935
  3842  01B3  0879               	movf	??_displayDate,w
  3843  01B4  3907               	andlw	7
  3844  01B5  00FA               	movwf	??_displayDate+1
  3845  01B6  087A               	movf	??_displayDate+1,w
  3846  01B7  00D2               	movwf	displayDate@tens
  3847                           
  3848                           ;clock.c: 176: char units = (value & 0x0f);
  3849  01B8  0858               	movf	displayDate@value,w
  3850  01B9  390F               	andlw	15
  3851  01BA  00F9               	movwf	??_displayDate
  3852  01BB  0879               	movf	??_displayDate,w
  3853  01BC  00D3               	movwf	displayDate@units
  3854                           
  3855                           ;clock.c: 178: char value1 = table1[4];
  3856  01BD  0835               	movf	_table1+4,w
  3857  01BE  00F9               	movwf	??_displayDate
  3858  01BF  0879               	movf	??_displayDate,w
  3859  01C0  00D9               	movwf	displayDate@value1
  3860                           
  3861                           ;clock.c: 179: char minutesTens = (value1 >> 4)&0x07;
  3862  01C1  0859               	movf	displayDate@value1,w
  3863  01C2  00F9               	movwf	??_displayDate
  3864  01C3  3004               	movlw	4
  3865  01C4                     u5945:	
  3866  01C4  1003               	clrc
  3867  01C5  0CF9               	rrf	??_displayDate,f
  3868  01C6  3EFF               	addlw	-1
  3869  01C7  1D03               	skipz
  3870  01C8  29C4               	goto	u5945
  3871  01C9  0879               	movf	??_displayDate,w
  3872  01CA  3907               	andlw	7
  3873  01CB  00FA               	movwf	??_displayDate+1
  3874  01CC  087A               	movf	??_displayDate+1,w
  3875  01CD  00D4               	movwf	displayDate@minutesTens
  3876                           
  3877                           ;clock.c: 180: char minutesUnits = (value1 & 0x0f);
  3878  01CE  0859               	movf	displayDate@value1,w
  3879  01CF  390F               	andlw	15
  3880  01D0  00F9               	movwf	??_displayDate
  3881  01D1  0879               	movf	??_displayDate,w
  3882  01D2  00D5               	movwf	displayDate@minutesUnits
  3883                           
  3884                           ;clock.c: 182: char value2 = table1[6];
  3885  01D3  0837               	movf	_table1+6,w
  3886  01D4  00F9               	movwf	??_displayDate
  3887  01D5  0879               	movf	??_displayDate,w
  3888  01D6  00DA               	movwf	displayDate@value2
  3889                           
  3890                           ;clock.c: 183: char hoursTens = (value2 >> 4)&0x07;
  3891  01D7  085A               	movf	displayDate@value2,w
  3892  01D8  00F9               	movwf	??_displayDate
  3893  01D9  3004               	movlw	4
  3894  01DA                     u5955:	
  3895  01DA  1003               	clrc
  3896  01DB  0CF9               	rrf	??_displayDate,f
  3897  01DC  3EFF               	addlw	-1
  3898  01DD  1D03               	skipz
  3899  01DE  29DA               	goto	u5955
  3900  01DF  0879               	movf	??_displayDate,w
  3901  01E0  3907               	andlw	7
  3902  01E1  00FA               	movwf	??_displayDate+1
  3903  01E2  087A               	movf	??_displayDate+1,w
  3904  01E3  00D6               	movwf	displayDate@hoursTens
  3905                           
  3906                           ;clock.c: 184: char hoursUnits = (value2 & 0x0f);
  3907  01E4  085A               	movf	displayDate@value2,w
  3908  01E5  390F               	andlw	15
  3909  01E6  00F9               	movwf	??_displayDate
  3910  01E7  0879               	movf	??_displayDate,w
  3911  01E8  00D7               	movwf	displayDate@hoursUnits
  3912                           
  3913                           ;clock.c: 186: __nop();
  3914  01E9  0000               	nop
  3915                           
  3916                           ;clock.c: 187: writeChar('\'' + tens - 30 + '\'');
  3917  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3918  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3919  01EC  0852               	movf	displayDate@tens,w
  3920  01ED  3E30               	addlw	48
  3921  01EE  160A  118A  253D  120A  118A  	fcall	_writeChar
  3922                           
  3923                           ;clock.c: 188: writeChar('\'' + units - 30 + '\'');
  3924  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3925  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3926  01F5  0853               	movf	displayDate@units,w
  3927  01F6  3E30               	addlw	48
  3928  01F7  160A  118A  253D  120A  118A  	fcall	_writeChar
  3929                           
  3930                           ;clock.c: 189: writeChar(':');
  3931  01FC  303A               	movlw	58
  3932  01FD  160A  118A  253D  120A  118A  	fcall	_writeChar
  3933                           
  3934                           ;clock.c: 190: writeChar('\'' + minutesTens - 30 + '\'');
  3935  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0203  1303               	bcf	3,6	;RP1=0, select bank0
  3937  0204  0854               	movf	displayDate@minutesTens,w
  3938  0205  3E30               	addlw	48
  3939  0206  160A  118A  253D  120A  118A  	fcall	_writeChar
  3940                           
  3941                           ;clock.c: 191: writeChar('\'' + minutesUnits - 30 + '\'');
  3942  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3943  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3944  020D  0855               	movf	displayDate@minutesUnits,w
  3945  020E  3E30               	addlw	48
  3946  020F  160A  118A  253D  120A  118A  	fcall	_writeChar
  3947                           
  3948                           ;clock.c: 192: writeChar(':');
  3949  0214  303A               	movlw	58
  3950  0215  160A  118A  253D  120A  118A  	fcall	_writeChar
  3951                           
  3952                           ;clock.c: 193: writeChar('\'' + hoursTens - 30 + '\'');
  3953  021A  1283               	bcf	3,5	;RP0=0, select bank0
  3954  021B  1303               	bcf	3,6	;RP1=0, select bank0
  3955  021C  0856               	movf	displayDate@hoursTens,w
  3956  021D  3E30               	addlw	48
  3957  021E  160A  118A  253D  120A  118A  	fcall	_writeChar
  3958                           
  3959                           ;clock.c: 194: writeChar('\'' + hoursUnits - 30 + '\'');
  3960  0223  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0224  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0225  0857               	movf	displayDate@hoursUnits,w
  3963  0226  3E30               	addlw	48
  3964  0227  160A  118A  253D  120A  118A  	fcall	_writeChar
  3965                           
  3966                           ;clock.c: 195: buttondelay();
  3967  022C  160A  118A  2437  120A  118A  	fcall	_buttondelay
  3968                           
  3969                           ;clock.c: 196: buttondelay();
  3970  0231  160A  118A  2437  120A  118A  	fcall	_buttondelay
  3971                           
  3972                           ;clock.c: 197: writeCmd(0x01);
  3973  0236  3001               	movlw	1
  3974  0237  160A  118A  251B   	fcall	_writeCmd
  3975  023A  0008               	return
  3976  023B                     __end_of_displayDate:	
  3977                           
  3978                           	psect	text14
  3979  1437                     __ptext14:	
  3980 ;; *************** function _buttondelay *****************
  3981 ;; Defined at:
  3982 ;;		line 121 in file "buttons.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  i               2    0[COMMON] unsigned int 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       0       0       0       0       0
  3997 ;;      Locals:         2       0       0       0       0       0
  3998 ;;      Temps:          0       0       0       0       0       0
  3999 ;;      Totals:         2       0       0       0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_display
  4006 ;;		_displayDate
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function _buttondelay
  4012  1437                     _buttondelay:	
  4013                           
  4014                           ;buttons.c: 122: for (unsigned i=0; i<500; i++);
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _buttondelay: [wreg+status,2]
  4018  1437  01F0               	clrf	buttondelay@i
  4019  1438  01F1               	clrf	buttondelay@i+1
  4020  1439                     L3:	
  4021  1439  3001               	movlw	1
  4022  143A  0271               	subwf	buttondelay@i+1,w
  4023  143B  30F4               	movlw	244
  4024  143C  1903               	skipnz
  4025  143D  0270               	subwf	buttondelay@i,w
  4026  143E  1803               	btfsc	3,0
  4027  143F  0008               	return
  4028  1440  3001               	movlw	1
  4029  1441  07F0               	addwf	buttondelay@i,f
  4030  1442  1803               	skipnc
  4031  1443  0AF1               	incf	buttondelay@i+1,f
  4032  1444  3000               	movlw	0
  4033  1445  07F1               	addwf	buttondelay@i+1,f
  4034  1446  2C39               	goto	L3
  4035  1447                     __end_of_buttondelay:	
  4036                           
  4037                           	psect	text15
  4038  1458                     __ptext15:	
  4039 ;; *************** function _clockInit *****************
  4040 ;; Defined at:
  4041 ;;		line 87 in file "clock.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4055 ;;      Params:         0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    1
  4062 ;; This function calls:
  4063 ;;		_writeTime
  4064 ;; This function is called by:
  4065 ;;		_showTime
  4066 ;;		_showDate
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           
  4071                           ;psect for function _clockInit
  4072  1458                     _clockInit:	
  4073                           
  4074                           ;clock.c: 89: RB0 = 0;
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _clockInit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4078  1458  1283               	bcf	3,5	;RP0=0, select bank0
  4079  1459  1303               	bcf	3,6	;RP1=0, select bank0
  4080  145A  1006               	bcf	6,0	;volatile
  4081                           
  4082                           ;clock.c: 90: RB5 = 0;
  4083  145B  1286               	bcf	6,5	;volatile
  4084                           
  4085                           ;clock.c: 91: RB5 = 1;
  4086  145C  1686               	bsf	6,5	;volatile
  4087                           
  4088                           ;clock.c: 92: writeTime(0x8E);
  4089  145D  308E               	movlw	142
  4090  145E  120A  118A  2004  160A  118A  	fcall	_writeTime
  4091                           
  4092                           ;clock.c: 93: writeTime(0);
  4093  1463  3000               	movlw	0
  4094  1464  120A  118A  2004   	fcall	_writeTime
  4095                           
  4096                           ;clock.c: 94: RB5 = 0;
  4097  1467  1283               	bcf	3,5	;RP0=0, select bank0
  4098  1468  1303               	bcf	3,6	;RP1=0, select bank0
  4099  1469  1286               	bcf	6,5	;volatile
  4100  146A  0008               	return
  4101  146B                     __end_of_clockInit:	
  4102                           
  4103                           	psect	text16
  4104  0004                     __ptext16:	
  4105 ;; *************** function _writeTime *****************
  4106 ;; Defined at:
  4107 ;;		line 26 in file "clock.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  timeClock       1    wreg     unsigned char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  timeClock       1    4[COMMON] unsigned char 
  4112 ;;  i               2    2[COMMON] int 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, btemp+1
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       0       0       0       0       0
  4123 ;;      Locals:         3       0       0       0       0       0
  4124 ;;      Temps:          2       0       0       0       0       0
  4125 ;;      Totals:         5       0       0       0       0       0
  4126 ;;Total ram usage:        5 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_setTime
  4132 ;;		_getTime
  4133 ;;		_clockInit
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _writeTime
  4139  0004                     _writeTime:	
  4140                           
  4141                           ;incstack = 0
  4142                           ; Regs used in _writeTime: [wreg+status,2+status,0+btemp+1]
  4143                           ;writeTime@timeClock stored from wreg
  4144  0004  00F4               	movwf	writeTime@timeClock
  4145                           
  4146                           ;clock.c: 28: for(int i = 0; i < 8; ++i)
  4147  0005  01F2               	clrf	writeTime@i
  4148  0006  01F3               	clrf	writeTime@i+1
  4149  0007  0873               	movf	writeTime@i+1,w
  4150  0008  3A80               	xorlw	128
  4151  0009  00FF               	movwf	127
  4152  000A  3080               	movlw	128
  4153  000B  027F               	subwf	127,w
  4154  000C  1D03               	skipz
  4155  000D  2810               	goto	u2915
  4156  000E  3008               	movlw	8
  4157  000F  0272               	subwf	writeTime@i,w
  4158  0010                     u2915:	
  4159  0010  1803               	btfsc	3,0
  4160  0011  2831               	goto	l595
  4161  0012                     l594:	
  4162                           
  4163                           ;clock.c: 29: {
  4164                           ;clock.c: 30: RB4 = 0;
  4165  0012  1283               	bcf	3,5	;RP0=0, select bank0
  4166  0013  1303               	bcf	3,6	;RP1=0, select bank0
  4167  0014  1206               	bcf	6,4	;volatile
  4168                           
  4169                           ;clock.c: 31: RB0 = 0;
  4170  0015  1006               	bcf	6,0	;volatile
  4171                           
  4172                           ;clock.c: 32: if(timeClock & 0x01)
  4173  0016  1874               	btfsc	writeTime@timeClock,0
  4174                           
  4175                           ;clock.c: 33: {
  4176                           ;clock.c: 34: RB4 = 1;
  4177  0017  1606               	bsf	6,4	;volatile
  4178                           
  4179                           ;clock.c: 35: }
  4180                           ;clock.c: 36: timeClock = timeClock>> 1;
  4181  0018  0874               	movf	writeTime@timeClock,w
  4182  0019  00F0               	movwf	??_writeTime
  4183  001A  1003               	clrc
  4184  001B  0C70               	rrf	??_writeTime,w
  4185  001C  00F1               	movwf	??_writeTime+1
  4186  001D  0871               	movf	??_writeTime+1,w
  4187  001E  00F4               	movwf	writeTime@timeClock
  4188                           
  4189                           ;clock.c: 37: RB0 = 1;
  4190  001F  1406               	bsf	6,0	;volatile
  4191  0020  3001               	movlw	1
  4192  0021  07F2               	addwf	writeTime@i,f
  4193  0022  1803               	skipnc
  4194  0023  0AF3               	incf	writeTime@i+1,f
  4195  0024  3000               	movlw	0
  4196  0025  07F3               	addwf	writeTime@i+1,f
  4197  0026  0873               	movf	writeTime@i+1,w
  4198  0027  3A80               	xorlw	128
  4199  0028  00FF               	movwf	127
  4200  0029  3080               	movlw	128
  4201  002A  027F               	subwf	127,w
  4202  002B  1D03               	skipz
  4203  002C  282F               	goto	u2935
  4204  002D  3008               	movlw	8
  4205  002E  0272               	subwf	writeTime@i,w
  4206  002F                     u2935:	
  4207  002F  1C03               	skipc
  4208  0030  2812               	goto	l594
  4209  0031                     l595:	
  4210                           
  4211                           ;clock.c: 38: }
  4212                           ;clock.c: 39: RB0 = 0;
  4213  0031  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0032  1303               	bcf	3,6	;RP1=0, select bank0
  4215  0033  1006               	bcf	6,0	;volatile
  4216  0034  0008               	return
  4217  0035                     __end_of_writeTime:	
  4218                           
  4219                           	psect	text17
  4220  1617                     __ptext17:	
  4221 ;; *************** function _Cinit *****************
  4222 ;; Defined at:
  4223 ;;		line 98 in file "clock.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, pclath, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4237 ;;      Params:         0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		_writeCmd
  4246 ;; This function is called by:
  4247 ;;		_showTime
  4248 ;;		_showDate
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _Cinit
  4254  1617                     _Cinit:	
  4255                           
  4256                           ;clock.c: 101: TRISA = 0x00;
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _Cinit: [wreg+status,2+status,0+pclath+cstack]
  4260  1617  1683               	bsf	3,5	;RP0=1, select bank1
  4261  1618  1303               	bcf	3,6	;RP1=0, select bank1
  4262  1619  0185               	clrf	5	;volatile
  4263                           
  4264                           ;clock.c: 102: PORTA = 0xFF;
  4265  161A  30FF               	movlw	255
  4266  161B  1283               	bcf	3,5	;RP0=0, select bank0
  4267  161C  1303               	bcf	3,6	;RP1=0, select bank0
  4268  161D  0085               	movwf	5	;volatile
  4269                           
  4270                           ;clock.c: 104: TRISD = 0x00;
  4271  161E  1683               	bsf	3,5	;RP0=1, select bank1
  4272  161F  1303               	bcf	3,6	;RP1=0, select bank1
  4273  1620  0188               	clrf	8	;volatile
  4274                           
  4275                           ;clock.c: 105: PORTD = 0xFF;
  4276  1621  30FF               	movlw	255
  4277  1622  1283               	bcf	3,5	;RP0=0, select bank0
  4278  1623  1303               	bcf	3,6	;RP1=0, select bank0
  4279  1624  0088               	movwf	8	;volatile
  4280                           
  4281                           ;clock.c: 106: TRISB = 0x02;
  4282  1625  3002               	movlw	2
  4283  1626  1683               	bsf	3,5	;RP0=1, select bank1
  4284  1627  1303               	bcf	3,6	;RP1=0, select bank1
  4285  1628  0086               	movwf	6	;volatile
  4286                           
  4287                           ;clock.c: 107: ADCON1 = 0x06;
  4288  1629  3006               	movlw	6
  4289  162A  009F               	movwf	31	;volatile
  4290                           
  4291                           ;clock.c: 108: writeCmd(0x0f);
  4292  162B  300F               	movlw	15
  4293  162C  160A  118A  251B  160A  118A  	fcall	_writeCmd
  4294                           
  4295                           ;clock.c: 109: writeCmd(0x01);
  4296  1631  3001               	movlw	1
  4297  1632  160A  118A  251B  160A  118A  	fcall	_writeCmd
  4298                           
  4299                           ;clock.c: 110: writeCmd(0x38);
  4300  1637  3038               	movlw	56
  4301  1638  160A  118A  251B   	fcall	_writeCmd
  4302  163B  0008               	return
  4303  163C                     __end_of_Cinit:	
  4304                           
  4305                           	psect	text18
  4306  13BA                     __ptext18:	
  4307 ;; *************** function _init *****************
  4308 ;; Defined at:
  4309 ;;		line 811 in file "main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		status,2
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _init
  4338  13BA                     _init:	
  4339                           
  4340                           ;main.c: 812: TRISB = 0;
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in _init: [status,2]
  4344  13BA  1683               	bsf	3,5	;RP0=1, select bank1
  4345  13BB  1303               	bcf	3,6	;RP1=0, select bank1
  4346  13BC  0186               	clrf	6	;volatile
  4347  13BD  0008               	return
  4348  13BE                     __end_of_init:	
  4349                           
  4350                           	psect	text19
  4351  09E2                     __ptext19:	
  4352 ;; *************** function _delaySeconds *****************
  4353 ;; Defined at:
  4354 ;;		line 9 in file "main.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  d               2    0[COMMON] int 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  j               2    5[COMMON] int 
  4359 ;;  i               2    3[COMMON] int 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, btemp+1
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4369 ;;      Params:         2       0       0       0       0       0
  4370 ;;      Locals:         4       0       0       0       0       0
  4371 ;;      Temps:          1       0       0       0       0       0
  4372 ;;      Totals:         7       0       0       0       0       0
  4373 ;;Total ram usage:        7 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_main
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           
  4383                           ;psect for function _delaySeconds
  4384  09E2                     _delaySeconds:	
  4385                           
  4386                           ;main.c: 12: for(int i=0;i<d;i++){
  4387                           
  4388                           ;incstack = 0
  4389                           ; Regs used in _delaySeconds: [wreg+status,2+btemp+1]
  4390  09E2  01F3               	clrf	delaySeconds@i
  4391  09E3  01F4               	clrf	delaySeconds@i+1
  4392  09E4                     l69:	
  4393  09E4  0874               	movf	delaySeconds@i+1,w
  4394  09E5  3A80               	xorlw	128
  4395  09E6  00F2               	movwf	??_delaySeconds
  4396  09E7  0871               	movf	delaySeconds@d+1,w
  4397  09E8  3A80               	xorlw	128
  4398  09E9  0272               	subwf	??_delaySeconds,w
  4399  09EA  1D03               	skipz
  4400  09EB  29EE               	goto	u3725
  4401  09EC  0870               	movf	delaySeconds@d,w
  4402  09ED  0273               	subwf	delaySeconds@i,w
  4403  09EE                     u3725:	
  4404  09EE  1803               	btfsc	3,0
  4405  09EF  0008               	return
  4406                           
  4407                           ;main.c: 13: for(int j=0;j<25000;j++);
  4408  09F0  01F5               	clrf	delaySeconds@j
  4409  09F1  01F6               	clrf	delaySeconds@j+1
  4410  09F2  0876               	movf	delaySeconds@j+1,w
  4411  09F3  3A80               	xorlw	128
  4412  09F4  00FF               	movwf	127
  4413  09F5  30E1               	movlw	225
  4414  09F6  027F               	subwf	127,w
  4415  09F7  1D03               	skipz
  4416  09F8  29FB               	goto	u3705
  4417  09F9  30A8               	movlw	168
  4418  09FA  0275               	subwf	delaySeconds@j,w
  4419  09FB                     u3705:	
  4420  09FB  1803               	btfsc	3,0
  4421  09FC  2A0E               	goto	l3471
  4422  09FD                     l3467:	
  4423  09FD  3001               	movlw	1
  4424  09FE  07F5               	addwf	delaySeconds@j,f
  4425  09FF  1803               	skipnc
  4426  0A00  0AF6               	incf	delaySeconds@j+1,f
  4427  0A01  3000               	movlw	0
  4428  0A02  07F6               	addwf	delaySeconds@j+1,f
  4429  0A03  0876               	movf	delaySeconds@j+1,w
  4430  0A04  3A80               	xorlw	128
  4431  0A05  00FF               	movwf	127
  4432  0A06  30E1               	movlw	225
  4433  0A07  027F               	subwf	127,w
  4434  0A08  1D03               	skipz
  4435  0A09  2A0C               	goto	u3715
  4436  0A0A  30A8               	movlw	168
  4437  0A0B  0275               	subwf	delaySeconds@j,w
  4438  0A0C                     u3715:	
  4439  0A0C  1C03               	skipc
  4440  0A0D  29FD               	goto	l3467
  4441  0A0E                     l3471:	
  4442  0A0E  3001               	movlw	1
  4443  0A0F  07F3               	addwf	delaySeconds@i,f
  4444  0A10  1803               	skipnc
  4445  0A11  0AF4               	incf	delaySeconds@i+1,f
  4446  0A12  3000               	movlw	0
  4447  0A13  07F4               	addwf	delaySeconds@i+1,f
  4448  0A14  29E4               	goto	l69
  4449  0A15                     __end_of_delaySeconds:	
  4450                           
  4451                           	psect	text20
  4452  0CA9                     __ptext20:	
  4453 ;; *************** function _deactivateZones *****************
  4454 ;; Defined at:
  4455 ;;		line 460 in file "main.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4469 ;;      Params:         0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    4
  4476 ;; This function calls:
  4477 ;;		_zone0Deactivate
  4478 ;;		_zone1Deactivate
  4479 ;;		_zone2Deactivate
  4480 ;;		_zone3Deactivate
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _deactivateZones
  4488  0CA9                     _deactivateZones:	
  4489                           
  4490                           ;main.c: 461: if (zoneActMode == 1) {
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _deactivateZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4494  0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  4496  0CAB  034B               	decf	_zoneActMode,w
  4497  0CAC  1D03               	btfss	3,2
  4498  0CAD  0008               	return
  4499                           
  4500                           ;main.c: 462: if (row == 1 && col == 3) {
  4501  0CAE  0338               	decf	_row,w
  4502  0CAF  0439               	iorwf	_row+1,w
  4503  0CB0  1D03               	btfss	3,2
  4504  0CB1  2CC2               	goto	l4939
  4505  0CB2  3003               	movlw	3
  4506  0CB3  063A               	xorwf	_col,w
  4507  0CB4  043B               	iorwf	_col+1,w
  4508  0CB5  1D03               	btfss	3,2
  4509  0CB6  2CC2               	goto	l4939
  4510                           
  4511                           ;main.c: 463: if (zone0On == 1) {
  4512  0CB7  0349               	decf	_zone0On,w
  4513  0CB8  1D03               	btfss	3,2
  4514  0CB9  2CC2               	goto	l4939
  4515                           
  4516                           ;main.c: 464: zone0Deactivate();
  4517  0CBA  120A  158A  210C  120A  158A  	fcall	_zone0Deactivate
  4518                           
  4519                           ;main.c: 465: zone0On = 0;
  4520  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0CC1  01C9               	clrf	_zone0On
  4523  0CC2                     l4939:	
  4524                           
  4525                           ;main.c: 466: }
  4526                           ;main.c: 467: }
  4527                           ;main.c: 468: if (row == 2 && col == 3) {
  4528  0CC2  3002               	movlw	2
  4529  0CC3  0638               	xorwf	_row,w
  4530  0CC4  0439               	iorwf	_row+1,w
  4531  0CC5  1D03               	btfss	3,2
  4532  0CC6  2CD7               	goto	l4949
  4533  0CC7  3003               	movlw	3
  4534  0CC8  063A               	xorwf	_col,w
  4535  0CC9  043B               	iorwf	_col+1,w
  4536  0CCA  1D03               	btfss	3,2
  4537  0CCB  2CD7               	goto	l4949
  4538                           
  4539                           ;main.c: 469: if (zone1On == 1) {
  4540  0CCC  0348               	decf	_zone1On,w
  4541  0CCD  1D03               	btfss	3,2
  4542  0CCE  2CD7               	goto	l4949
  4543                           
  4544                           ;main.c: 470: zone1Deactivate();
  4545  0CCF  120A  158A  2136  120A  158A  	fcall	_zone1Deactivate
  4546                           
  4547                           ;main.c: 471: zone1On = 0;
  4548  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0CD6  01C8               	clrf	_zone1On
  4551  0CD7                     l4949:	
  4552                           
  4553                           ;main.c: 473: }
  4554                           ;main.c: 474: }
  4555                           ;main.c: 475: if (row == 3 && col == 3) {
  4556  0CD7  3003               	movlw	3
  4557  0CD8  0638               	xorwf	_row,w
  4558  0CD9  0439               	iorwf	_row+1,w
  4559  0CDA  1D03               	btfss	3,2
  4560  0CDB  2CEC               	goto	l4959
  4561  0CDC  3003               	movlw	3
  4562  0CDD  063A               	xorwf	_col,w
  4563  0CDE  043B               	iorwf	_col+1,w
  4564  0CDF  1D03               	btfss	3,2
  4565  0CE0  2CEC               	goto	l4959
  4566                           
  4567                           ;main.c: 476: if (zone2On == 1) {
  4568  0CE1  0347               	decf	_zone2On,w
  4569  0CE2  1D03               	btfss	3,2
  4570  0CE3  2CEC               	goto	l4959
  4571                           
  4572                           ;main.c: 477: zone2Deactivate();
  4573  0CE4  120A  158A  2160  120A  158A  	fcall	_zone2Deactivate
  4574                           
  4575                           ;main.c: 478: zone2On = 0;
  4576  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0CEB  01C7               	clrf	_zone2On
  4579  0CEC                     l4959:	
  4580                           
  4581                           ;main.c: 479: }
  4582                           ;main.c: 480: }
  4583                           ;main.c: 481: if (row == 4 && col == 3) {
  4584  0CEC  3004               	movlw	4
  4585  0CED  0638               	xorwf	_row,w
  4586  0CEE  0439               	iorwf	_row+1,w
  4587  0CEF  1D03               	btfss	3,2
  4588  0CF0  0008               	return
  4589  0CF1  3003               	movlw	3
  4590  0CF2  063A               	xorwf	_col,w
  4591  0CF3  043B               	iorwf	_col+1,w
  4592  0CF4  1D03               	btfss	3,2
  4593  0CF5  0008               	return
  4594                           
  4595                           ;main.c: 482: if (zone3On == 1) {
  4596  0CF6  0346               	decf	_zone3On,w
  4597  0CF7  1D03               	btfss	3,2
  4598  0CF8  0008               	return
  4599                           
  4600                           ;main.c: 483: zone3Deactivate();
  4601  0CF9  120A  158A  218A   	fcall	_zone3Deactivate
  4602                           
  4603                           ;main.c: 484: zone3On = 0;
  4604  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  4605  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  4606  0CFE  01C6               	clrf	_zone3On
  4607  0CFF  0008               	return
  4608  0D00                     __end_of_deactivateZones:	
  4609                           
  4610                           	psect	text21
  4611  098A                     __ptext21:	
  4612 ;; *************** function _zone3Deactivate *****************
  4613 ;; Defined at:
  4614 ;;		line 174 in file "main.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  message        11    0[BANK0h] unsigned char [11]
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0       0
  4629 ;;      Locals:         0      11       0       0       0       0
  4630 ;;      Temps:          4       0       0       0       0       0
  4631 ;;      Totals:         4      11       0       0       0       0
  4632 ;;Total ram usage:       15 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    3
  4635 ;; This function calls:
  4636 ;;		_LCDdelay3
  4637 ;;		_clearDisplay
  4638 ;;		_resetCursor
  4639 ;;		_writeMessage
  4640 ;; This function is called by:
  4641 ;;		_deactivateZones
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _zone3Deactivate
  4647  098A                     _zone3Deactivate:	
  4648                           
  4649                           ;main.c: 175: clearDisplay ();
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _zone3Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4653  098A  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  4654                           
  4655                           ;main.c: 176: resetCursor ();
  4656  098F  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  4657                           
  4658                           ;main.c: 177: char message[] = "Zone 3 Off";
  4659  0994  3052               	movlw	zone3Deactivate@message& (0+255)
  4660  0995  0084               	movwf	4
  4661  0996  3090               	movlw	low zone3Deactivate@F1235
  4662  0997  00F7               	movwf	??_zone3Deactivate
  4663  0998  0804               	movf	4,w
  4664  0999  00F8               	movwf	??_zone3Deactivate+1
  4665  099A  300B               	movlw	11
  4666  099B  00F9               	movwf	??_zone3Deactivate+2
  4667  099C                     u5760:	
  4668  099C  0877               	movf	??_zone3Deactivate,w
  4669  099D  0084               	movwf	4
  4670  099E  1783               	bsf	3,7	;select IRP bank3
  4671  099F  0800               	movf	0,w
  4672  09A0  00FA               	movwf	??_zone3Deactivate+3
  4673  09A1  0AF7               	incf	??_zone3Deactivate,f
  4674  09A2  0878               	movf	??_zone3Deactivate+1,w
  4675  09A3  0084               	movwf	4
  4676  09A4  1383               	bcf	3,7	;select IRP bank0
  4677  09A5  087A               	movf	??_zone3Deactivate+3,w
  4678  09A6  0080               	movwf	0
  4679  09A7  0AF8               	incf	??_zone3Deactivate+1,f
  4680  09A8  0BF9               	decfsz	??_zone3Deactivate+2,f
  4681  09A9  299C               	goto	u5760
  4682                           
  4683                           ;main.c: 178: writeMessage(message);
  4684  09AA  3052               	movlw	(low (zone3Deactivate@message| 0))& (0+255)
  4685  09AB  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  4686                           
  4687                           ;main.c: 179: LCDdelay3 ();
  4688  09B0  160A  118A  2417   	fcall	_LCDdelay3
  4689  09B3  0008               	return
  4690  09B4                     __end_of_zone3Deactivate:	
  4691                           
  4692                           	psect	text22
  4693  0960                     __ptext22:	
  4694 ;; *************** function _zone2Deactivate *****************
  4695 ;; Defined at:
  4696 ;;		line 167 in file "main.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  message        11    0[BANK0h] unsigned char [11]
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       0       0       0       0       0
  4711 ;;      Locals:         0      11       0       0       0       0
  4712 ;;      Temps:          4       0       0       0       0       0
  4713 ;;      Totals:         4      11       0       0       0       0
  4714 ;;Total ram usage:       15 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    3
  4717 ;; This function calls:
  4718 ;;		_LCDdelay3
  4719 ;;		_clearDisplay
  4720 ;;		_resetCursor
  4721 ;;		_writeMessage
  4722 ;; This function is called by:
  4723 ;;		_deactivateZones
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           
  4728                           ;psect for function _zone2Deactivate
  4729  0960                     _zone2Deactivate:	
  4730                           
  4731                           ;main.c: 168: clearDisplay ();
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _zone2Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4735  0960  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  4736                           
  4737                           ;main.c: 169: resetCursor ();
  4738  0965  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  4739                           
  4740                           ;main.c: 170: char message[] = "Zone 2 Off";
  4741  096A  3052               	movlw	zone2Deactivate@message& (0+255)
  4742  096B  0084               	movwf	4
  4743  096C  309B               	movlw	low zone2Deactivate@F1232
  4744  096D  00F7               	movwf	??_zone2Deactivate
  4745  096E  0804               	movf	4,w
  4746  096F  00F8               	movwf	??_zone2Deactivate+1
  4747  0970  300B               	movlw	11
  4748  0971  00F9               	movwf	??_zone2Deactivate+2
  4749  0972                     u5750:	
  4750  0972  0877               	movf	??_zone2Deactivate,w
  4751  0973  0084               	movwf	4
  4752  0974  1783               	bsf	3,7	;select IRP bank3
  4753  0975  0800               	movf	0,w
  4754  0976  00FA               	movwf	??_zone2Deactivate+3
  4755  0977  0AF7               	incf	??_zone2Deactivate,f
  4756  0978  0878               	movf	??_zone2Deactivate+1,w
  4757  0979  0084               	movwf	4
  4758  097A  1383               	bcf	3,7	;select IRP bank0
  4759  097B  087A               	movf	??_zone2Deactivate+3,w
  4760  097C  0080               	movwf	0
  4761  097D  0AF8               	incf	??_zone2Deactivate+1,f
  4762  097E  0BF9               	decfsz	??_zone2Deactivate+2,f
  4763  097F  2972               	goto	u5750
  4764                           
  4765                           ;main.c: 171: writeMessage(message);
  4766  0980  3052               	movlw	(low (zone2Deactivate@message| 0))& (0+255)
  4767  0981  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  4768                           
  4769                           ;main.c: 172: LCDdelay3 ();
  4770  0986  160A  118A  2417   	fcall	_LCDdelay3
  4771  0989  0008               	return
  4772  098A                     __end_of_zone2Deactivate:	
  4773                           
  4774                           	psect	text23
  4775  0936                     __ptext23:	
  4776 ;; *************** function _zone1Deactivate *****************
  4777 ;; Defined at:
  4778 ;;		line 160 in file "main.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  message        11    0[BANK0h] unsigned char [11]
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4792 ;;      Params:         0       0       0       0       0       0
  4793 ;;      Locals:         0      11       0       0       0       0
  4794 ;;      Temps:          4       0       0       0       0       0
  4795 ;;      Totals:         4      11       0       0       0       0
  4796 ;;Total ram usage:       15 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    3
  4799 ;; This function calls:
  4800 ;;		_LCDdelay3
  4801 ;;		_clearDisplay
  4802 ;;		_resetCursor
  4803 ;;		_writeMessage
  4804 ;; This function is called by:
  4805 ;;		_deactivateZones
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function _zone1Deactivate
  4811  0936                     _zone1Deactivate:	
  4812                           
  4813                           ;main.c: 161: clearDisplay ();
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _zone1Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4817  0936  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  4818                           
  4819                           ;main.c: 162: resetCursor ();
  4820  093B  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  4821                           
  4822                           ;main.c: 163: char message[] = "Zone 1 Off";
  4823  0940  3052               	movlw	zone1Deactivate@message& (0+255)
  4824  0941  0084               	movwf	4
  4825  0942  30A6               	movlw	low zone1Deactivate@F1229
  4826  0943  00F7               	movwf	??_zone1Deactivate
  4827  0944  0804               	movf	4,w
  4828  0945  00F8               	movwf	??_zone1Deactivate+1
  4829  0946  300B               	movlw	11
  4830  0947  00F9               	movwf	??_zone1Deactivate+2
  4831  0948                     u5740:	
  4832  0948  0877               	movf	??_zone1Deactivate,w
  4833  0949  0084               	movwf	4
  4834  094A  1783               	bsf	3,7	;select IRP bank3
  4835  094B  0800               	movf	0,w
  4836  094C  00FA               	movwf	??_zone1Deactivate+3
  4837  094D  0AF7               	incf	??_zone1Deactivate,f
  4838  094E  0878               	movf	??_zone1Deactivate+1,w
  4839  094F  0084               	movwf	4
  4840  0950  1383               	bcf	3,7	;select IRP bank0
  4841  0951  087A               	movf	??_zone1Deactivate+3,w
  4842  0952  0080               	movwf	0
  4843  0953  0AF8               	incf	??_zone1Deactivate+1,f
  4844  0954  0BF9               	decfsz	??_zone1Deactivate+2,f
  4845  0955  2948               	goto	u5740
  4846                           
  4847                           ;main.c: 164: writeMessage(message);
  4848  0956  3052               	movlw	(low (zone1Deactivate@message| 0))& (0+255)
  4849  0957  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  4850                           
  4851                           ;main.c: 165: LCDdelay3 ();
  4852  095C  160A  118A  2417   	fcall	_LCDdelay3
  4853  095F  0008               	return
  4854  0960                     __end_of_zone1Deactivate:	
  4855                           
  4856                           	psect	text24
  4857  090C                     __ptext24:	
  4858 ;; *************** function _zone0Deactivate *****************
  4859 ;; Defined at:
  4860 ;;		line 153 in file "main.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  message        11    0[BANK0h] unsigned char [11]
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4874 ;;      Params:         0       0       0       0       0       0
  4875 ;;      Locals:         0      11       0       0       0       0
  4876 ;;      Temps:          4       0       0       0       0       0
  4877 ;;      Totals:         4      11       0       0       0       0
  4878 ;;Total ram usage:       15 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    3
  4881 ;; This function calls:
  4882 ;;		_LCDdelay3
  4883 ;;		_clearDisplay
  4884 ;;		_resetCursor
  4885 ;;		_writeMessage
  4886 ;; This function is called by:
  4887 ;;		_deactivateZones
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           
  4892                           ;psect for function _zone0Deactivate
  4893  090C                     _zone0Deactivate:	
  4894                           
  4895                           ;main.c: 154: clearDisplay ();
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _zone0Deactivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4899  090C  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  4900                           
  4901                           ;main.c: 155: resetCursor ();
  4902  0911  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  4903                           
  4904                           ;main.c: 156: char message[] = "Zone 0 Off";
  4905  0916  3052               	movlw	zone0Deactivate@message& (0+255)
  4906  0917  0084               	movwf	4
  4907  0918  30B1               	movlw	low zone0Deactivate@F1226
  4908  0919  00F7               	movwf	??_zone0Deactivate
  4909  091A  0804               	movf	4,w
  4910  091B  00F8               	movwf	??_zone0Deactivate+1
  4911  091C  300B               	movlw	11
  4912  091D  00F9               	movwf	??_zone0Deactivate+2
  4913  091E                     u5730:	
  4914  091E  0877               	movf	??_zone0Deactivate,w
  4915  091F  0084               	movwf	4
  4916  0920  1783               	bsf	3,7	;select IRP bank3
  4917  0921  0800               	movf	0,w
  4918  0922  00FA               	movwf	??_zone0Deactivate+3
  4919  0923  0AF7               	incf	??_zone0Deactivate,f
  4920  0924  0878               	movf	??_zone0Deactivate+1,w
  4921  0925  0084               	movwf	4
  4922  0926  1383               	bcf	3,7	;select IRP bank0
  4923  0927  087A               	movf	??_zone0Deactivate+3,w
  4924  0928  0080               	movwf	0
  4925  0929  0AF8               	incf	??_zone0Deactivate+1,f
  4926  092A  0BF9               	decfsz	??_zone0Deactivate+2,f
  4927  092B  291E               	goto	u5730
  4928                           
  4929                           ;main.c: 157: writeMessage(message);
  4930  092C  3052               	movlw	(low (zone0Deactivate@message| 0))& (0+255)
  4931  092D  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  4932                           
  4933                           ;main.c: 158: LCDdelay3 ();
  4934  0932  160A  118A  2417   	fcall	_LCDdelay3
  4935  0935  0008               	return
  4936  0936                     __end_of_zone0Deactivate:	
  4937                           
  4938                           	psect	text25
  4939  0E6B                     __ptext25:	
  4940 ;; *************** function _checkZones2 *****************
  4941 ;; Defined at:
  4942 ;;		line 379 in file "main.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  4956 ;;      Params:         0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0
  4959 ;;      Totals:         0       0       0       0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    4
  4963 ;; This function calls:
  4964 ;;		_zone0Alert
  4965 ;;		_zone0OK
  4966 ;;		_zone1Alert
  4967 ;;		_zone1OK
  4968 ;;		_zone2Alert
  4969 ;;		_zone2OK
  4970 ;;		_zone3Alert
  4971 ;;		_zone3OK
  4972 ;; This function is called by:
  4973 ;;		_main
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _checkZones2
  4979  0E6B                     _checkZones2:	
  4980                           
  4981                           ;main.c: 381: if (row == 1 && col == 2) {
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _checkZones2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4985  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4986  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4987  0E6D  0338               	decf	_row,w
  4988  0E6E  0439               	iorwf	_row+1,w
  4989  0E6F  1D03               	btfss	3,2
  4990  0E70  2E88               	goto	l4829
  4991  0E71  3002               	movlw	2
  4992  0E72  063A               	xorwf	_col,w
  4993  0E73  043B               	iorwf	_col+1,w
  4994  0E74  1D03               	btfss	3,2
  4995  0E75  2E88               	goto	l4829
  4996                           
  4997                           ;main.c: 382: if(zone0Alerted == 0) {
  4998  0E76  0845               	movf	_zone0Alerted,w
  4999  0E77  1D03               	btfss	3,2
  5000  0E78  2E7E               	goto	l4825
  5001                           
  5002                           ;main.c: 384: zone0OK();
  5003  0E79  160A  118A  26B4  120A  158A  	fcall	_zone0OK
  5004  0E7E                     l4825:	
  5005                           
  5006                           ;main.c: 385: }
  5007                           ;main.c: 386: if (zone0Alerted == 1) {
  5008  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  5009  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  5010  0E80  0345               	decf	_zone0Alerted,w
  5011  0E81  1D03               	btfss	3,2
  5012  0E82  2E88               	goto	l4829
  5013                           
  5014                           ;main.c: 387: zone0Alert();
  5015  0E83  120A  158A  2064  120A  158A  	fcall	_zone0Alert
  5016  0E88                     l4829:	
  5017                           
  5018                           ;main.c: 388: }
  5019                           ;main.c: 389: }
  5020                           ;main.c: 390: if (row == 2 && col == 2) {
  5021  0E88  3002               	movlw	2
  5022  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  5024  0E8B  0638               	xorwf	_row,w
  5025  0E8C  0439               	iorwf	_row+1,w
  5026  0E8D  1D03               	btfss	3,2
  5027  0E8E  2EA6               	goto	l4841
  5028  0E8F  3002               	movlw	2
  5029  0E90  063A               	xorwf	_col,w
  5030  0E91  043B               	iorwf	_col+1,w
  5031  0E92  1D03               	btfss	3,2
  5032  0E93  2EA6               	goto	l4841
  5033                           
  5034                           ;main.c: 392: if(zone1Alerted == 0) {
  5035  0E94  0844               	movf	_zone1Alerted,w
  5036  0E95  1D03               	btfss	3,2
  5037  0E96  2E9C               	goto	l4837
  5038                           
  5039                           ;main.c: 393: zone1OK();
  5040  0E97  160A  118A  26DD  120A  158A  	fcall	_zone1OK
  5041  0E9C                     l4837:	
  5042                           
  5043                           ;main.c: 394: }
  5044                           ;main.c: 395: if (zone1Alerted == 1) {
  5045  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0E9E  0344               	decf	_zone1Alerted,w
  5048  0E9F  1D03               	btfss	3,2
  5049  0EA0  2EA6               	goto	l4841
  5050                           
  5051                           ;main.c: 396: zone1Alert();
  5052  0EA1  120A  158A  208E  120A  158A  	fcall	_zone1Alert
  5053  0EA6                     l4841:	
  5054                           
  5055                           ;main.c: 397: }
  5056                           ;main.c: 398: }
  5057                           ;main.c: 399: if (row == 3 && col == 2) {
  5058  0EA6  3003               	movlw	3
  5059  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0EA9  0638               	xorwf	_row,w
  5062  0EAA  0439               	iorwf	_row+1,w
  5063  0EAB  1D03               	btfss	3,2
  5064  0EAC  2EC4               	goto	l4853
  5065  0EAD  3002               	movlw	2
  5066  0EAE  063A               	xorwf	_col,w
  5067  0EAF  043B               	iorwf	_col+1,w
  5068  0EB0  1D03               	btfss	3,2
  5069  0EB1  2EC4               	goto	l4853
  5070                           
  5071                           ;main.c: 401: if(zone2Alerted == 0) {
  5072  0EB2  0843               	movf	_zone2Alerted,w
  5073  0EB3  1D03               	btfss	3,2
  5074  0EB4  2EBA               	goto	l4849
  5075                           
  5076                           ;main.c: 402: zone2OK();
  5077  0EB5  160A  118A  2706  120A  158A  	fcall	_zone2OK
  5078  0EBA                     l4849:	
  5079                           
  5080                           ;main.c: 403: }
  5081                           ;main.c: 404: if (zone2Alerted == 1) {
  5082  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0EBC  0343               	decf	_zone2Alerted,w
  5085  0EBD  1D03               	btfss	3,2
  5086  0EBE  2EC4               	goto	l4853
  5087                           
  5088                           ;main.c: 405: zone2Alert();
  5089  0EBF  120A  158A  20B8  120A  158A  	fcall	_zone2Alert
  5090  0EC4                     l4853:	
  5091                           
  5092                           ;main.c: 406: }
  5093                           ;main.c: 407: }
  5094                           ;main.c: 408: if (row == 4 && col == 2) {
  5095  0EC4  3004               	movlw	4
  5096  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0EC7  0638               	xorwf	_row,w
  5099  0EC8  0439               	iorwf	_row+1,w
  5100  0EC9  1D03               	btfss	3,2
  5101  0ECA  0008               	return
  5102  0ECB  3002               	movlw	2
  5103  0ECC  063A               	xorwf	_col,w
  5104  0ECD  043B               	iorwf	_col+1,w
  5105  0ECE  1D03               	btfss	3,2
  5106  0ECF  0008               	return
  5107                           
  5108                           ;main.c: 410: if(zone3Alerted == 0) {
  5109  0ED0  0842               	movf	_zone3Alerted,w
  5110  0ED1  1D03               	btfss	3,2
  5111  0ED2  2ED8               	goto	l4861
  5112                           
  5113                           ;main.c: 411: zone3OK();
  5114  0ED3  160A  118A  272F  120A  158A  	fcall	_zone3OK
  5115  0ED8                     l4861:	
  5116                           
  5117                           ;main.c: 412: }
  5118                           ;main.c: 413: if (zone3Alerted == 1) {
  5119  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  5120  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  5121  0EDA  0342               	decf	_zone3Alerted,w
  5122  0EDB  1D03               	btfss	3,2
  5123  0EDC  0008               	return
  5124                           
  5125                           ;main.c: 414: zone3Alert();
  5126  0EDD  120A  158A  20E2   	fcall	_zone3Alert
  5127  0EE0  0008               	return
  5128  0EE1                     __end_of_checkZones2:	
  5129                           
  5130                           	psect	text26
  5131  172F                     __ptext26:	
  5132 ;; *************** function _zone3OK *****************
  5133 ;; Defined at:
  5134 ;;		line 65 in file "main.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  message        10    0[BANK0h] unsigned char [10]
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5148 ;;      Params:         0       0       0       0       0       0
  5149 ;;      Locals:         0      10       0       0       0       0
  5150 ;;      Temps:          4       0       0       0       0       0
  5151 ;;      Totals:         4      10       0       0       0       0
  5152 ;;Total ram usage:       14 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    3
  5155 ;; This function calls:
  5156 ;;		_LCDdelay3
  5157 ;;		_clearDisplay
  5158 ;;		_resetCursor
  5159 ;;		_writeMessage
  5160 ;; This function is called by:
  5161 ;;		_checkZones2
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _zone3OK
  5167  172F                     _zone3OK:	
  5168                           
  5169                           ;main.c: 66: clearDisplay ();
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _zone3OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5173  172F  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  5174                           
  5175                           ;main.c: 67: resetCursor ();
  5176  1734  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  5177                           
  5178                           ;main.c: 68: char message[] = "Zone 3 OK";
  5179  1739  3052               	movlw	zone3OK@message& (0+255)
  5180  173A  0084               	movwf	4
  5181  173B  30A0               	movlw	low zone3OK@F1188
  5182  173C  00F7               	movwf	??_zone3OK
  5183  173D  0804               	movf	4,w
  5184  173E  00F8               	movwf	??_zone3OK+1
  5185  173F  300A               	movlw	10
  5186  1740  00F9               	movwf	??_zone3OK+2
  5187  1741                     u5620:	
  5188  1741  0877               	movf	??_zone3OK,w
  5189  1742  0084               	movwf	4
  5190  1743  1383               	bcf	3,7	;select IRP bank1
  5191  1744  0800               	movf	0,w
  5192  1745  00FA               	movwf	??_zone3OK+3
  5193  1746  0AF7               	incf	??_zone3OK,f
  5194  1747  0878               	movf	??_zone3OK+1,w
  5195  1748  0084               	movwf	4
  5196  1749  087A               	movf	??_zone3OK+3,w
  5197  174A  0080               	movwf	0
  5198  174B  0AF8               	incf	??_zone3OK+1,f
  5199  174C  0BF9               	decfsz	??_zone3OK+2,f
  5200  174D  2F41               	goto	u5620
  5201                           
  5202                           ;main.c: 69: writeMessage(message);
  5203  174E  3052               	movlw	(low (zone3OK@message| 0))& (0+255)
  5204  174F  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  5205                           
  5206                           ;main.c: 70: LCDdelay3 ();
  5207  1754  160A  118A  2417   	fcall	_LCDdelay3
  5208  1757  0008               	return
  5209  1758                     __end_of_zone3OK:	
  5210                           
  5211                           	psect	text27
  5212  08E2                     __ptext27:	
  5213 ;; *************** function _zone3Alert *****************
  5214 ;; Defined at:
  5215 ;;		line 93 in file "main.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  message        13    0[BANK0h] unsigned char [13]
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5229 ;;      Params:         0       0       0       0       0       0
  5230 ;;      Locals:         0      13       0       0       0       0
  5231 ;;      Temps:          4       0       0       0       0       0
  5232 ;;      Totals:         4      13       0       0       0       0
  5233 ;;Total ram usage:       17 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    3
  5236 ;; This function calls:
  5237 ;;		_LCDdelay3
  5238 ;;		_clearDisplay
  5239 ;;		_resetCursor
  5240 ;;		_writeMessage
  5241 ;; This function is called by:
  5242 ;;		_checkZones2
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           
  5247                           ;psect for function _zone3Alert
  5248  08E2                     _zone3Alert:	
  5249                           
  5250                           ;main.c: 94: clearDisplay ();
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _zone3Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5254  08E2  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  5255                           
  5256                           ;main.c: 95: resetCursor ();
  5257  08E7  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  5258                           
  5259                           ;main.c: 96: char message[] = "Zone 3 Alert";
  5260  08EC  3052               	movlw	zone3Alert@message& (0+255)
  5261  08ED  0084               	movwf	4
  5262  08EE  301D               	movlw	low zone3Alert@F1200
  5263  08EF  00F7               	movwf	??_zone3Alert
  5264  08F0  0804               	movf	4,w
  5265  08F1  00F8               	movwf	??_zone3Alert+1
  5266  08F2  300D               	movlw	13
  5267  08F3  00F9               	movwf	??_zone3Alert+2
  5268  08F4                     u5660:	
  5269  08F4  0877               	movf	??_zone3Alert,w
  5270  08F5  0084               	movwf	4
  5271  08F6  1783               	bsf	3,7	;select IRP bank2
  5272  08F7  0800               	movf	0,w
  5273  08F8  00FA               	movwf	??_zone3Alert+3
  5274  08F9  0AF7               	incf	??_zone3Alert,f
  5275  08FA  0878               	movf	??_zone3Alert+1,w
  5276  08FB  0084               	movwf	4
  5277  08FC  1383               	bcf	3,7	;select IRP bank0
  5278  08FD  087A               	movf	??_zone3Alert+3,w
  5279  08FE  0080               	movwf	0
  5280  08FF  0AF8               	incf	??_zone3Alert+1,f
  5281  0900  0BF9               	decfsz	??_zone3Alert+2,f
  5282  0901  28F4               	goto	u5660
  5283                           
  5284                           ;main.c: 97: writeMessage(message);
  5285  0902  3052               	movlw	(low (zone3Alert@message| 0))& (0+255)
  5286  0903  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  5287                           
  5288                           ;main.c: 98: LCDdelay3 ();
  5289  0908  160A  118A  2417   	fcall	_LCDdelay3
  5290  090B  0008               	return
  5291  090C                     __end_of_zone3Alert:	
  5292                           
  5293                           	psect	text28
  5294  1706                     __ptext28:	
  5295 ;; *************** function _zone2OK *****************
  5296 ;; Defined at:
  5297 ;;		line 58 in file "main.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  message        10    0[BANK0h] unsigned char [10]
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5311 ;;      Params:         0       0       0       0       0       0
  5312 ;;      Locals:         0      10       0       0       0       0
  5313 ;;      Temps:          4       0       0       0       0       0
  5314 ;;      Totals:         4      10       0       0       0       0
  5315 ;;Total ram usage:       14 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    3
  5318 ;; This function calls:
  5319 ;;		_LCDdelay3
  5320 ;;		_clearDisplay
  5321 ;;		_resetCursor
  5322 ;;		_writeMessage
  5323 ;; This function is called by:
  5324 ;;		_checkZones2
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           
  5329                           ;psect for function _zone2OK
  5330  1706                     _zone2OK:	
  5331                           
  5332                           ;main.c: 59: clearDisplay ();
  5333                           
  5334                           ;incstack = 0
  5335                           ; Regs used in _zone2OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5336  1706  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  5337                           
  5338                           ;main.c: 60: resetCursor ();
  5339  170B  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  5340                           
  5341                           ;main.c: 61: char message[] = "Zone 2 OK";
  5342  1710  3052               	movlw	zone2OK@message& (0+255)
  5343  1711  0084               	movwf	4
  5344  1712  30AA               	movlw	low zone2OK@F1185
  5345  1713  00F7               	movwf	??_zone2OK
  5346  1714  0804               	movf	4,w
  5347  1715  00F8               	movwf	??_zone2OK+1
  5348  1716  300A               	movlw	10
  5349  1717  00F9               	movwf	??_zone2OK+2
  5350  1718                     u5610:	
  5351  1718  0877               	movf	??_zone2OK,w
  5352  1719  0084               	movwf	4
  5353  171A  1383               	bcf	3,7	;select IRP bank1
  5354  171B  0800               	movf	0,w
  5355  171C  00FA               	movwf	??_zone2OK+3
  5356  171D  0AF7               	incf	??_zone2OK,f
  5357  171E  0878               	movf	??_zone2OK+1,w
  5358  171F  0084               	movwf	4
  5359  1720  087A               	movf	??_zone2OK+3,w
  5360  1721  0080               	movwf	0
  5361  1722  0AF8               	incf	??_zone2OK+1,f
  5362  1723  0BF9               	decfsz	??_zone2OK+2,f
  5363  1724  2F18               	goto	u5610
  5364                           
  5365                           ;main.c: 62: writeMessage(message);
  5366  1725  3052               	movlw	(low (zone2OK@message| 0))& (0+255)
  5367  1726  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  5368                           
  5369                           ;main.c: 63: LCDdelay3 ();
  5370  172B  160A  118A  2417   	fcall	_LCDdelay3
  5371  172E  0008               	return
  5372  172F                     __end_of_zone2OK:	
  5373                           
  5374                           	psect	text29
  5375  08B8                     __ptext29:	
  5376 ;; *************** function _zone2Alert *****************
  5377 ;; Defined at:
  5378 ;;		line 86 in file "main.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  message        13    0[BANK0h] unsigned char [13]
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5392 ;;      Params:         0       0       0       0       0       0
  5393 ;;      Locals:         0      13       0       0       0       0
  5394 ;;      Temps:          4       0       0       0       0       0
  5395 ;;      Totals:         4      13       0       0       0       0
  5396 ;;Total ram usage:       17 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    3
  5399 ;; This function calls:
  5400 ;;		_LCDdelay3
  5401 ;;		_clearDisplay
  5402 ;;		_resetCursor
  5403 ;;		_writeMessage
  5404 ;; This function is called by:
  5405 ;;		_checkZones2
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _zone2Alert
  5411  08B8                     _zone2Alert:	
  5412                           
  5413                           ;main.c: 87: clearDisplay ();
  5414                           
  5415                           ;incstack = 0
  5416                           ; Regs used in _zone2Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5417  08B8  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  5418                           
  5419                           ;main.c: 88: resetCursor ();
  5420  08BD  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  5421                           
  5422                           ;main.c: 89: char message[] = "Zone 2 Alert";
  5423  08C2  3052               	movlw	zone2Alert@message& (0+255)
  5424  08C3  0084               	movwf	4
  5425  08C4  302A               	movlw	low zone2Alert@F1197
  5426  08C5  00F7               	movwf	??_zone2Alert
  5427  08C6  0804               	movf	4,w
  5428  08C7  00F8               	movwf	??_zone2Alert+1
  5429  08C8  300D               	movlw	13
  5430  08C9  00F9               	movwf	??_zone2Alert+2
  5431  08CA                     u5650:	
  5432  08CA  0877               	movf	??_zone2Alert,w
  5433  08CB  0084               	movwf	4
  5434  08CC  1783               	bsf	3,7	;select IRP bank2
  5435  08CD  0800               	movf	0,w
  5436  08CE  00FA               	movwf	??_zone2Alert+3
  5437  08CF  0AF7               	incf	??_zone2Alert,f
  5438  08D0  0878               	movf	??_zone2Alert+1,w
  5439  08D1  0084               	movwf	4
  5440  08D2  1383               	bcf	3,7	;select IRP bank0
  5441  08D3  087A               	movf	??_zone2Alert+3,w
  5442  08D4  0080               	movwf	0
  5443  08D5  0AF8               	incf	??_zone2Alert+1,f
  5444  08D6  0BF9               	decfsz	??_zone2Alert+2,f
  5445  08D7  28CA               	goto	u5650
  5446                           
  5447                           ;main.c: 90: writeMessage(message);
  5448  08D8  3052               	movlw	(low (zone2Alert@message| 0))& (0+255)
  5449  08D9  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  5450                           
  5451                           ;main.c: 91: LCDdelay3 ();
  5452  08DE  160A  118A  2417   	fcall	_LCDdelay3
  5453  08E1  0008               	return
  5454  08E2                     __end_of_zone2Alert:	
  5455                           
  5456                           	psect	text30
  5457  16DD                     __ptext30:	
  5458 ;; *************** function _zone1OK *****************
  5459 ;; Defined at:
  5460 ;;		line 51 in file "main.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  message        10    0[BANK0h] unsigned char [10]
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5474 ;;      Params:         0       0       0       0       0       0
  5475 ;;      Locals:         0      10       0       0       0       0
  5476 ;;      Temps:          4       0       0       0       0       0
  5477 ;;      Totals:         4      10       0       0       0       0
  5478 ;;Total ram usage:       14 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    3
  5481 ;; This function calls:
  5482 ;;		_LCDdelay3
  5483 ;;		_clearDisplay
  5484 ;;		_resetCursor
  5485 ;;		_writeMessage
  5486 ;; This function is called by:
  5487 ;;		_checkZones2
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function _zone1OK
  5493  16DD                     _zone1OK:	
  5494                           
  5495                           ;main.c: 52: clearDisplay ();
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _zone1OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5499  16DD  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  5500                           
  5501                           ;main.c: 53: resetCursor ();
  5502  16E2  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  5503                           
  5504                           ;main.c: 54: char message[] = "Zone 1 OK";
  5505  16E7  3052               	movlw	zone1OK@message& (0+255)
  5506  16E8  0084               	movwf	4
  5507  16E9  30B4               	movlw	low zone1OK@F1182
  5508  16EA  00F7               	movwf	??_zone1OK
  5509  16EB  0804               	movf	4,w
  5510  16EC  00F8               	movwf	??_zone1OK+1
  5511  16ED  300A               	movlw	10
  5512  16EE  00F9               	movwf	??_zone1OK+2
  5513  16EF                     u5600:	
  5514  16EF  0877               	movf	??_zone1OK,w
  5515  16F0  0084               	movwf	4
  5516  16F1  1383               	bcf	3,7	;select IRP bank1
  5517  16F2  0800               	movf	0,w
  5518  16F3  00FA               	movwf	??_zone1OK+3
  5519  16F4  0AF7               	incf	??_zone1OK,f
  5520  16F5  0878               	movf	??_zone1OK+1,w
  5521  16F6  0084               	movwf	4
  5522  16F7  087A               	movf	??_zone1OK+3,w
  5523  16F8  0080               	movwf	0
  5524  16F9  0AF8               	incf	??_zone1OK+1,f
  5525  16FA  0BF9               	decfsz	??_zone1OK+2,f
  5526  16FB  2EEF               	goto	u5600
  5527                           
  5528                           ;main.c: 55: writeMessage(message);
  5529  16FC  3052               	movlw	(low (zone1OK@message| 0))& (0+255)
  5530  16FD  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  5531                           
  5532                           ;main.c: 56: LCDdelay3 ();
  5533  1702  160A  118A  2417   	fcall	_LCDdelay3
  5534  1705  0008               	return
  5535  1706                     __end_of_zone1OK:	
  5536                           
  5537                           	psect	text31
  5538  088E                     __ptext31:	
  5539 ;; *************** function _zone1Alert *****************
  5540 ;; Defined at:
  5541 ;;		line 79 in file "main.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  message        13    0[BANK0h] unsigned char [13]
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       0       0       0       0       0
  5556 ;;      Locals:         0      13       0       0       0       0
  5557 ;;      Temps:          4       0       0       0       0       0
  5558 ;;      Totals:         4      13       0       0       0       0
  5559 ;;Total ram usage:       17 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    3
  5562 ;; This function calls:
  5563 ;;		_LCDdelay3
  5564 ;;		_clearDisplay
  5565 ;;		_resetCursor
  5566 ;;		_writeMessage
  5567 ;; This function is called by:
  5568 ;;		_checkZones2
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _zone1Alert
  5574  088E                     _zone1Alert:	
  5575                           
  5576                           ;main.c: 80: clearDisplay ();
  5577                           
  5578                           ;incstack = 0
  5579                           ; Regs used in _zone1Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5580  088E  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  5581                           
  5582                           ;main.c: 81: resetCursor ();
  5583  0893  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  5584                           
  5585                           ;main.c: 82: char message[] = "Zone 1 Alert";
  5586  0898  3052               	movlw	zone1Alert@message& (0+255)
  5587  0899  0084               	movwf	4
  5588  089A  3037               	movlw	low zone1Alert@F1194
  5589  089B  00F7               	movwf	??_zone1Alert
  5590  089C  0804               	movf	4,w
  5591  089D  00F8               	movwf	??_zone1Alert+1
  5592  089E  300D               	movlw	13
  5593  089F  00F9               	movwf	??_zone1Alert+2
  5594  08A0                     u5640:	
  5595  08A0  0877               	movf	??_zone1Alert,w
  5596  08A1  0084               	movwf	4
  5597  08A2  1783               	bsf	3,7	;select IRP bank2
  5598  08A3  0800               	movf	0,w
  5599  08A4  00FA               	movwf	??_zone1Alert+3
  5600  08A5  0AF7               	incf	??_zone1Alert,f
  5601  08A6  0878               	movf	??_zone1Alert+1,w
  5602  08A7  0084               	movwf	4
  5603  08A8  1383               	bcf	3,7	;select IRP bank0
  5604  08A9  087A               	movf	??_zone1Alert+3,w
  5605  08AA  0080               	movwf	0
  5606  08AB  0AF8               	incf	??_zone1Alert+1,f
  5607  08AC  0BF9               	decfsz	??_zone1Alert+2,f
  5608  08AD  28A0               	goto	u5640
  5609                           
  5610                           ;main.c: 83: writeMessage(message);
  5611  08AE  3052               	movlw	(low (zone1Alert@message| 0))& (0+255)
  5612  08AF  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  5613                           
  5614                           ;main.c: 84: LCDdelay3 ();
  5615  08B4  160A  118A  2417   	fcall	_LCDdelay3
  5616  08B7  0008               	return
  5617  08B8                     __end_of_zone1Alert:	
  5618                           
  5619                           	psect	text32
  5620  16B4                     __ptext32:	
  5621 ;; *************** function _zone0OK *****************
  5622 ;; Defined at:
  5623 ;;		line 44 in file "main.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  message        10    0[BANK0h] unsigned char [10]
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5637 ;;      Params:         0       0       0       0       0       0
  5638 ;;      Locals:         0      10       0       0       0       0
  5639 ;;      Temps:          4       0       0       0       0       0
  5640 ;;      Totals:         4      10       0       0       0       0
  5641 ;;Total ram usage:       14 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    3
  5644 ;; This function calls:
  5645 ;;		_LCDdelay3
  5646 ;;		_clearDisplay
  5647 ;;		_resetCursor
  5648 ;;		_writeMessage
  5649 ;; This function is called by:
  5650 ;;		_checkZones2
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           
  5655                           ;psect for function _zone0OK
  5656  16B4                     _zone0OK:	
  5657                           
  5658                           ;main.c: 45: clearDisplay ();
  5659                           
  5660                           ;incstack = 0
  5661                           ; Regs used in _zone0OK: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5662  16B4  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  5663                           
  5664                           ;main.c: 46: resetCursor ();
  5665  16B9  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  5666                           
  5667                           ;main.c: 47: char message[] = "Zone 0 OK";
  5668  16BE  3052               	movlw	zone0OK@message& (0+255)
  5669  16BF  0084               	movwf	4
  5670  16C0  30BE               	movlw	low zone0OK@F1179
  5671  16C1  00F7               	movwf	??_zone0OK
  5672  16C2  0804               	movf	4,w
  5673  16C3  00F8               	movwf	??_zone0OK+1
  5674  16C4  300A               	movlw	10
  5675  16C5  00F9               	movwf	??_zone0OK+2
  5676  16C6                     u5590:	
  5677  16C6  0877               	movf	??_zone0OK,w
  5678  16C7  0084               	movwf	4
  5679  16C8  1383               	bcf	3,7	;select IRP bank1
  5680  16C9  0800               	movf	0,w
  5681  16CA  00FA               	movwf	??_zone0OK+3
  5682  16CB  0AF7               	incf	??_zone0OK,f
  5683  16CC  0878               	movf	??_zone0OK+1,w
  5684  16CD  0084               	movwf	4
  5685  16CE  087A               	movf	??_zone0OK+3,w
  5686  16CF  0080               	movwf	0
  5687  16D0  0AF8               	incf	??_zone0OK+1,f
  5688  16D1  0BF9               	decfsz	??_zone0OK+2,f
  5689  16D2  2EC6               	goto	u5590
  5690                           
  5691                           ;main.c: 48: writeMessage(message);
  5692  16D3  3052               	movlw	(low (zone0OK@message| 0))& (0+255)
  5693  16D4  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  5694                           
  5695                           ;main.c: 49: LCDdelay3 ();
  5696  16D9  160A  118A  2417   	fcall	_LCDdelay3
  5697  16DC  0008               	return
  5698  16DD                     __end_of_zone0OK:	
  5699                           
  5700                           	psect	text33
  5701  0864                     __ptext33:	
  5702 ;; *************** function _zone0Alert *****************
  5703 ;; Defined at:
  5704 ;;		line 72 in file "main.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  message        13    0[BANK0h] unsigned char [13]
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5718 ;;      Params:         0       0       0       0       0       0
  5719 ;;      Locals:         0      13       0       0       0       0
  5720 ;;      Temps:          4       0       0       0       0       0
  5721 ;;      Totals:         4      13       0       0       0       0
  5722 ;;Total ram usage:       17 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    3
  5725 ;; This function calls:
  5726 ;;		_LCDdelay3
  5727 ;;		_clearDisplay
  5728 ;;		_resetCursor
  5729 ;;		_writeMessage
  5730 ;; This function is called by:
  5731 ;;		_checkZones2
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _zone0Alert
  5737  0864                     _zone0Alert:	
  5738                           
  5739                           ;main.c: 73: clearDisplay ();
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _zone0Alert: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5743  0864  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  5744                           
  5745                           ;main.c: 74: resetCursor ();
  5746  0869  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  5747                           
  5748                           ;main.c: 75: char message[] = "Zone 0 Alert";
  5749  086E  3052               	movlw	zone0Alert@message& (0+255)
  5750  086F  0084               	movwf	4
  5751  0870  3044               	movlw	low zone0Alert@F1191
  5752  0871  00F7               	movwf	??_zone0Alert
  5753  0872  0804               	movf	4,w
  5754  0873  00F8               	movwf	??_zone0Alert+1
  5755  0874  300D               	movlw	13
  5756  0875  00F9               	movwf	??_zone0Alert+2
  5757  0876                     u5630:	
  5758  0876  0877               	movf	??_zone0Alert,w
  5759  0877  0084               	movwf	4
  5760  0878  1783               	bsf	3,7	;select IRP bank2
  5761  0879  0800               	movf	0,w
  5762  087A  00FA               	movwf	??_zone0Alert+3
  5763  087B  0AF7               	incf	??_zone0Alert,f
  5764  087C  0878               	movf	??_zone0Alert+1,w
  5765  087D  0084               	movwf	4
  5766  087E  1383               	bcf	3,7	;select IRP bank0
  5767  087F  087A               	movf	??_zone0Alert+3,w
  5768  0880  0080               	movwf	0
  5769  0881  0AF8               	incf	??_zone0Alert+1,f
  5770  0882  0BF9               	decfsz	??_zone0Alert+2,f
  5771  0883  2876               	goto	u5630
  5772                           
  5773                           ;main.c: 76: writeMessage(message);
  5774  0884  3052               	movlw	(low (zone0Alert@message| 0))& (0+255)
  5775  0885  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  5776                           
  5777                           ;main.c: 77: LCDdelay3 ();
  5778  088A  160A  118A  2417   	fcall	_LCDdelay3
  5779  088D  0008               	return
  5780  088E                     __end_of_zone0Alert:	
  5781                           
  5782                           	psect	text34
  5783  15A9                     __ptext34:	
  5784 ;; *************** function _checkZones *****************
  5785 ;; Defined at:
  5786 ;;		line 366 in file "main.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5800 ;;      Params:         0       0       0       0       0       0
  5801 ;;      Locals:         0       0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0
  5803 ;;      Totals:         0       0       0       0       0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    5
  5807 ;; This function calls:
  5808 ;;		_checkZoneMessage
  5809 ;; This function is called by:
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function _checkZones
  5816  15A9                     _checkZones:	
  5817                           
  5818                           ;main.c: 367: if (row == 1 && col == 1) {
  5819                           
  5820                           ;incstack = 0
  5821                           ; Regs used in _checkZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5822  15A9  1283               	bcf	3,5	;RP0=0, select bank0
  5823  15AA  1303               	bcf	3,6	;RP1=0, select bank0
  5824  15AB  0338               	decf	_row,w
  5825  15AC  0439               	iorwf	_row+1,w
  5826  15AD  1D03               	btfss	3,2
  5827  15AE  0008               	return
  5828  15AF  033A               	decf	_col,w
  5829  15B0  043B               	iorwf	_col+1,w
  5830  15B1  1D03               	btfss	3,2
  5831  15B2  0008               	return
  5832                           
  5833                           ;main.c: 368: if (zoneActMode == 0 && tempChange == 0 && tempChange == 0 && delayChange 
      +                          == 0 && timeChange == 0 && dateChange == 0) {
  5834  15B3  084B               	movf	_zoneActMode,w
  5835  15B4  1D03               	btfss	3,2
  5836  15B5  0008               	return
  5837  15B6  0841               	movf	_tempChange,w
  5838  15B7  1D03               	btfss	3,2
  5839  15B8  0008               	return
  5840  15B9  0841               	movf	_tempChange,w
  5841  15BA  1D03               	btfss	3,2
  5842  15BB  0008               	return
  5843  15BC  083E               	movf	_delayChange,w
  5844  15BD  1D03               	btfss	3,2
  5845  15BE  0008               	return
  5846  15BF  0840               	movf	_timeChange,w
  5847  15C0  1D03               	btfss	3,2
  5848  15C1  0008               	return
  5849  15C2  083F               	movf	_dateChange,w
  5850  15C3  1D03               	btfss	3,2
  5851  15C4  0008               	return
  5852                           
  5853                           ;main.c: 369: checkZoneMessage ();
  5854  15C5  160A  118A  268B   	fcall	_checkZoneMessage
  5855                           
  5856                           ;main.c: 370: zoneCheck = 1;
  5857  15C8  1283               	bcf	3,5	;RP0=0, select bank0
  5858  15C9  1303               	bcf	3,6	;RP1=0, select bank0
  5859  15CA  01CA               	clrf	_zoneCheck
  5860  15CB  0ACA               	incf	_zoneCheck,f
  5861  15CC  0008               	return
  5862  15CD                     __end_of_checkZones:	
  5863                           
  5864                           	psect	text35
  5865  168B                     __ptext35:	
  5866 ;; *************** function _checkZoneMessage *****************
  5867 ;; Defined at:
  5868 ;;		line 336 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  messagerow      6    8[COMMON] unsigned char [6]
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5882 ;;      Params:         0       0       0       0       0       0
  5883 ;;      Locals:         6       0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0
  5885 ;;      Totals:         6       0       0       0       0       0
  5886 ;;Total ram usage:        6 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    4
  5889 ;; This function calls:
  5890 ;;		_LCDdelay3
  5891 ;;		_clearDisplay
  5892 ;;		_resetCursor
  5893 ;;		_writeMessageline1
  5894 ;; This function is called by:
  5895 ;;		_checkZones
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           
  5900                           ;psect for function _checkZoneMessage
  5901  168B                     _checkZoneMessage:	
  5902                           
  5903                           ;main.c: 337: clearDisplay ();
  5904                           
  5905                           ;incstack = 0
  5906                           ; Regs used in _checkZoneMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5907  168B  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  5908                           
  5909                           ;main.c: 338: resetCursor();
  5910  1690  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  5911                           
  5912                           ;main.c: 339: char messagerow[] = "Check";
  5913  1695  3078               	movlw	checkZoneMessage@messagerow& (0+255)
  5914  1696  0084               	movwf	4
  5915  1697  1683               	bsf	3,5	;RP0=1, select bank1
  5916  1698  1303               	bcf	3,6	;RP1=0, select bank1
  5917  1699  0861               	movf	checkZoneMessage@F1255^(0+128),w
  5918  169A  0080               	movwf	0
  5919  169B  0A84               	incf	4,f
  5920  169C  0862               	movf	(checkZoneMessage@F1255^(0+128)+1),w
  5921  169D  0080               	movwf	0
  5922  169E  0A84               	incf	4,f
  5923  169F  0863               	movf	(checkZoneMessage@F1255^(0+128)+2),w
  5924  16A0  0080               	movwf	0
  5925  16A1  0A84               	incf	4,f
  5926  16A2  0864               	movf	(checkZoneMessage@F1255^(0+128)+3),w
  5927  16A3  0080               	movwf	0
  5928  16A4  0A84               	incf	4,f
  5929  16A5  0865               	movf	(checkZoneMessage@F1255^(0+128)+4),w
  5930  16A6  0080               	movwf	0
  5931  16A7  0A84               	incf	4,f
  5932  16A8  0866               	movf	(checkZoneMessage@F1255^(0+128)+5),w
  5933  16A9  0080               	movwf	0
  5934                           
  5935                           ;main.c: 340: writeMessageline1(messagerow);
  5936  16AA  3078               	movlw	(low (checkZoneMessage@messagerow| 0))& (0+255)
  5937  16AB  160A  118A  23D7  160A  118A  	fcall	_writeMessageline1
  5938                           
  5939                           ;main.c: 341: LCDdelay3 ();
  5940  16B0  160A  118A  2417   	fcall	_LCDdelay3
  5941  16B3  0008               	return
  5942  16B4                     __end_of_checkZoneMessage:	
  5943                           
  5944                           	psect	text36
  5945  0EE1                     __ptext36:	
  5946 ;; *************** function _checkButtons *****************
  5947 ;; Defined at:
  5948 ;;		line 29 in file "buttons.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;		None
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  rval            1    0[COMMON] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  1    wreg      unsigned char 
  5955 ;; Registers used:
  5956 ;;		wreg, status,2, status,0, pclath, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  5962 ;;      Params:         0       0       0       0       0       0
  5963 ;;      Locals:         1       0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0       0
  5965 ;;      Totals:         1       0       0       0       0       0
  5966 ;;Total ram usage:        1 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    1
  5969 ;; This function calls:
  5970 ;;		_buttonsetup
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;;		_ButtonGrid
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           
  5978                           ;psect for function _checkButtons
  5979  0EE1                     _checkButtons:	
  5980                           
  5981                           ;buttons.c: 31: char rval = 0;
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in _checkButtons: [wreg+status,2+status,0+pclath+cstack]
  5985  0EE1  01F0               	clrf	checkButtons@rval
  5986                           
  5987                           ;buttons.c: 32: buttonsetup ();
  5988  0EE2  160A  118A  24AA  120A  158A  	fcall	_buttonsetup
  5989                           
  5990                           ;buttons.c: 34: RC4 = 0;
  5991  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5992  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  5993  0EE9  1207               	bcf	7,4	;volatile
  5994                           
  5995                           ;buttons.c: 35: if (RC0 == 0) {
  5996  0EEA  1807               	btfsc	7,0	;volatile
  5997  0EEB  2EF4               	goto	l3483
  5998                           
  5999                           ;buttons.c: 36: col = 4;
  6000  0EEC  3004               	movlw	4
  6001  0EED  00BA               	movwf	_col
  6002  0EEE  3000               	movlw	0
  6003  0EEF  00BB               	movwf	_col+1
  6004                           
  6005                           ;buttons.c: 37: row = 1;
  6006  0EF0  3001               	movlw	1
  6007  0EF1  00B8               	movwf	_row
  6008  0EF2  3000               	movlw	0
  6009  0EF3  00B9               	movwf	_row+1
  6010  0EF4                     l3483:	
  6011                           
  6012                           ;buttons.c: 38: }
  6013                           ;buttons.c: 39: if (RC1 == 0) {
  6014  0EF4  1887               	btfsc	7,1	;volatile
  6015  0EF5  2EFE               	goto	l3487
  6016                           
  6017                           ;buttons.c: 40: col = 3;
  6018  0EF6  3003               	movlw	3
  6019  0EF7  00BA               	movwf	_col
  6020  0EF8  3000               	movlw	0
  6021  0EF9  00BB               	movwf	_col+1
  6022                           
  6023                           ;buttons.c: 41: row = 1;
  6024  0EFA  3001               	movlw	1
  6025  0EFB  00B8               	movwf	_row
  6026  0EFC  3000               	movlw	0
  6027  0EFD  00B9               	movwf	_row+1
  6028  0EFE                     l3487:	
  6029                           
  6030                           ;buttons.c: 42: }
  6031                           ;buttons.c: 43: if (RC2 == 0) {
  6032  0EFE  1907               	btfsc	7,2	;volatile
  6033  0EFF  2F08               	goto	l3491
  6034                           
  6035                           ;buttons.c: 44: col = 2;
  6036  0F00  3002               	movlw	2
  6037  0F01  00BA               	movwf	_col
  6038  0F02  3000               	movlw	0
  6039  0F03  00BB               	movwf	_col+1
  6040                           
  6041                           ;buttons.c: 45: row = 1;
  6042  0F04  3001               	movlw	1
  6043  0F05  00B8               	movwf	_row
  6044  0F06  3000               	movlw	0
  6045  0F07  00B9               	movwf	_row+1
  6046  0F08                     l3491:	
  6047                           
  6048                           ;buttons.c: 46: }
  6049                           ;buttons.c: 47: if (RC3 == 0) {
  6050  0F08  1987               	btfsc	7,3	;volatile
  6051  0F09  2F12               	goto	l3495
  6052                           
  6053                           ;buttons.c: 48: col = 1;
  6054  0F0A  3001               	movlw	1
  6055  0F0B  00BA               	movwf	_col
  6056  0F0C  3000               	movlw	0
  6057  0F0D  00BB               	movwf	_col+1
  6058                           
  6059                           ;buttons.c: 49: row = 1;
  6060  0F0E  3001               	movlw	1
  6061  0F0F  00B8               	movwf	_row
  6062  0F10  3000               	movlw	0
  6063  0F11  00B9               	movwf	_row+1
  6064  0F12                     l3495:	
  6065                           
  6066                           ;buttons.c: 50: }
  6067                           ;buttons.c: 51: RC4 = 1;
  6068  0F12  1607               	bsf	7,4	;volatile
  6069                           
  6070                           ;buttons.c: 54: RC5 = 0;
  6071  0F13  1287               	bcf	7,5	;volatile
  6072                           
  6073                           ;buttons.c: 55: if (RC0 == 0) {
  6074  0F14  1807               	btfsc	7,0	;volatile
  6075  0F15  2F18               	goto	l515
  6076                           
  6077                           ;buttons.c: 56: col = 4;
  6078  0F16  3004               	movlw	4
  6079  0F17  2F23               	goto	L6
  6080  0F18                     l515:	
  6081                           ;buttons.c: 58: }
  6082                           
  6083                           ;buttons.c: 57: row = 2;
  6084                           
  6085                           
  6086                           ;buttons.c: 59: else if (RC1 == 0) {
  6087  0F18  1887               	btfsc	7,1	;volatile
  6088  0F19  2F1C               	goto	l517
  6089                           
  6090                           ;buttons.c: 60: col = 3;
  6091  0F1A  3003               	movlw	3
  6092  0F1B  2F23               	goto	L6
  6093  0F1C                     l517:	
  6094                           ;buttons.c: 62: }
  6095                           
  6096                           ;buttons.c: 61: row = 2;
  6097                           
  6098                           
  6099                           ;buttons.c: 63: else if (RC2 == 0) {
  6100  0F1C  1907               	btfsc	7,2	;volatile
  6101  0F1D  2F20               	goto	l519
  6102                           
  6103                           ;buttons.c: 64: col = 2;
  6104  0F1E  3002               	movlw	2
  6105  0F1F  2F23               	goto	L6
  6106  0F20                     l519:	
  6107                           ;buttons.c: 66: }
  6108                           
  6109                           ;buttons.c: 65: row = 2;
  6110                           
  6111                           
  6112                           ;buttons.c: 67: else if (RC3 == 0) {
  6113  0F20  1987               	btfsc	7,3	;volatile
  6114  0F21  2F2A               	goto	l3509
  6115                           
  6116                           ;buttons.c: 68: col = 1;
  6117  0F22  3001               	movlw	1
  6118  0F23                     L6:	
  6119  0F23  00BA               	movwf	_col
  6120  0F24  3000               	movlw	0
  6121  0F25  00BB               	movwf	_col+1
  6122                           
  6123                           ;buttons.c: 69: row = 2;
  6124  0F26  3002               	movlw	2
  6125  0F27  00B8               	movwf	_row
  6126  0F28  3000               	movlw	0
  6127  0F29  00B9               	movwf	_row+1
  6128  0F2A                     l3509:	
  6129                           
  6130                           ;buttons.c: 70: }
  6131                           ;buttons.c: 71: RC5 =1;
  6132  0F2A  1687               	bsf	7,5	;volatile
  6133                           
  6134                           ;buttons.c: 72: RC6 = 0;
  6135  0F2B  1307               	bcf	7,6	;volatile
  6136                           
  6137                           ;buttons.c: 73: if (RC0 == 0) {
  6138  0F2C  1807               	btfsc	7,0	;volatile
  6139  0F2D  2F30               	goto	l522
  6140                           
  6141                           ;buttons.c: 74: col = 4;
  6142  0F2E  3004               	movlw	4
  6143  0F2F  2F3B               	goto	L9
  6144  0F30                     l522:	
  6145                           ;buttons.c: 76: }
  6146                           
  6147                           ;buttons.c: 75: row = 3;
  6148                           
  6149                           
  6150                           ;buttons.c: 77: else if (RC1 == 0) {
  6151  0F30  1887               	btfsc	7,1	;volatile
  6152  0F31  2F34               	goto	l524
  6153                           
  6154                           ;buttons.c: 78: col = 3;
  6155  0F32  3003               	movlw	3
  6156  0F33  2F3B               	goto	L9
  6157  0F34                     l524:	
  6158                           ;buttons.c: 80: }
  6159                           
  6160                           ;buttons.c: 79: row = 3;
  6161                           
  6162                           
  6163                           ;buttons.c: 81: else if (RC2 == 0) {
  6164  0F34  1907               	btfsc	7,2	;volatile
  6165  0F35  2F38               	goto	l526
  6166                           
  6167                           ;buttons.c: 82: col = 2;
  6168  0F36  3002               	movlw	2
  6169  0F37  2F3B               	goto	L9
  6170  0F38                     l526:	
  6171                           ;buttons.c: 84: }
  6172                           
  6173                           ;buttons.c: 83: row = 3;
  6174                           
  6175                           
  6176                           ;buttons.c: 85: else if (RC3 == 0) {
  6177  0F38  1987               	btfsc	7,3	;volatile
  6178  0F39  2F42               	goto	l3523
  6179                           
  6180                           ;buttons.c: 86: col = 1;
  6181  0F3A  3001               	movlw	1
  6182  0F3B                     L9:	
  6183  0F3B  00BA               	movwf	_col
  6184  0F3C  3000               	movlw	0
  6185  0F3D  00BB               	movwf	_col+1
  6186                           
  6187                           ;buttons.c: 87: row = 3;
  6188  0F3E  3003               	movlw	3
  6189  0F3F  00B8               	movwf	_row
  6190  0F40  3000               	movlw	0
  6191  0F41  00B9               	movwf	_row+1
  6192  0F42                     l3523:	
  6193                           
  6194                           ;buttons.c: 88: }
  6195                           ;buttons.c: 89: RC6 =1;
  6196  0F42  1707               	bsf	7,6	;volatile
  6197                           
  6198                           ;buttons.c: 91: RC7 = 0;
  6199  0F43  1387               	bcf	7,7	;volatile
  6200                           
  6201                           ;buttons.c: 92: if (RC0 == 0) {
  6202  0F44  1807               	btfsc	7,0	;volatile
  6203  0F45  2F48               	goto	l529
  6204                           
  6205                           ;buttons.c: 93: col = 4;
  6206  0F46  3004               	movlw	4
  6207  0F47  2F53               	goto	L12
  6208  0F48                     l529:	
  6209                           ;buttons.c: 95: }
  6210                           
  6211                           ;buttons.c: 94: row = 4;
  6212                           
  6213                           
  6214                           ;buttons.c: 96: else if (RC1 == 0) {
  6215  0F48  1887               	btfsc	7,1	;volatile
  6216  0F49  2F4C               	goto	l531
  6217                           
  6218                           ;buttons.c: 97: col = 3;
  6219  0F4A  3003               	movlw	3
  6220  0F4B  2F53               	goto	L12
  6221  0F4C                     l531:	
  6222                           ;buttons.c: 99: }
  6223                           
  6224                           ;buttons.c: 98: row = 4;
  6225                           
  6226                           
  6227                           ;buttons.c: 100: else if (RC2 == 0) {
  6228  0F4C  1907               	btfsc	7,2	;volatile
  6229  0F4D  2F50               	goto	l533
  6230                           
  6231                           ;buttons.c: 101: col = 2;
  6232  0F4E  3002               	movlw	2
  6233  0F4F  2F53               	goto	L12
  6234  0F50                     l533:	
  6235                           ;buttons.c: 103: }
  6236                           
  6237                           ;buttons.c: 102: row = 4;
  6238                           
  6239                           
  6240                           ;buttons.c: 104: else if (RC3 == 0) {
  6241  0F50  1987               	btfsc	7,3	;volatile
  6242  0F51  2F5A               	goto	l3537
  6243                           
  6244                           ;buttons.c: 105: col = 1;
  6245  0F52  3001               	movlw	1
  6246  0F53                     L12:	
  6247  0F53  00BA               	movwf	_col
  6248  0F54  3000               	movlw	0
  6249  0F55  00BB               	movwf	_col+1
  6250                           
  6251                           ;buttons.c: 106: row = 4;
  6252  0F56  3004               	movlw	4
  6253  0F57  00B8               	movwf	_row
  6254  0F58  3000               	movlw	0
  6255  0F59  00B9               	movwf	_row+1
  6256  0F5A                     l3537:	
  6257                           
  6258                           ;buttons.c: 107: }
  6259                           ;buttons.c: 108: RC7 =1;
  6260  0F5A  1787               	bsf	7,7	;volatile
  6261                           
  6262                           ;buttons.c: 110: if(col==0&&row==0){
  6263  0F5B  083A               	movf	_col,w
  6264  0F5C  043B               	iorwf	_col+1,w
  6265  0F5D  1D03               	btfss	3,2
  6266  0F5E  2F63               	goto	l536
  6267  0F5F  0838               	movf	_row,w
  6268  0F60  0439               	iorwf	_row+1,w
  6269  0F61  1903               	btfsc	3,2
  6270  0F62  2F65               	goto	l3545
  6271  0F63                     l536:	
  6272                           ;buttons.c: 111: }else{
  6273                           
  6274                           
  6275                           ;buttons.c: 112: rval = 1;
  6276  0F63  01F0               	clrf	checkButtons@rval
  6277  0F64  0AF0               	incf	checkButtons@rval,f
  6278  0F65                     l3545:	
  6279                           
  6280                           ;buttons.c: 113: }
  6281                           ;buttons.c: 116: return rval;
  6282  0F65  0870               	movf	checkButtons@rval,w
  6283  0F66  0008               	return
  6284  0F67                     __end_of_checkButtons:	
  6285                           
  6286                           	psect	text37
  6287  14AA                     __ptext37:	
  6288 ;; *************** function _buttonsetup *****************
  6289 ;; Defined at:
  6290 ;;		line 7 in file "buttons.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0
  6307 ;;      Totals:         0       0       0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; This function calls:
  6311 ;;		Nothing
  6312 ;; This function is called by:
  6313 ;;		_checkButtons
  6314 ;;		_checkButton
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           
  6319                           ;psect for function _buttonsetup
  6320  14AA                     _buttonsetup:	
  6321                           
  6322                           ;buttons.c: 8: ADCON1 = 0x06;
  6323                           
  6324                           ;incstack = 0
  6325                           ; Regs used in _buttonsetup: [wreg+status,2]
  6326  14AA  3006               	movlw	6
  6327  14AB  1683               	bsf	3,5	;RP0=1, select bank1
  6328  14AC  1303               	bcf	3,6	;RP1=0, select bank1
  6329  14AD  009F               	movwf	31	;volatile
  6330                           
  6331                           ;buttons.c: 9: TRISA = 0x00;
  6332  14AE  0185               	clrf	5	;volatile
  6333                           
  6334                           ;buttons.c: 10: PORTA = 0x00;
  6335  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  6336  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  6337  14B1  0185               	clrf	5	;volatile
  6338                           
  6339                           ;buttons.c: 11: TRISC = 0x0f;
  6340  14B2  300F               	movlw	15
  6341  14B3  1683               	bsf	3,5	;RP0=1, select bank1
  6342  14B4  1303               	bcf	3,6	;RP1=0, select bank1
  6343  14B5  0087               	movwf	7	;volatile
  6344                           
  6345                           ;buttons.c: 12: PORTC = 0xf0;
  6346  14B6  30F0               	movlw	240
  6347  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  6348  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  6349  14B9  0087               	movwf	7	;volatile
  6350                           
  6351                           ;buttons.c: 13: TRISD = 0x00;
  6352  14BA  1683               	bsf	3,5	;RP0=1, select bank1
  6353  14BB  1303               	bcf	3,6	;RP1=0, select bank1
  6354  14BC  0188               	clrf	8	;volatile
  6355                           
  6356                           ;buttons.c: 14: PORTD = 0x00;
  6357  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  6358  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  6359  14BF  0188               	clrf	8	;volatile
  6360  14C0  0008               	return
  6361  14C1                     __end_of_buttonsetup:	
  6362                           
  6363                           	psect	text38
  6364  1585                     __ptext38:	
  6365 ;; *************** function _changeTimeMode *****************
  6366 ;; Defined at:
  6367 ;;		line 527 in file "main.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6381 ;;      Params:         0       0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0
  6384 ;;      Totals:         0       0       0       0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_main
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function _changeTimeMode
  6396  1585                     _changeTimeMode:	
  6397                           
  6398                           ;main.c: 528: if (row == 3 && col == 3) {
  6399                           
  6400                           ;incstack = 0
  6401                           ; Regs used in _changeTimeMode: [wreg+status,2+status,0]
  6402  1585  3003               	movlw	3
  6403  1586  1283               	bcf	3,5	;RP0=0, select bank0
  6404  1587  1303               	bcf	3,6	;RP1=0, select bank0
  6405  1588  0638               	xorwf	_row,w
  6406  1589  0439               	iorwf	_row+1,w
  6407  158A  1D03               	btfss	3,2
  6408  158B  0008               	return
  6409  158C  3003               	movlw	3
  6410  158D  063A               	xorwf	_col,w
  6411  158E  043B               	iorwf	_col+1,w
  6412  158F  1D03               	btfss	3,2
  6413  1590  0008               	return
  6414                           
  6415                           ;main.c: 530: if (zoneActMode == 0 && zoneCheck == 0 && durationChange == 0 && alertChan
      +                          ge == 0 && tempChange == 0 && delayChange == 0 && dateChange == 0) {
  6416  1591  084B               	movf	_zoneActMode,w
  6417  1592  1D03               	btfss	3,2
  6418  1593  0008               	return
  6419  1594  084A               	movf	_zoneCheck,w
  6420  1595  1D03               	btfss	3,2
  6421  1596  0008               	return
  6422  1597  082A               	movf	_durationChange,w
  6423  1598  1D03               	btfss	3,2
  6424  1599  0008               	return
  6425  159A  0829               	movf	_alertChange,w
  6426  159B  1D03               	btfss	3,2
  6427  159C  0008               	return
  6428  159D  0841               	movf	_tempChange,w
  6429  159E  1D03               	btfss	3,2
  6430  159F  0008               	return
  6431  15A0  083E               	movf	_delayChange,w
  6432  15A1  1D03               	btfss	3,2
  6433  15A2  0008               	return
  6434  15A3  083F               	movf	_dateChange,w
  6435  15A4  1D03               	btfss	3,2
  6436  15A5  0008               	return
  6437                           
  6438                           ;main.c: 531: timeChange = 1;
  6439  15A6  01C0               	clrf	_timeChange
  6440  15A7  0AC0               	incf	_timeChange,f
  6441  15A8  0008               	return
  6442  15A9                     __end_of_changeTimeMode:	
  6443                           
  6444                           	psect	text39
  6445  05D1                     __ptext39:	
  6446 ;; *************** function _changeTime *****************
  6447 ;; Defined at:
  6448 ;;		line 535 in file "main.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  hourunits       1    5[BANK0h] unsigned char 
  6453 ;;  hourtens        1    4[BANK0h] unsigned char 
  6454 ;;  minunits        1    3[BANK0h] unsigned char 
  6455 ;;  mintens         1    2[BANK0h] unsigned char 
  6456 ;;  secunits        1    1[BANK0h] unsigned char 
  6457 ;;  sectens         1    0[BANK0h] unsigned char 
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0, pclath, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6467 ;;      Params:         0       0       0       0       0       0
  6468 ;;      Locals:         0       6       0       0       0       0
  6469 ;;      Temps:          3       0       0       0       0       0
  6470 ;;      Totals:         3       6       0       0       0       0
  6471 ;;Total ram usage:        9 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    4
  6474 ;; This function calls:
  6475 ;;		_LCDdelay2
  6476 ;;		_LCDsetup
  6477 ;;		___awdiv
  6478 ;;		___awmod
  6479 ;;		_clearDisplay
  6480 ;;		_resetCursor
  6481 ;;		_writeChar
  6482 ;; This function is called by:
  6483 ;;		_main
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _changeTime
  6489  05D1                     _changeTime:	
  6490                           
  6491                           ;main.c: 536: char sectens = table1[0]/10;
  6492                           
  6493                           ;incstack = 0
  6494                           ; Regs used in _changeTime: [wreg+status,2+status,0+pclath+cstack]
  6495  05D1  300A               	movlw	10
  6496  05D2  00F0               	movwf	___awdiv@divisor
  6497  05D3  3000               	movlw	0
  6498  05D4  00F1               	movwf	___awdiv@divisor+1
  6499  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  6500  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  6501  05D7  0831               	movf	_table1,w
  6502  05D8  00F9               	movwf	??_changeTime
  6503  05D9  01FA               	clrf	??_changeTime+1
  6504  05DA  0879               	movf	??_changeTime,w
  6505  05DB  00F2               	movwf	___awdiv@dividend
  6506  05DC  087A               	movf	??_changeTime+1,w
  6507  05DD  00F3               	movwf	___awdiv@dividend+1
  6508  05DE  120A  158A  2500  120A  118A  	fcall	___awdiv
  6509  05E3  0870               	movf	?___awdiv,w
  6510  05E4  00FB               	movwf	??_changeTime+2
  6511  05E5  087B               	movf	??_changeTime+2,w
  6512  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  6513  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  6514  05E8  00D2               	movwf	changeTime@sectens
  6515                           
  6516                           ;main.c: 537: char secunits = table1[0]%10;
  6517  05E9  300A               	movlw	10
  6518  05EA  00F0               	movwf	___awmod@divisor
  6519  05EB  3000               	movlw	0
  6520  05EC  00F1               	movwf	___awmod@divisor+1
  6521  05ED  0831               	movf	_table1,w
  6522  05EE  00F9               	movwf	??_changeTime
  6523  05EF  01FA               	clrf	??_changeTime+1
  6524  05F0  0879               	movf	??_changeTime,w
  6525  05F1  00F2               	movwf	___awmod@dividend
  6526  05F2  087A               	movf	??_changeTime+1,w
  6527  05F3  00F3               	movwf	___awmod@dividend+1
  6528  05F4  120A  158A  2411  120A  118A  	fcall	___awmod
  6529  05F9  0870               	movf	?___awmod,w
  6530  05FA  00FB               	movwf	??_changeTime+2
  6531  05FB  087B               	movf	??_changeTime+2,w
  6532  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  6533  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  6534  05FE  00D3               	movwf	changeTime@secunits
  6535                           
  6536                           ;main.c: 538: char mintens = table1[1]/10;
  6537  05FF  300A               	movlw	10
  6538  0600  00F0               	movwf	___awdiv@divisor
  6539  0601  3000               	movlw	0
  6540  0602  00F1               	movwf	___awdiv@divisor+1
  6541  0603  0832               	movf	_table1+1,w
  6542  0604  00F9               	movwf	??_changeTime
  6543  0605  01FA               	clrf	??_changeTime+1
  6544  0606  0879               	movf	??_changeTime,w
  6545  0607  00F2               	movwf	___awdiv@dividend
  6546  0608  087A               	movf	??_changeTime+1,w
  6547  0609  00F3               	movwf	___awdiv@dividend+1
  6548  060A  120A  158A  2500  120A  118A  	fcall	___awdiv
  6549  060F  0870               	movf	?___awdiv,w
  6550  0610  00FB               	movwf	??_changeTime+2
  6551  0611  087B               	movf	??_changeTime+2,w
  6552  0612  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0613  1303               	bcf	3,6	;RP1=0, select bank0
  6554  0614  00D4               	movwf	changeTime@mintens
  6555                           
  6556                           ;main.c: 539: char minunits = table1[1]%10;
  6557  0615  300A               	movlw	10
  6558  0616  00F0               	movwf	___awmod@divisor
  6559  0617  3000               	movlw	0
  6560  0618  00F1               	movwf	___awmod@divisor+1
  6561  0619  0832               	movf	_table1+1,w
  6562  061A  00F9               	movwf	??_changeTime
  6563  061B  01FA               	clrf	??_changeTime+1
  6564  061C  0879               	movf	??_changeTime,w
  6565  061D  00F2               	movwf	___awmod@dividend
  6566  061E  087A               	movf	??_changeTime+1,w
  6567  061F  00F3               	movwf	___awmod@dividend+1
  6568  0620  120A  158A  2411  120A  118A  	fcall	___awmod
  6569  0625  0870               	movf	?___awmod,w
  6570  0626  00FB               	movwf	??_changeTime+2
  6571  0627  087B               	movf	??_changeTime+2,w
  6572  0628  1283               	bcf	3,5	;RP0=0, select bank0
  6573  0629  1303               	bcf	3,6	;RP1=0, select bank0
  6574  062A  00D5               	movwf	changeTime@minunits
  6575                           
  6576                           ;main.c: 540: char hourtens = table1[2]/10;
  6577  062B  300A               	movlw	10
  6578  062C  00F0               	movwf	___awdiv@divisor
  6579  062D  3000               	movlw	0
  6580  062E  00F1               	movwf	___awdiv@divisor+1
  6581  062F  0833               	movf	_table1+2,w
  6582  0630  00F9               	movwf	??_changeTime
  6583  0631  01FA               	clrf	??_changeTime+1
  6584  0632  0879               	movf	??_changeTime,w
  6585  0633  00F2               	movwf	___awdiv@dividend
  6586  0634  087A               	movf	??_changeTime+1,w
  6587  0635  00F3               	movwf	___awdiv@dividend+1
  6588  0636  120A  158A  2500  120A  118A  	fcall	___awdiv
  6589  063B  0870               	movf	?___awdiv,w
  6590  063C  00FB               	movwf	??_changeTime+2
  6591  063D  087B               	movf	??_changeTime+2,w
  6592  063E  1283               	bcf	3,5	;RP0=0, select bank0
  6593  063F  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0640  00D6               	movwf	changeTime@hourtens
  6595                           
  6596                           ;main.c: 541: char hourunits = table1[2]%10;
  6597  0641  300A               	movlw	10
  6598  0642  00F0               	movwf	___awmod@divisor
  6599  0643  3000               	movlw	0
  6600  0644  00F1               	movwf	___awmod@divisor+1
  6601  0645  0833               	movf	_table1+2,w
  6602  0646  00F9               	movwf	??_changeTime
  6603  0647  01FA               	clrf	??_changeTime+1
  6604  0648  0879               	movf	??_changeTime,w
  6605  0649  00F2               	movwf	___awmod@dividend
  6606  064A  087A               	movf	??_changeTime+1,w
  6607  064B  00F3               	movwf	___awmod@dividend+1
  6608  064C  120A  158A  2411  120A  118A  	fcall	___awmod
  6609  0651  0870               	movf	?___awmod,w
  6610  0652  00FB               	movwf	??_changeTime+2
  6611  0653  087B               	movf	??_changeTime+2,w
  6612  0654  1283               	bcf	3,5	;RP0=0, select bank0
  6613  0655  1303               	bcf	3,6	;RP1=0, select bank0
  6614  0656  00D7               	movwf	changeTime@hourunits
  6615                           
  6616                           ;main.c: 542: if (timeChange == 1) {
  6617  0657  0340               	decf	_timeChange,w
  6618  0658  1D03               	btfss	3,2
  6619  0659  0008               	return
  6620                           
  6621                           ;main.c: 543: if (row == 1 && col == 3) {
  6622  065A  0338               	decf	_row,w
  6623  065B  0439               	iorwf	_row+1,w
  6624  065C  1D03               	btfss	3,2
  6625  065D  2E92               	goto	l5057
  6626  065E  3003               	movlw	3
  6627  065F  063A               	xorwf	_col,w
  6628  0660  043B               	iorwf	_col+1,w
  6629  0661  1D03               	btfss	3,2
  6630  0662  2E92               	goto	l5057
  6631                           
  6632                           ;main.c: 544: table1[0] ++;
  6633  0663  3001               	movlw	1
  6634  0664  00F9               	movwf	??_changeTime
  6635  0665  0879               	movf	??_changeTime,w
  6636  0666  07B1               	addwf	_table1,f
  6637                           
  6638                           ;main.c: 545: LCDsetup ();
  6639  0667  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  6640                           
  6641                           ;main.c: 546: clearDisplay ();
  6642  066C  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  6643                           
  6644                           ;main.c: 547: resetCursor();
  6645  0671  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  6646                           
  6647                           ;main.c: 548: writeChar('\'' + sectens - 30 + '\'');
  6648  0676  1283               	bcf	3,5	;RP0=0, select bank0
  6649  0677  1303               	bcf	3,6	;RP1=0, select bank0
  6650  0678  0852               	movf	changeTime@sectens,w
  6651  0679  3E30               	addlw	48
  6652  067A  160A  118A  253D  120A  118A  	fcall	_writeChar
  6653                           
  6654                           ;main.c: 549: writeChar('\''+secunits-30+'\'');
  6655  067F  1283               	bcf	3,5	;RP0=0, select bank0
  6656  0680  1303               	bcf	3,6	;RP1=0, select bank0
  6657  0681  0853               	movf	changeTime@secunits,w
  6658  0682  3E30               	addlw	48
  6659  0683  160A  118A  253D  120A  118A  	fcall	_writeChar
  6660                           
  6661                           ;main.c: 550: LCDdelay2();
  6662  0688  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6663                           
  6664                           ;main.c: 551: LCDdelay2();
  6665  068D  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6666  0692                     l5057:	
  6667                           
  6668                           ;main.c: 552: }
  6669                           ;main.c: 556: if (row == 2 && col == 3) {
  6670  0692  3002               	movlw	2
  6671  0693  1283               	bcf	3,5	;RP0=0, select bank0
  6672  0694  1303               	bcf	3,6	;RP1=0, select bank0
  6673  0695  0638               	xorwf	_row,w
  6674  0696  0439               	iorwf	_row+1,w
  6675  0697  1D03               	btfss	3,2
  6676  0698  2ECB               	goto	l5077
  6677  0699  3003               	movlw	3
  6678  069A  063A               	xorwf	_col,w
  6679  069B  043B               	iorwf	_col+1,w
  6680  069C  1D03               	btfss	3,2
  6681  069D  2ECB               	goto	l5077
  6682                           
  6683                           ;main.c: 557: table1[0] --;
  6684  069E  3001               	movlw	1
  6685  069F  02B1               	subwf	_table1,f
  6686                           
  6687                           ;main.c: 558: LCDsetup ();
  6688  06A0  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  6689                           
  6690                           ;main.c: 559: clearDisplay ();
  6691  06A5  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  6692                           
  6693                           ;main.c: 560: resetCursor();
  6694  06AA  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  6695                           
  6696                           ;main.c: 561: writeChar('\'' + sectens - 30 + '\'');
  6697  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  6698  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  6699  06B1  0852               	movf	changeTime@sectens,w
  6700  06B2  3E30               	addlw	48
  6701  06B3  160A  118A  253D  120A  118A  	fcall	_writeChar
  6702                           
  6703                           ;main.c: 562: writeChar('\''+secunits-30+'\'');
  6704  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  6705  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  6706  06BA  0853               	movf	changeTime@secunits,w
  6707  06BB  3E30               	addlw	48
  6708  06BC  160A  118A  253D  120A  118A  	fcall	_writeChar
  6709                           
  6710                           ;main.c: 563: LCDdelay2();
  6711  06C1  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6712                           
  6713                           ;main.c: 564: LCDdelay2();
  6714  06C6  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6715  06CB                     l5077:	
  6716                           
  6717                           ;main.c: 565: }
  6718                           ;main.c: 568: if (row == 1 && col == 2) {
  6719  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  6720  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  6721  06CD  0338               	decf	_row,w
  6722  06CE  0439               	iorwf	_row+1,w
  6723  06CF  1D03               	btfss	3,2
  6724  06D0  2F05               	goto	l5097
  6725  06D1  3002               	movlw	2
  6726  06D2  063A               	xorwf	_col,w
  6727  06D3  043B               	iorwf	_col+1,w
  6728  06D4  1D03               	btfss	3,2
  6729  06D5  2F05               	goto	l5097
  6730                           
  6731                           ;main.c: 569: table1[1] ++;
  6732  06D6  3001               	movlw	1
  6733  06D7  00F9               	movwf	??_changeTime
  6734  06D8  0879               	movf	??_changeTime,w
  6735  06D9  07B2               	addwf	_table1+1,f
  6736                           
  6737                           ;main.c: 570: LCDsetup ();
  6738  06DA  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  6739                           
  6740                           ;main.c: 571: clearDisplay ();
  6741  06DF  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  6742                           
  6743                           ;main.c: 572: resetCursor();
  6744  06E4  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  6745                           
  6746                           ;main.c: 573: writeChar('\'' + mintens - 30 + '\'');
  6747  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6748  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  6749  06EB  0854               	movf	changeTime@mintens,w
  6750  06EC  3E30               	addlw	48
  6751  06ED  160A  118A  253D  120A  118A  	fcall	_writeChar
  6752                           
  6753                           ;main.c: 574: writeChar('\''+minunits-30+'\'');
  6754  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  6755  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  6756  06F4  0855               	movf	changeTime@minunits,w
  6757  06F5  3E30               	addlw	48
  6758  06F6  160A  118A  253D  120A  118A  	fcall	_writeChar
  6759                           
  6760                           ;main.c: 575: LCDdelay2();
  6761  06FB  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6762                           
  6763                           ;main.c: 576: LCDdelay2();
  6764  0700  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6765  0705                     l5097:	
  6766                           
  6767                           ;main.c: 577: }
  6768                           ;main.c: 581: if (row == 2 && col == 2) {
  6769  0705  3002               	movlw	2
  6770  0706  1283               	bcf	3,5	;RP0=0, select bank0
  6771  0707  1303               	bcf	3,6	;RP1=0, select bank0
  6772  0708  0638               	xorwf	_row,w
  6773  0709  0439               	iorwf	_row+1,w
  6774  070A  1D03               	btfss	3,2
  6775  070B  2F3E               	goto	l5117
  6776  070C  3002               	movlw	2
  6777  070D  063A               	xorwf	_col,w
  6778  070E  043B               	iorwf	_col+1,w
  6779  070F  1D03               	btfss	3,2
  6780  0710  2F3E               	goto	l5117
  6781                           
  6782                           ;main.c: 582: table1[1] --;
  6783  0711  3001               	movlw	1
  6784  0712  02B2               	subwf	_table1+1,f
  6785                           
  6786                           ;main.c: 583: LCDsetup ();
  6787  0713  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  6788                           
  6789                           ;main.c: 584: clearDisplay ();
  6790  0718  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  6791                           
  6792                           ;main.c: 585: resetCursor();
  6793  071D  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  6794                           
  6795                           ;main.c: 586: writeChar('\'' + mintens - 30 + '\'');
  6796  0722  1283               	bcf	3,5	;RP0=0, select bank0
  6797  0723  1303               	bcf	3,6	;RP1=0, select bank0
  6798  0724  0854               	movf	changeTime@mintens,w
  6799  0725  3E30               	addlw	48
  6800  0726  160A  118A  253D  120A  118A  	fcall	_writeChar
  6801                           
  6802                           ;main.c: 587: writeChar('\''+minunits-30+'\'');
  6803  072B  1283               	bcf	3,5	;RP0=0, select bank0
  6804  072C  1303               	bcf	3,6	;RP1=0, select bank0
  6805  072D  0855               	movf	changeTime@minunits,w
  6806  072E  3E30               	addlw	48
  6807  072F  160A  118A  253D  120A  118A  	fcall	_writeChar
  6808                           
  6809                           ;main.c: 588: LCDdelay2();
  6810  0734  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6811                           
  6812                           ;main.c: 589: LCDdelay2();
  6813  0739  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6814  073E                     l5117:	
  6815                           
  6816                           ;main.c: 590: }
  6817                           ;main.c: 593: if (row == 1 && col == 1) {
  6818  073E  1283               	bcf	3,5	;RP0=0, select bank0
  6819  073F  1303               	bcf	3,6	;RP1=0, select bank0
  6820  0740  0338               	decf	_row,w
  6821  0741  0439               	iorwf	_row+1,w
  6822  0742  1D03               	btfss	3,2
  6823  0743  2F77               	goto	l5137
  6824  0744  033A               	decf	_col,w
  6825  0745  043B               	iorwf	_col+1,w
  6826  0746  1D03               	btfss	3,2
  6827  0747  2F77               	goto	l5137
  6828                           
  6829                           ;main.c: 594: table1[2] ++;
  6830  0748  3001               	movlw	1
  6831  0749  00F9               	movwf	??_changeTime
  6832  074A  0879               	movf	??_changeTime,w
  6833  074B  07B3               	addwf	_table1+2,f
  6834                           
  6835                           ;main.c: 595: LCDsetup ();
  6836  074C  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  6837                           
  6838                           ;main.c: 596: clearDisplay ();
  6839  0751  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  6840                           
  6841                           ;main.c: 597: resetCursor();
  6842  0756  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  6843                           
  6844                           ;main.c: 598: writeChar('\'' + hourtens - 30 + '\'');
  6845  075B  1283               	bcf	3,5	;RP0=0, select bank0
  6846  075C  1303               	bcf	3,6	;RP1=0, select bank0
  6847  075D  0856               	movf	changeTime@hourtens,w
  6848  075E  3E30               	addlw	48
  6849  075F  160A  118A  253D  120A  118A  	fcall	_writeChar
  6850                           
  6851                           ;main.c: 599: writeChar('\''+hourunits-30+'\'');
  6852  0764  1283               	bcf	3,5	;RP0=0, select bank0
  6853  0765  1303               	bcf	3,6	;RP1=0, select bank0
  6854  0766  0857               	movf	changeTime@hourunits,w
  6855  0767  3E30               	addlw	48
  6856  0768  160A  118A  253D  120A  118A  	fcall	_writeChar
  6857                           
  6858                           ;main.c: 600: LCDdelay2();
  6859  076D  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6860                           
  6861                           ;main.c: 601: LCDdelay2();
  6862  0772  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6863  0777                     l5137:	
  6864                           
  6865                           ;main.c: 602: }
  6866                           ;main.c: 606: if (row == 2 && col == 1) {
  6867  0777  3002               	movlw	2
  6868  0778  1283               	bcf	3,5	;RP0=0, select bank0
  6869  0779  1303               	bcf	3,6	;RP1=0, select bank0
  6870  077A  0638               	xorwf	_row,w
  6871  077B  0439               	iorwf	_row+1,w
  6872  077C  1D03               	btfss	3,2
  6873  077D  0008               	return
  6874  077E  033A               	decf	_col,w
  6875  077F  043B               	iorwf	_col+1,w
  6876  0780  1D03               	btfss	3,2
  6877  0781  0008               	return
  6878                           
  6879                           ;main.c: 607: table1[2] --;
  6880  0782  3001               	movlw	1
  6881  0783  02B3               	subwf	_table1+2,f
  6882                           
  6883                           ;main.c: 608: LCDsetup ();
  6884  0784  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  6885                           
  6886                           ;main.c: 609: clearDisplay ();
  6887  0789  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  6888                           
  6889                           ;main.c: 610: resetCursor();
  6890  078E  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  6891                           
  6892                           ;main.c: 611: writeChar('\'' + hourtens - 30 + '\'');
  6893  0793  1283               	bcf	3,5	;RP0=0, select bank0
  6894  0794  1303               	bcf	3,6	;RP1=0, select bank0
  6895  0795  0856               	movf	changeTime@hourtens,w
  6896  0796  3E30               	addlw	48
  6897  0797  160A  118A  253D  120A  118A  	fcall	_writeChar
  6898                           
  6899                           ;main.c: 612: writeChar('\''+hourunits-30+'\'');
  6900  079C  1283               	bcf	3,5	;RP0=0, select bank0
  6901  079D  1303               	bcf	3,6	;RP1=0, select bank0
  6902  079E  0857               	movf	changeTime@hourunits,w
  6903  079F  3E30               	addlw	48
  6904  07A0  160A  118A  253D  120A  118A  	fcall	_writeChar
  6905                           
  6906                           ;main.c: 613: LCDdelay2();
  6907  07A5  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  6908                           
  6909                           ;main.c: 614: LCDdelay2();
  6910  07AA  160A  118A  2427   	fcall	_LCDdelay2
  6911  07AD  0008               	return
  6912  07AE                     __end_of_changeTime:	
  6913                           
  6914                           	psect	text40
  6915  15F2                     __ptext40:	
  6916 ;; *************** function _changeTempMode *****************
  6917 ;; Defined at:
  6918 ;;		line 490 in file "main.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;		None
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  1    wreg      void 
  6925 ;; Registers used:
  6926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  6932 ;;      Params:         0       0       0       0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0
  6934 ;;      Temps:          0       0       0       0       0       0
  6935 ;;      Totals:         0       0       0       0       0       0
  6936 ;;Total ram usage:        0 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    5
  6939 ;; This function calls:
  6940 ;;		_changeTriggerMessage
  6941 ;; This function is called by:
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           
  6947                           ;psect for function _changeTempMode
  6948  15F2                     _changeTempMode:	
  6949                           
  6950                           ;main.c: 491: if (row == 1 && col == 2) {
  6951                           
  6952                           ;incstack = 0
  6953                           ; Regs used in _changeTempMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6954  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  6955  15F3  1303               	bcf	3,6	;RP1=0, select bank0
  6956  15F4  0338               	decf	_row,w
  6957  15F5  0439               	iorwf	_row+1,w
  6958  15F6  1D03               	btfss	3,2
  6959  15F7  0008               	return
  6960  15F8  3002               	movlw	2
  6961  15F9  063A               	xorwf	_col,w
  6962  15FA  043B               	iorwf	_col+1,w
  6963  15FB  1D03               	btfss	3,2
  6964  15FC  0008               	return
  6965                           
  6966                           ;main.c: 493: if (zoneActMode == 0 && zoneCheck == 0 && tempChange == 0 && delayChange =
      +                          = 0 && timeChange == 0 && dateChange == 0) {
  6967  15FD  084B               	movf	_zoneActMode,w
  6968  15FE  1D03               	btfss	3,2
  6969  15FF  0008               	return
  6970  1600  084A               	movf	_zoneCheck,w
  6971  1601  1D03               	btfss	3,2
  6972  1602  0008               	return
  6973  1603  0841               	movf	_tempChange,w
  6974  1604  1D03               	btfss	3,2
  6975  1605  0008               	return
  6976  1606  083E               	movf	_delayChange,w
  6977  1607  1D03               	btfss	3,2
  6978  1608  0008               	return
  6979  1609  0840               	movf	_timeChange,w
  6980  160A  1D03               	btfss	3,2
  6981  160B  0008               	return
  6982  160C  083F               	movf	_dateChange,w
  6983  160D  1D03               	btfss	3,2
  6984  160E  0008               	return
  6985                           
  6986                           ;main.c: 494: changeTriggerMessage ();
  6987  160F  120A  158A  203A   	fcall	_changeTriggerMessage
  6988                           
  6989                           ;main.c: 495: tempChange = 1;
  6990  1612  1283               	bcf	3,5	;RP0=0, select bank0
  6991  1613  1303               	bcf	3,6	;RP1=0, select bank0
  6992  1614  01C1               	clrf	_tempChange
  6993  1615  0AC1               	incf	_tempChange,f
  6994  1616  0008               	return
  6995  1617                     __end_of_changeTempMode:	
  6996                           
  6997                           	psect	text41
  6998  083A                     __ptext41:	
  6999 ;; *************** function _changeTriggerMessage *****************
  7000 ;; Defined at:
  7001 ;;		line 343 in file "main.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  messagerow     12    0[BANK0h] unsigned char [12]
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7015 ;;      Params:         0       0       0       0       0       0
  7016 ;;      Locals:         0      12       0       0       0       0
  7017 ;;      Temps:          4       0       0       0       0       0
  7018 ;;      Totals:         4      12       0       0       0       0
  7019 ;;Total ram usage:       16 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    4
  7022 ;; This function calls:
  7023 ;;		_LCDdelay3
  7024 ;;		_clearDisplay
  7025 ;;		_resetCursor
  7026 ;;		_writeMessageline1
  7027 ;; This function is called by:
  7028 ;;		_changeTempMode
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           
  7033                           ;psect for function _changeTriggerMessage
  7034  083A                     _changeTriggerMessage:	
  7035                           
  7036                           ;main.c: 344: clearDisplay ();
  7037                           
  7038                           ;incstack = 0
  7039                           ; Regs used in _changeTriggerMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7040  083A  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  7041                           
  7042                           ;main.c: 345: resetCursor();
  7043  083F  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  7044                           
  7045                           ;main.c: 346: char messagerow[] = "Change Temp";
  7046  0844  3052               	movlw	changeTriggerMessage@messagerow& (0+255)
  7047  0845  0084               	movwf	4
  7048  0846  3051               	movlw	low changeTriggerMessage@F1258
  7049  0847  00F8               	movwf	??_changeTriggerMessage
  7050  0848  0804               	movf	4,w
  7051  0849  00F9               	movwf	??_changeTriggerMessage+1
  7052  084A  300C               	movlw	12
  7053  084B  00FA               	movwf	??_changeTriggerMessage+2
  7054  084C                     u5960:	
  7055  084C  0878               	movf	??_changeTriggerMessage,w
  7056  084D  0084               	movwf	4
  7057  084E  1783               	bsf	3,7	;select IRP bank2
  7058  084F  0800               	movf	0,w
  7059  0850  00FB               	movwf	??_changeTriggerMessage+3
  7060  0851  0AF8               	incf	??_changeTriggerMessage,f
  7061  0852  0879               	movf	??_changeTriggerMessage+1,w
  7062  0853  0084               	movwf	4
  7063  0854  1383               	bcf	3,7	;select IRP bank0
  7064  0855  087B               	movf	??_changeTriggerMessage+3,w
  7065  0856  0080               	movwf	0
  7066  0857  0AF9               	incf	??_changeTriggerMessage+1,f
  7067  0858  0BFA               	decfsz	??_changeTriggerMessage+2,f
  7068  0859  284C               	goto	u5960
  7069                           
  7070                           ;main.c: 347: writeMessageline1(messagerow);
  7071  085A  3052               	movlw	(low (changeTriggerMessage@messagerow| 0))& (0+255)
  7072  085B  160A  118A  23D7  120A  158A  	fcall	_writeMessageline1
  7073                           
  7074                           ;main.c: 348: LCDdelay3 ();
  7075  0860  160A  118A  2417   	fcall	_LCDdelay3
  7076  0863  0008               	return
  7077  0864                     __end_of_changeTriggerMessage:	
  7078                           
  7079                           	psect	text42
  7080  0035                     __ptext42:	
  7081 ;; *************** function _changeTemp *****************
  7082 ;; Defined at:
  7083 ;;		line 499 in file "main.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  units           1   13[COMMON] unsigned char 
  7088 ;;  tens            1   12[COMMON] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0, pclath, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7098 ;;      Params:         0       0       0       0       0       0
  7099 ;;      Locals:         2       0       0       0       0       0
  7100 ;;      Temps:          3       0       0       0       0       0
  7101 ;;      Totals:         5       0       0       0       0       0
  7102 ;;Total ram usage:        5 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    4
  7105 ;; This function calls:
  7106 ;;		_LCDdelay2
  7107 ;;		_LCDsetup
  7108 ;;		___awdiv
  7109 ;;		___awmod
  7110 ;;		_clearDisplay
  7111 ;;		_resetCursor
  7112 ;;		_writeChar
  7113 ;; This function is called by:
  7114 ;;		_main
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           
  7119                           ;psect for function _changeTemp
  7120  0035                     _changeTemp:	
  7121                           
  7122                           ;main.c: 500: char tens = TriggerTemp/10;
  7123                           
  7124                           ;incstack = 0
  7125                           ; Regs used in _changeTemp: [wreg+status,2+status,0+pclath+cstack]
  7126  0035  300A               	movlw	10
  7127  0036  00F0               	movwf	___awdiv@divisor
  7128  0037  3000               	movlw	0
  7129  0038  00F1               	movwf	___awdiv@divisor+1
  7130  0039  1283               	bcf	3,5	;RP0=0, select bank0
  7131  003A  1303               	bcf	3,6	;RP1=0, select bank0
  7132  003B  083D               	movf	_TriggerTemp,w
  7133  003C  00F9               	movwf	??_changeTemp
  7134  003D  01FA               	clrf	??_changeTemp+1
  7135  003E  0879               	movf	??_changeTemp,w
  7136  003F  00F2               	movwf	___awdiv@dividend
  7137  0040  087A               	movf	??_changeTemp+1,w
  7138  0041  00F3               	movwf	___awdiv@dividend+1
  7139  0042  120A  158A  2500  120A  118A  	fcall	___awdiv
  7140  0047  0870               	movf	?___awdiv,w
  7141  0048  00FB               	movwf	??_changeTemp+2
  7142  0049  087B               	movf	??_changeTemp+2,w
  7143  004A  00FC               	movwf	changeTemp@tens
  7144                           
  7145                           ;main.c: 501: char units = TriggerTemp%10;
  7146  004B  300A               	movlw	10
  7147  004C  00F0               	movwf	___awmod@divisor
  7148  004D  3000               	movlw	0
  7149  004E  00F1               	movwf	___awmod@divisor+1
  7150  004F  1283               	bcf	3,5	;RP0=0, select bank0
  7151  0050  1303               	bcf	3,6	;RP1=0, select bank0
  7152  0051  083D               	movf	_TriggerTemp,w
  7153  0052  00F9               	movwf	??_changeTemp
  7154  0053  01FA               	clrf	??_changeTemp+1
  7155  0054  0879               	movf	??_changeTemp,w
  7156  0055  00F2               	movwf	___awmod@dividend
  7157  0056  087A               	movf	??_changeTemp+1,w
  7158  0057  00F3               	movwf	___awmod@dividend+1
  7159  0058  120A  158A  2411  120A  118A  	fcall	___awmod
  7160  005D  0870               	movf	?___awmod,w
  7161  005E  00FB               	movwf	??_changeTemp+2
  7162  005F  087B               	movf	??_changeTemp+2,w
  7163  0060  00FD               	movwf	changeTemp@units
  7164                           
  7165                           ;main.c: 502: if (tempChange == 1) {
  7166  0061  1283               	bcf	3,5	;RP0=0, select bank0
  7167  0062  1303               	bcf	3,6	;RP1=0, select bank0
  7168  0063  0341               	decf	_tempChange,w
  7169  0064  1D03               	btfss	3,2
  7170  0065  289A               	goto	l5013
  7171                           
  7172                           ;main.c: 503: if (row == 1 && col == 3) {
  7173  0066  0338               	decf	_row,w
  7174  0067  0439               	iorwf	_row+1,w
  7175  0068  1D03               	btfss	3,2
  7176  0069  289A               	goto	l5013
  7177  006A  3003               	movlw	3
  7178  006B  063A               	xorwf	_col,w
  7179  006C  043B               	iorwf	_col+1,w
  7180  006D  1D03               	btfss	3,2
  7181  006E  289A               	goto	l5013
  7182                           
  7183                           ;main.c: 504: TriggerTemp ++;
  7184  006F  3001               	movlw	1
  7185  0070  00F9               	movwf	??_changeTemp
  7186  0071  0879               	movf	??_changeTemp,w
  7187  0072  07BD               	addwf	_TriggerTemp,f
  7188                           
  7189                           ;main.c: 505: LCDsetup ();
  7190  0073  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7191                           
  7192                           ;main.c: 506: clearDisplay ();
  7193  0078  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7194                           
  7195                           ;main.c: 507: resetCursor();
  7196  007D  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  7197                           
  7198                           ;main.c: 508: writeChar('\'' + tens - 30 + '\'');
  7199  0082  087C               	movf	changeTemp@tens,w
  7200  0083  3E30               	addlw	48
  7201  0084  160A  118A  253D  120A  118A  	fcall	_writeChar
  7202                           
  7203                           ;main.c: 509: writeChar('\''+units-30+'\'');
  7204  0089  087D               	movf	changeTemp@units,w
  7205  008A  3E30               	addlw	48
  7206  008B  160A  118A  253D  120A  118A  	fcall	_writeChar
  7207                           
  7208                           ;main.c: 510: LCDdelay2();
  7209  0090  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7210                           
  7211                           ;main.c: 511: LCDdelay2();
  7212  0095  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7213  009A                     l5013:	
  7214                           
  7215                           ;main.c: 512: }
  7216                           ;main.c: 513: }
  7217                           ;main.c: 516: if (row == 2 && col == 3) {
  7218  009A  3002               	movlw	2
  7219  009B  1283               	bcf	3,5	;RP0=0, select bank0
  7220  009C  1303               	bcf	3,6	;RP1=0, select bank0
  7221  009D  0638               	xorwf	_row,w
  7222  009E  0439               	iorwf	_row+1,w
  7223  009F  1D03               	btfss	3,2
  7224  00A0  0008               	return
  7225  00A1  3003               	movlw	3
  7226  00A2  063A               	xorwf	_col,w
  7227  00A3  043B               	iorwf	_col+1,w
  7228  00A4  1D03               	btfss	3,2
  7229  00A5  0008               	return
  7230                           
  7231                           ;main.c: 517: TriggerTemp --;
  7232  00A6  3001               	movlw	1
  7233  00A7  02BD               	subwf	_TriggerTemp,f
  7234                           
  7235                           ;main.c: 518: LCDsetup ();
  7236  00A8  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7237                           
  7238                           ;main.c: 519: clearDisplay ();
  7239  00AD  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7240                           
  7241                           ;main.c: 520: resetCursor();
  7242  00B2  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  7243                           
  7244                           ;main.c: 521: writeChar('\'' + tens - 30 + '\'');
  7245  00B7  087C               	movf	changeTemp@tens,w
  7246  00B8  3E30               	addlw	48
  7247  00B9  160A  118A  253D  120A  118A  	fcall	_writeChar
  7248                           
  7249                           ;main.c: 522: writeChar('\''+units-30+'\'');
  7250  00BE  087D               	movf	changeTemp@units,w
  7251  00BF  3E30               	addlw	48
  7252  00C0  160A  118A  253D  120A  118A  	fcall	_writeChar
  7253                           
  7254                           ;main.c: 523: LCDdelay2();
  7255  00C5  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7256                           
  7257                           ;main.c: 524: LCDdelay2();
  7258  00CA  160A  118A  2427   	fcall	_LCDdelay2
  7259  00CD  0008               	return
  7260  00CE                     __end_of_changeTemp:	
  7261                           
  7262                           	psect	text43
  7263  14FB                     __ptext43:	
  7264 ;; *************** function _changeDelayMode *****************
  7265 ;; Defined at:
  7266 ;;		line 755 in file "main.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      void 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7280 ;;      Params:         0       0       0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0
  7283 ;;      Totals:         0       0       0       0       0       0
  7284 ;;Total ram usage:        0 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_main
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           
  7294                           ;psect for function _changeDelayMode
  7295  14FB                     _changeDelayMode:	
  7296                           
  7297                           ;main.c: 756: if (row == 3 && col == 1) {
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _changeDelayMode: [wreg+status,2+status,0]
  7301  14FB  3003               	movlw	3
  7302  14FC  1283               	bcf	3,5	;RP0=0, select bank0
  7303  14FD  1303               	bcf	3,6	;RP1=0, select bank0
  7304  14FE  0638               	xorwf	_row,w
  7305  14FF  0439               	iorwf	_row+1,w
  7306  1500  1D03               	btfss	3,2
  7307  1501  0008               	return
  7308  1502  033A               	decf	_col,w
  7309  1503  043B               	iorwf	_col+1,w
  7310  1504  1D03               	btfss	3,2
  7311  1505  0008               	return
  7312                           
  7313                           ;main.c: 758: if (zoneActMode == 0 && zoneCheck == 0 && tempChange == 0 && delayChange =
      +                          = 0 && timeChange == 0 && dateChange == 0) {
  7314  1506  084B               	movf	_zoneActMode,w
  7315  1507  1D03               	btfss	3,2
  7316  1508  0008               	return
  7317  1509  084A               	movf	_zoneCheck,w
  7318  150A  1D03               	btfss	3,2
  7319  150B  0008               	return
  7320  150C  0841               	movf	_tempChange,w
  7321  150D  1D03               	btfss	3,2
  7322  150E  0008               	return
  7323  150F  083E               	movf	_delayChange,w
  7324  1510  1D03               	btfss	3,2
  7325  1511  0008               	return
  7326  1512  0840               	movf	_timeChange,w
  7327  1513  1D03               	btfss	3,2
  7328  1514  0008               	return
  7329  1515  083F               	movf	_dateChange,w
  7330  1516  1D03               	btfss	3,2
  7331  1517  0008               	return
  7332                           
  7333                           ;main.c: 759: delayChange = 1;
  7334  1518  01BE               	clrf	_delayChange
  7335  1519  0ABE               	incf	_delayChange,f
  7336  151A  0008               	return
  7337  151B                     __end_of_changeDelayMode:	
  7338                           
  7339                           	psect	text44
  7340  0F67                     __ptext44:	
  7341 ;; *************** function _changeDelay *****************
  7342 ;; Defined at:
  7343 ;;		line 763 in file "main.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;		None
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  units           1   13[COMMON] unsigned char 
  7348 ;;  tens            1   12[COMMON] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0, pclath, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7358 ;;      Params:         0       0       0       0       0       0
  7359 ;;      Locals:         2       0       0       0       0       0
  7360 ;;      Temps:          3       0       0       0       0       0
  7361 ;;      Totals:         5       0       0       0       0       0
  7362 ;;Total ram usage:        5 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    4
  7365 ;; This function calls:
  7366 ;;		_LCDdelay2
  7367 ;;		_LCDsetup
  7368 ;;		___awdiv
  7369 ;;		___awmod
  7370 ;;		_clearDisplay
  7371 ;;		_resetCursor
  7372 ;;		_writeChar
  7373 ;; This function is called by:
  7374 ;;		_main
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _changeDelay
  7380  0F67                     _changeDelay:	
  7381                           
  7382                           ;main.c: 764: char tens = delayValue/10;
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _changeDelay: [wreg+status,2+status,0+pclath+cstack]
  7386  0F67  300A               	movlw	10
  7387  0F68  00F0               	movwf	___awdiv@divisor
  7388  0F69  3000               	movlw	0
  7389  0F6A  00F1               	movwf	___awdiv@divisor+1
  7390  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  7391  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  7392  0F6D  083C               	movf	_delayValue,w
  7393  0F6E  00F9               	movwf	??_changeDelay
  7394  0F6F  01FA               	clrf	??_changeDelay+1
  7395  0F70  0879               	movf	??_changeDelay,w
  7396  0F71  00F2               	movwf	___awdiv@dividend
  7397  0F72  087A               	movf	??_changeDelay+1,w
  7398  0F73  00F3               	movwf	___awdiv@dividend+1
  7399  0F74  120A  158A  2500  120A  158A  	fcall	___awdiv
  7400  0F79  0870               	movf	?___awdiv,w
  7401  0F7A  00FB               	movwf	??_changeDelay+2
  7402  0F7B  087B               	movf	??_changeDelay+2,w
  7403  0F7C  00FC               	movwf	changeDelay@tens
  7404                           
  7405                           ;main.c: 765: char units = delayValue%10;
  7406  0F7D  300A               	movlw	10
  7407  0F7E  00F0               	movwf	___awmod@divisor
  7408  0F7F  3000               	movlw	0
  7409  0F80  00F1               	movwf	___awmod@divisor+1
  7410  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  7411  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  7412  0F83  083C               	movf	_delayValue,w
  7413  0F84  00F9               	movwf	??_changeDelay
  7414  0F85  01FA               	clrf	??_changeDelay+1
  7415  0F86  0879               	movf	??_changeDelay,w
  7416  0F87  00F2               	movwf	___awmod@dividend
  7417  0F88  087A               	movf	??_changeDelay+1,w
  7418  0F89  00F3               	movwf	___awmod@dividend+1
  7419  0F8A  120A  158A  2411  120A  158A  	fcall	___awmod
  7420  0F8F  0870               	movf	?___awmod,w
  7421  0F90  00FB               	movwf	??_changeDelay+2
  7422  0F91  087B               	movf	??_changeDelay+2,w
  7423  0F92  00FD               	movwf	changeDelay@units
  7424                           
  7425                           ;main.c: 766: if (tempChange == 1) {
  7426  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  7427  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  7428  0F95  0341               	decf	_tempChange,w
  7429  0F96  1D03               	btfss	3,2
  7430  0F97  2FCC               	goto	l5305
  7431                           
  7432                           ;main.c: 767: if (row == 1 && col == 2) {
  7433  0F98  0338               	decf	_row,w
  7434  0F99  0439               	iorwf	_row+1,w
  7435  0F9A  1D03               	btfss	3,2
  7436  0F9B  2FCC               	goto	l5305
  7437  0F9C  3002               	movlw	2
  7438  0F9D  063A               	xorwf	_col,w
  7439  0F9E  043B               	iorwf	_col+1,w
  7440  0F9F  1D03               	btfss	3,2
  7441  0FA0  2FCC               	goto	l5305
  7442                           
  7443                           ;main.c: 768: delayValue ++;
  7444  0FA1  3001               	movlw	1
  7445  0FA2  00F9               	movwf	??_changeDelay
  7446  0FA3  0879               	movf	??_changeDelay,w
  7447  0FA4  07BC               	addwf	_delayValue,f
  7448                           
  7449                           ;main.c: 769: LCDsetup ();
  7450  0FA5  160A  118A  2493  120A  158A  	fcall	_LCDsetup
  7451                           
  7452                           ;main.c: 770: clearDisplay ();
  7453  0FAA  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  7454                           
  7455                           ;main.c: 771: resetCursor();
  7456  0FAF  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  7457                           
  7458                           ;main.c: 772: writeChar('\'' + tens - 30 + '\'');
  7459  0FB4  087C               	movf	changeDelay@tens,w
  7460  0FB5  3E30               	addlw	48
  7461  0FB6  160A  118A  253D  120A  158A  	fcall	_writeChar
  7462                           
  7463                           ;main.c: 773: writeChar('\''+units-30+'\'');
  7464  0FBB  087D               	movf	changeDelay@units,w
  7465  0FBC  3E30               	addlw	48
  7466  0FBD  160A  118A  253D  120A  158A  	fcall	_writeChar
  7467                           
  7468                           ;main.c: 774: LCDdelay2();
  7469  0FC2  160A  118A  2427  120A  158A  	fcall	_LCDdelay2
  7470                           
  7471                           ;main.c: 775: LCDdelay2();
  7472  0FC7  160A  118A  2427  120A  158A  	fcall	_LCDdelay2
  7473  0FCC                     l5305:	
  7474                           
  7475                           ;main.c: 776: }
  7476                           ;main.c: 777: }
  7477                           ;main.c: 780: if (row == 2 && col == 2) {
  7478  0FCC  3002               	movlw	2
  7479  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  7480  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  7481  0FCF  0638               	xorwf	_row,w
  7482  0FD0  0439               	iorwf	_row+1,w
  7483  0FD1  1D03               	btfss	3,2
  7484  0FD2  0008               	return
  7485  0FD3  3002               	movlw	2
  7486  0FD4  063A               	xorwf	_col,w
  7487  0FD5  043B               	iorwf	_col+1,w
  7488  0FD6  1D03               	btfss	3,2
  7489  0FD7  0008               	return
  7490                           
  7491                           ;main.c: 781: delayValue --;
  7492  0FD8  3001               	movlw	1
  7493  0FD9  02BC               	subwf	_delayValue,f
  7494                           
  7495                           ;main.c: 782: LCDsetup ();
  7496  0FDA  160A  118A  2493  120A  158A  	fcall	_LCDsetup
  7497                           
  7498                           ;main.c: 783: clearDisplay ();
  7499  0FDF  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  7500                           
  7501                           ;main.c: 784: resetCursor();
  7502  0FE4  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  7503                           
  7504                           ;main.c: 785: writeChar('\'' + tens - 30 + '\'');
  7505  0FE9  087C               	movf	changeDelay@tens,w
  7506  0FEA  3E30               	addlw	48
  7507  0FEB  160A  118A  253D  120A  158A  	fcall	_writeChar
  7508                           
  7509                           ;main.c: 786: writeChar('\''+units-30+'\'');
  7510  0FF0  087D               	movf	changeDelay@units,w
  7511  0FF1  3E30               	addlw	48
  7512  0FF2  160A  118A  253D  120A  158A  	fcall	_writeChar
  7513                           
  7514                           ;main.c: 787: LCDdelay2();
  7515  0FF7  160A  118A  2427  120A  158A  	fcall	_LCDdelay2
  7516                           
  7517                           ;main.c: 788: LCDdelay2();
  7518  0FFC  160A  118A  2427   	fcall	_LCDdelay2
  7519  0FFF  0008               	return
  7520  1000                     __end_of_changeDelay:	
  7521                           
  7522                           	psect	text45
  7523  1561                     __ptext45:	
  7524 ;; *************** function _changeDateMode *****************
  7525 ;; Defined at:
  7526 ;;		line 619 in file "main.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;		None
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      void 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7540 ;;      Params:         0       0       0       0       0       0
  7541 ;;      Locals:         0       0       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0       0
  7543 ;;      Totals:         0       0       0       0       0       0
  7544 ;;Total ram usage:        0 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_main
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function _changeDateMode
  7555  1561                     _changeDateMode:	
  7556                           
  7557                           ;main.c: 620: if (row == 4 && col == 3) {
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _changeDateMode: [wreg+status,2+status,0]
  7561  1561  3004               	movlw	4
  7562  1562  1283               	bcf	3,5	;RP0=0, select bank0
  7563  1563  1303               	bcf	3,6	;RP1=0, select bank0
  7564  1564  0638               	xorwf	_row,w
  7565  1565  0439               	iorwf	_row+1,w
  7566  1566  1D03               	btfss	3,2
  7567  1567  0008               	return
  7568  1568  3003               	movlw	3
  7569  1569  063A               	xorwf	_col,w
  7570  156A  043B               	iorwf	_col+1,w
  7571  156B  1D03               	btfss	3,2
  7572  156C  0008               	return
  7573                           
  7574                           ;main.c: 622: if (zoneActMode == 0 && zoneCheck == 0 && durationChange == 0 && alertChan
      +                          ge == 0 && tempChange == 0 && timeChange == 0 && delayChange == 0) {
  7575  156D  084B               	movf	_zoneActMode,w
  7576  156E  1D03               	btfss	3,2
  7577  156F  0008               	return
  7578  1570  084A               	movf	_zoneCheck,w
  7579  1571  1D03               	btfss	3,2
  7580  1572  0008               	return
  7581  1573  082A               	movf	_durationChange,w
  7582  1574  1D03               	btfss	3,2
  7583  1575  0008               	return
  7584  1576  0829               	movf	_alertChange,w
  7585  1577  1D03               	btfss	3,2
  7586  1578  0008               	return
  7587  1579  0841               	movf	_tempChange,w
  7588  157A  1D03               	btfss	3,2
  7589  157B  0008               	return
  7590  157C  0840               	movf	_timeChange,w
  7591  157D  1D03               	btfss	3,2
  7592  157E  0008               	return
  7593  157F  083E               	movf	_delayChange,w
  7594  1580  1D03               	btfss	3,2
  7595  1581  0008               	return
  7596                           
  7597                           ;main.c: 623: dateChange = 1;
  7598  1582  01BF               	clrf	_dateChange
  7599  1583  0ABF               	incf	_dateChange,f
  7600  1584  0008               	return
  7601  1585                     __end_of_changeDateMode:	
  7602                           
  7603                           	psect	text46
  7604  03F4                     __ptext46:	
  7605 ;; *************** function _changeDate *****************
  7606 ;; Defined at:
  7607 ;;		line 627 in file "main.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  yearunits       1    5[BANK0h] unsigned char 
  7612 ;;  yeartens        1    4[BANK0h] unsigned char 
  7613 ;;  monunits        1    3[BANK0h] unsigned char 
  7614 ;;  montens         1    2[BANK0h] unsigned char 
  7615 ;;  dayunits        1    1[BANK0h] unsigned char 
  7616 ;;  daytens         1    0[BANK0h] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0, pclath, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  7626 ;;      Params:         0       0       0       0       0       0
  7627 ;;      Locals:         0       6       0       0       0       0
  7628 ;;      Temps:          3       0       0       0       0       0
  7629 ;;      Totals:         3       6       0       0       0       0
  7630 ;;Total ram usage:        9 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    4
  7633 ;; This function calls:
  7634 ;;		_LCDdelay2
  7635 ;;		_LCDsetup
  7636 ;;		___awdiv
  7637 ;;		___awmod
  7638 ;;		_clearDisplay
  7639 ;;		_resetCursor
  7640 ;;		_writeChar
  7641 ;; This function is called by:
  7642 ;;		_main
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _changeDate
  7648  03F4                     _changeDate:	
  7649                           
  7650                           ;main.c: 628: char daytens = table1[3]/10;
  7651                           
  7652                           ;incstack = 0
  7653                           ; Regs used in _changeDate: [wreg+status,2+status,0+pclath+cstack]
  7654  03F4  300A               	movlw	10
  7655  03F5  00F0               	movwf	___awdiv@divisor
  7656  03F6  3000               	movlw	0
  7657  03F7  00F1               	movwf	___awdiv@divisor+1
  7658  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  7659  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  7660  03FA  0834               	movf	_table1+3,w
  7661  03FB  00F9               	movwf	??_changeDate
  7662  03FC  01FA               	clrf	??_changeDate+1
  7663  03FD  0879               	movf	??_changeDate,w
  7664  03FE  00F2               	movwf	___awdiv@dividend
  7665  03FF  087A               	movf	??_changeDate+1,w
  7666  0400  00F3               	movwf	___awdiv@dividend+1
  7667  0401  120A  158A  2500  120A  118A  	fcall	___awdiv
  7668  0406  0870               	movf	?___awdiv,w
  7669  0407  00FB               	movwf	??_changeDate+2
  7670  0408  087B               	movf	??_changeDate+2,w
  7671  0409  1283               	bcf	3,5	;RP0=0, select bank0
  7672  040A  1303               	bcf	3,6	;RP1=0, select bank0
  7673  040B  00D2               	movwf	changeDate@daytens
  7674                           
  7675                           ;main.c: 629: char dayunits = table1[3]%10;
  7676  040C  300A               	movlw	10
  7677  040D  00F0               	movwf	___awmod@divisor
  7678  040E  3000               	movlw	0
  7679  040F  00F1               	movwf	___awmod@divisor+1
  7680  0410  0834               	movf	_table1+3,w
  7681  0411  00F9               	movwf	??_changeDate
  7682  0412  01FA               	clrf	??_changeDate+1
  7683  0413  0879               	movf	??_changeDate,w
  7684  0414  00F2               	movwf	___awmod@dividend
  7685  0415  087A               	movf	??_changeDate+1,w
  7686  0416  00F3               	movwf	___awmod@dividend+1
  7687  0417  120A  158A  2411  120A  118A  	fcall	___awmod
  7688  041C  0870               	movf	?___awmod,w
  7689  041D  00FB               	movwf	??_changeDate+2
  7690  041E  087B               	movf	??_changeDate+2,w
  7691  041F  1283               	bcf	3,5	;RP0=0, select bank0
  7692  0420  1303               	bcf	3,6	;RP1=0, select bank0
  7693  0421  00D3               	movwf	changeDate@dayunits
  7694                           
  7695                           ;main.c: 630: char montens = table1[4]/10;
  7696  0422  300A               	movlw	10
  7697  0423  00F0               	movwf	___awdiv@divisor
  7698  0424  3000               	movlw	0
  7699  0425  00F1               	movwf	___awdiv@divisor+1
  7700  0426  0835               	movf	_table1+4,w
  7701  0427  00F9               	movwf	??_changeDate
  7702  0428  01FA               	clrf	??_changeDate+1
  7703  0429  0879               	movf	??_changeDate,w
  7704  042A  00F2               	movwf	___awdiv@dividend
  7705  042B  087A               	movf	??_changeDate+1,w
  7706  042C  00F3               	movwf	___awdiv@dividend+1
  7707  042D  120A  158A  2500  120A  118A  	fcall	___awdiv
  7708  0432  0870               	movf	?___awdiv,w
  7709  0433  00FB               	movwf	??_changeDate+2
  7710  0434  087B               	movf	??_changeDate+2,w
  7711  0435  1283               	bcf	3,5	;RP0=0, select bank0
  7712  0436  1303               	bcf	3,6	;RP1=0, select bank0
  7713  0437  00D4               	movwf	changeDate@montens
  7714                           
  7715                           ;main.c: 631: char monunits = table1[4]%10;
  7716  0438  300A               	movlw	10
  7717  0439  00F0               	movwf	___awmod@divisor
  7718  043A  3000               	movlw	0
  7719  043B  00F1               	movwf	___awmod@divisor+1
  7720  043C  0835               	movf	_table1+4,w
  7721  043D  00F9               	movwf	??_changeDate
  7722  043E  01FA               	clrf	??_changeDate+1
  7723  043F  0879               	movf	??_changeDate,w
  7724  0440  00F2               	movwf	___awmod@dividend
  7725  0441  087A               	movf	??_changeDate+1,w
  7726  0442  00F3               	movwf	___awmod@dividend+1
  7727  0443  120A  158A  2411  120A  118A  	fcall	___awmod
  7728  0448  0870               	movf	?___awmod,w
  7729  0449  00FB               	movwf	??_changeDate+2
  7730  044A  087B               	movf	??_changeDate+2,w
  7731  044B  1283               	bcf	3,5	;RP0=0, select bank0
  7732  044C  1303               	bcf	3,6	;RP1=0, select bank0
  7733  044D  00D5               	movwf	changeDate@monunits
  7734                           
  7735                           ;main.c: 632: char yeartens = table1[6]/10;
  7736  044E  300A               	movlw	10
  7737  044F  00F0               	movwf	___awdiv@divisor
  7738  0450  3000               	movlw	0
  7739  0451  00F1               	movwf	___awdiv@divisor+1
  7740  0452  0837               	movf	_table1+6,w
  7741  0453  00F9               	movwf	??_changeDate
  7742  0454  01FA               	clrf	??_changeDate+1
  7743  0455  0879               	movf	??_changeDate,w
  7744  0456  00F2               	movwf	___awdiv@dividend
  7745  0457  087A               	movf	??_changeDate+1,w
  7746  0458  00F3               	movwf	___awdiv@dividend+1
  7747  0459  120A  158A  2500  120A  118A  	fcall	___awdiv
  7748  045E  0870               	movf	?___awdiv,w
  7749  045F  00FB               	movwf	??_changeDate+2
  7750  0460  087B               	movf	??_changeDate+2,w
  7751  0461  1283               	bcf	3,5	;RP0=0, select bank0
  7752  0462  1303               	bcf	3,6	;RP1=0, select bank0
  7753  0463  00D6               	movwf	changeDate@yeartens
  7754                           
  7755                           ;main.c: 633: char yearunits = table1[6]%10;
  7756  0464  300A               	movlw	10
  7757  0465  00F0               	movwf	___awmod@divisor
  7758  0466  3000               	movlw	0
  7759  0467  00F1               	movwf	___awmod@divisor+1
  7760  0468  0837               	movf	_table1+6,w
  7761  0469  00F9               	movwf	??_changeDate
  7762  046A  01FA               	clrf	??_changeDate+1
  7763  046B  0879               	movf	??_changeDate,w
  7764  046C  00F2               	movwf	___awmod@dividend
  7765  046D  087A               	movf	??_changeDate+1,w
  7766  046E  00F3               	movwf	___awmod@dividend+1
  7767  046F  120A  158A  2411  120A  118A  	fcall	___awmod
  7768  0474  0870               	movf	?___awmod,w
  7769  0475  00FB               	movwf	??_changeDate+2
  7770  0476  087B               	movf	??_changeDate+2,w
  7771  0477  1283               	bcf	3,5	;RP0=0, select bank0
  7772  0478  1303               	bcf	3,6	;RP1=0, select bank0
  7773  0479  00D7               	movwf	changeDate@yearunits
  7774                           
  7775                           ;main.c: 634: if (dateChange == 1) {
  7776  047A  033F               	decf	_dateChange,w
  7777  047B  1D03               	btfss	3,2
  7778  047C  0008               	return
  7779                           
  7780                           ;main.c: 635: if (row == 1 && col == 3) {
  7781  047D  0338               	decf	_row,w
  7782  047E  0439               	iorwf	_row+1,w
  7783  047F  1D03               	btfss	3,2
  7784  0480  2CB5               	goto	l5181
  7785  0481  3003               	movlw	3
  7786  0482  063A               	xorwf	_col,w
  7787  0483  043B               	iorwf	_col+1,w
  7788  0484  1D03               	btfss	3,2
  7789  0485  2CB5               	goto	l5181
  7790                           
  7791                           ;main.c: 636: table1[3] ++;
  7792  0486  3001               	movlw	1
  7793  0487  00F9               	movwf	??_changeDate
  7794  0488  0879               	movf	??_changeDate,w
  7795  0489  07B4               	addwf	_table1+3,f
  7796                           
  7797                           ;main.c: 637: LCDsetup ();
  7798  048A  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7799                           
  7800                           ;main.c: 638: clearDisplay ();
  7801  048F  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7802                           
  7803                           ;main.c: 639: resetCursor();
  7804  0494  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  7805                           
  7806                           ;main.c: 640: writeChar('\'' + daytens - 30 + '\'');
  7807  0499  1283               	bcf	3,5	;RP0=0, select bank0
  7808  049A  1303               	bcf	3,6	;RP1=0, select bank0
  7809  049B  0852               	movf	changeDate@daytens,w
  7810  049C  3E30               	addlw	48
  7811  049D  160A  118A  253D  120A  118A  	fcall	_writeChar
  7812                           
  7813                           ;main.c: 641: writeChar('\''+dayunits-30+'\'');
  7814  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  7815  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  7816  04A4  0853               	movf	changeDate@dayunits,w
  7817  04A5  3E30               	addlw	48
  7818  04A6  160A  118A  253D  120A  118A  	fcall	_writeChar
  7819                           
  7820                           ;main.c: 642: LCDdelay2();
  7821  04AB  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7822                           
  7823                           ;main.c: 643: LCDdelay2();
  7824  04B0  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7825  04B5                     l5181:	
  7826                           
  7827                           ;main.c: 644: }
  7828                           ;main.c: 648: if (row == 2 && col == 3) {
  7829  04B5  3002               	movlw	2
  7830  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  7831  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  7832  04B8  0638               	xorwf	_row,w
  7833  04B9  0439               	iorwf	_row+1,w
  7834  04BA  1D03               	btfss	3,2
  7835  04BB  2CEE               	goto	l5201
  7836  04BC  3003               	movlw	3
  7837  04BD  063A               	xorwf	_col,w
  7838  04BE  043B               	iorwf	_col+1,w
  7839  04BF  1D03               	btfss	3,2
  7840  04C0  2CEE               	goto	l5201
  7841                           
  7842                           ;main.c: 649: table1[3] --;
  7843  04C1  3001               	movlw	1
  7844  04C2  02B4               	subwf	_table1+3,f
  7845                           
  7846                           ;main.c: 650: LCDsetup ();
  7847  04C3  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7848                           
  7849                           ;main.c: 651: clearDisplay ();
  7850  04C8  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7851                           
  7852                           ;main.c: 652: resetCursor();
  7853  04CD  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  7854                           
  7855                           ;main.c: 653: writeChar('\'' + daytens - 30 + '\'');
  7856  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  7857  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  7858  04D4  0852               	movf	changeDate@daytens,w
  7859  04D5  3E30               	addlw	48
  7860  04D6  160A  118A  253D  120A  118A  	fcall	_writeChar
  7861                           
  7862                           ;main.c: 654: writeChar('\''+dayunits-30+'\'');
  7863  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  7864  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  7865  04DD  0853               	movf	changeDate@dayunits,w
  7866  04DE  3E30               	addlw	48
  7867  04DF  160A  118A  253D  120A  118A  	fcall	_writeChar
  7868                           
  7869                           ;main.c: 655: LCDdelay2();
  7870  04E4  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7871                           
  7872                           ;main.c: 656: LCDdelay2();
  7873  04E9  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7874  04EE                     l5201:	
  7875                           
  7876                           ;main.c: 657: }
  7877                           ;main.c: 660: if (row == 1 && col == 2) {
  7878  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  7879  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  7880  04F0  0338               	decf	_row,w
  7881  04F1  0439               	iorwf	_row+1,w
  7882  04F2  1D03               	btfss	3,2
  7883  04F3  2D28               	goto	l5221
  7884  04F4  3002               	movlw	2
  7885  04F5  063A               	xorwf	_col,w
  7886  04F6  043B               	iorwf	_col+1,w
  7887  04F7  1D03               	btfss	3,2
  7888  04F8  2D28               	goto	l5221
  7889                           
  7890                           ;main.c: 661: table1[4] ++;
  7891  04F9  3001               	movlw	1
  7892  04FA  00F9               	movwf	??_changeDate
  7893  04FB  0879               	movf	??_changeDate,w
  7894  04FC  07B5               	addwf	_table1+4,f
  7895                           
  7896                           ;main.c: 662: LCDsetup ();
  7897  04FD  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7898                           
  7899                           ;main.c: 663: clearDisplay ();
  7900  0502  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7901                           
  7902                           ;main.c: 664: resetCursor();
  7903  0507  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  7904                           
  7905                           ;main.c: 665: writeChar('\'' + montens - 30 + '\'');
  7906  050C  1283               	bcf	3,5	;RP0=0, select bank0
  7907  050D  1303               	bcf	3,6	;RP1=0, select bank0
  7908  050E  0854               	movf	changeDate@montens,w
  7909  050F  3E30               	addlw	48
  7910  0510  160A  118A  253D  120A  118A  	fcall	_writeChar
  7911                           
  7912                           ;main.c: 666: writeChar('\''+monunits-30+'\'');
  7913  0515  1283               	bcf	3,5	;RP0=0, select bank0
  7914  0516  1303               	bcf	3,6	;RP1=0, select bank0
  7915  0517  0855               	movf	changeDate@monunits,w
  7916  0518  3E30               	addlw	48
  7917  0519  160A  118A  253D  120A  118A  	fcall	_writeChar
  7918                           
  7919                           ;main.c: 667: LCDdelay2();
  7920  051E  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7921                           
  7922                           ;main.c: 668: LCDdelay2();
  7923  0523  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7924  0528                     l5221:	
  7925                           
  7926                           ;main.c: 669: }
  7927                           ;main.c: 673: if (row == 2 && col == 2) {
  7928  0528  3002               	movlw	2
  7929  0529  1283               	bcf	3,5	;RP0=0, select bank0
  7930  052A  1303               	bcf	3,6	;RP1=0, select bank0
  7931  052B  0638               	xorwf	_row,w
  7932  052C  0439               	iorwf	_row+1,w
  7933  052D  1D03               	btfss	3,2
  7934  052E  2D61               	goto	l5241
  7935  052F  3002               	movlw	2
  7936  0530  063A               	xorwf	_col,w
  7937  0531  043B               	iorwf	_col+1,w
  7938  0532  1D03               	btfss	3,2
  7939  0533  2D61               	goto	l5241
  7940                           
  7941                           ;main.c: 674: table1[4] --;
  7942  0534  3001               	movlw	1
  7943  0535  02B5               	subwf	_table1+4,f
  7944                           
  7945                           ;main.c: 675: LCDsetup ();
  7946  0536  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7947                           
  7948                           ;main.c: 676: clearDisplay ();
  7949  053B  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7950                           
  7951                           ;main.c: 677: resetCursor();
  7952  0540  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  7953                           
  7954                           ;main.c: 678: writeChar('\'' + montens - 30 + '\'');
  7955  0545  1283               	bcf	3,5	;RP0=0, select bank0
  7956  0546  1303               	bcf	3,6	;RP1=0, select bank0
  7957  0547  0854               	movf	changeDate@montens,w
  7958  0548  3E30               	addlw	48
  7959  0549  160A  118A  253D  120A  118A  	fcall	_writeChar
  7960                           
  7961                           ;main.c: 679: writeChar('\''+monunits-30+'\'');
  7962  054E  1283               	bcf	3,5	;RP0=0, select bank0
  7963  054F  1303               	bcf	3,6	;RP1=0, select bank0
  7964  0550  0855               	movf	changeDate@monunits,w
  7965  0551  3E30               	addlw	48
  7966  0552  160A  118A  253D  120A  118A  	fcall	_writeChar
  7967                           
  7968                           ;main.c: 680: LCDdelay2();
  7969  0557  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7970                           
  7971                           ;main.c: 681: LCDdelay2();
  7972  055C  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  7973  0561                     l5241:	
  7974                           
  7975                           ;main.c: 682: }
  7976                           ;main.c: 685: if (row == 1 && col == 1) {
  7977  0561  1283               	bcf	3,5	;RP0=0, select bank0
  7978  0562  1303               	bcf	3,6	;RP1=0, select bank0
  7979  0563  0338               	decf	_row,w
  7980  0564  0439               	iorwf	_row+1,w
  7981  0565  1D03               	btfss	3,2
  7982  0566  2D9A               	goto	l5261
  7983  0567  033A               	decf	_col,w
  7984  0568  043B               	iorwf	_col+1,w
  7985  0569  1D03               	btfss	3,2
  7986  056A  2D9A               	goto	l5261
  7987                           
  7988                           ;main.c: 686: table1[6] ++;
  7989  056B  3001               	movlw	1
  7990  056C  00F9               	movwf	??_changeDate
  7991  056D  0879               	movf	??_changeDate,w
  7992  056E  07B7               	addwf	_table1+6,f
  7993                           
  7994                           ;main.c: 687: LCDsetup ();
  7995  056F  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  7996                           
  7997                           ;main.c: 688: clearDisplay ();
  7998  0574  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  7999                           
  8000                           ;main.c: 689: resetCursor();
  8001  0579  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  8002                           
  8003                           ;main.c: 690: writeChar('\'' + yeartens - 30 + '\'');
  8004  057E  1283               	bcf	3,5	;RP0=0, select bank0
  8005  057F  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0580  0856               	movf	changeDate@yeartens,w
  8007  0581  3E30               	addlw	48
  8008  0582  160A  118A  253D  120A  118A  	fcall	_writeChar
  8009                           
  8010                           ;main.c: 691: writeChar('\''+yearunits-30+'\'');
  8011  0587  1283               	bcf	3,5	;RP0=0, select bank0
  8012  0588  1303               	bcf	3,6	;RP1=0, select bank0
  8013  0589  0857               	movf	changeDate@yearunits,w
  8014  058A  3E30               	addlw	48
  8015  058B  160A  118A  253D  120A  118A  	fcall	_writeChar
  8016                           
  8017                           ;main.c: 692: LCDdelay2();
  8018  0590  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  8019                           
  8020                           ;main.c: 693: LCDdelay2();
  8021  0595  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  8022  059A                     l5261:	
  8023                           
  8024                           ;main.c: 694: }
  8025                           ;main.c: 698: if (row == 2 && col == 1) {
  8026  059A  3002               	movlw	2
  8027  059B  1283               	bcf	3,5	;RP0=0, select bank0
  8028  059C  1303               	bcf	3,6	;RP1=0, select bank0
  8029  059D  0638               	xorwf	_row,w
  8030  059E  0439               	iorwf	_row+1,w
  8031  059F  1D03               	btfss	3,2
  8032  05A0  0008               	return
  8033  05A1  033A               	decf	_col,w
  8034  05A2  043B               	iorwf	_col+1,w
  8035  05A3  1D03               	btfss	3,2
  8036  05A4  0008               	return
  8037                           
  8038                           ;main.c: 699: table1[6] --;
  8039  05A5  3001               	movlw	1
  8040  05A6  02B7               	subwf	_table1+6,f
  8041                           
  8042                           ;main.c: 700: LCDsetup ();
  8043  05A7  160A  118A  2493  120A  118A  	fcall	_LCDsetup
  8044                           
  8045                           ;main.c: 701: clearDisplay ();
  8046  05AC  160A  118A  23BE  120A  118A  	fcall	_clearDisplay
  8047                           
  8048                           ;main.c: 702: resetCursor();
  8049  05B1  160A  118A  23C3  120A  118A  	fcall	_resetCursor
  8050                           
  8051                           ;main.c: 703: writeChar('\'' + yeartens - 30 + '\'');
  8052  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  8053  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  8054  05B8  0856               	movf	changeDate@yeartens,w
  8055  05B9  3E30               	addlw	48
  8056  05BA  160A  118A  253D  120A  118A  	fcall	_writeChar
  8057                           
  8058                           ;main.c: 704: writeChar('\''+yearunits-30+'\'');
  8059  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  8060  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  8061  05C1  0857               	movf	changeDate@yearunits,w
  8062  05C2  3E30               	addlw	48
  8063  05C3  160A  118A  253D  120A  118A  	fcall	_writeChar
  8064                           
  8065                           ;main.c: 705: LCDdelay2();
  8066  05C8  160A  118A  2427  120A  118A  	fcall	_LCDdelay2
  8067                           
  8068                           ;main.c: 706: LCDdelay2();
  8069  05CD  160A  118A  2427   	fcall	_LCDdelay2
  8070  05D0  0008               	return
  8071  05D1                     __end_of_changeDate:	
  8072                           
  8073                           	psect	text47
  8074  0C11                     __ptext47:	
  8075 ;; *************** function ___awmod *****************
  8076 ;; Defined at:
  8077 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  divisor         2    0[COMMON] int 
  8080 ;;  dividend        2    2[COMMON] int 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  sign            1    6[COMMON] unsigned char 
  8083 ;;  counter         1    5[COMMON] unsigned char 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  2    0[COMMON] int 
  8086 ;; Registers used:
  8087 ;;		wreg, status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8093 ;;      Params:         4       0       0       0       0       0
  8094 ;;      Locals:         2       0       0       0       0       0
  8095 ;;      Temps:          1       0       0       0       0       0
  8096 ;;      Totals:         7       0       0       0       0       0
  8097 ;;Total ram usage:        7 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_changeTemp
  8103 ;;		_changeTime
  8104 ;;		_changeDate
  8105 ;;		_changeDelay
  8106 ;;		_getTemperature
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           
  8111                           ;psect for function ___awmod
  8112  0C11                     ___awmod:	
  8113                           
  8114                           ;incstack = 0
  8115                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8116  0C11  01F6               	clrf	___awmod@sign
  8117  0C12  1FF3               	btfss	___awmod@dividend+1,7
  8118  0C13  2C1B               	goto	l3039
  8119  0C14  09F2               	comf	___awmod@dividend,f
  8120  0C15  09F3               	comf	___awmod@dividend+1,f
  8121  0C16  0AF2               	incf	___awmod@dividend,f
  8122  0C17  1903               	skipnz
  8123  0C18  0AF3               	incf	___awmod@dividend+1,f
  8124  0C19  01F6               	clrf	___awmod@sign
  8125  0C1A  0AF6               	incf	___awmod@sign,f
  8126  0C1B                     l3039:	
  8127  0C1B  1FF1               	btfss	___awmod@divisor+1,7
  8128  0C1C  2C22               	goto	l3043
  8129  0C1D  09F0               	comf	___awmod@divisor,f
  8130  0C1E  09F1               	comf	___awmod@divisor+1,f
  8131  0C1F  0AF0               	incf	___awmod@divisor,f
  8132  0C20  1903               	skipnz
  8133  0C21  0AF1               	incf	___awmod@divisor+1,f
  8134  0C22                     l3043:	
  8135  0C22  0870               	movf	___awmod@divisor,w
  8136  0C23  0471               	iorwf	___awmod@divisor+1,w
  8137  0C24  1903               	btfsc	3,2
  8138  0C25  2C4F               	goto	l3061
  8139  0C26  01F5               	clrf	___awmod@counter
  8140  0C27  0AF5               	incf	___awmod@counter,f
  8141  0C28                     l3051:	
  8142  0C28  1BF1               	btfsc	___awmod@divisor+1,7
  8143  0C29  2C36               	goto	l3053
  8144  0C2A  3001               	movlw	1
  8145  0C2B                     u3205:	
  8146  0C2B  1003               	clrc
  8147  0C2C  0DF0               	rlf	___awmod@divisor,f
  8148  0C2D  0DF1               	rlf	___awmod@divisor+1,f
  8149  0C2E  3EFF               	addlw	-1
  8150  0C2F  1D03               	skipz
  8151  0C30  2C2B               	goto	u3205
  8152  0C31  3001               	movlw	1
  8153  0C32  00F4               	movwf	??___awmod
  8154  0C33  0874               	movf	??___awmod,w
  8155  0C34  07F5               	addwf	___awmod@counter,f
  8156  0C35  2C28               	goto	l3051
  8157  0C36                     l3053:	
  8158  0C36  0871               	movf	___awmod@divisor+1,w
  8159  0C37  0273               	subwf	___awmod@dividend+1,w
  8160  0C38  1D03               	skipz
  8161  0C39  2C3C               	goto	u3225
  8162  0C3A  0870               	movf	___awmod@divisor,w
  8163  0C3B  0272               	subwf	___awmod@dividend,w
  8164  0C3C                     u3225:	
  8165  0C3C  1C03               	skipc
  8166  0C3D  2C44               	goto	l3057
  8167  0C3E  0870               	movf	___awmod@divisor,w
  8168  0C3F  02F2               	subwf	___awmod@dividend,f
  8169  0C40  0871               	movf	___awmod@divisor+1,w
  8170  0C41  1C03               	skipc
  8171  0C42  03F3               	decf	___awmod@dividend+1,f
  8172  0C43  02F3               	subwf	___awmod@dividend+1,f
  8173  0C44                     l3057:	
  8174  0C44  3001               	movlw	1
  8175  0C45                     u3235:	
  8176  0C45  1003               	clrc
  8177  0C46  0CF1               	rrf	___awmod@divisor+1,f
  8178  0C47  0CF0               	rrf	___awmod@divisor,f
  8179  0C48  3EFF               	addlw	-1
  8180  0C49  1D03               	skipz
  8181  0C4A  2C45               	goto	u3235
  8182  0C4B  3001               	movlw	1
  8183  0C4C  02F5               	subwf	___awmod@counter,f
  8184  0C4D  1D03               	btfss	3,2
  8185  0C4E  2C36               	goto	l3053
  8186  0C4F                     l3061:	
  8187  0C4F  0876               	movf	___awmod@sign,w
  8188  0C50  1903               	btfsc	3,2
  8189  0C51  2C57               	goto	l3065
  8190  0C52  09F2               	comf	___awmod@dividend,f
  8191  0C53  09F3               	comf	___awmod@dividend+1,f
  8192  0C54  0AF2               	incf	___awmod@dividend,f
  8193  0C55  1903               	skipnz
  8194  0C56  0AF3               	incf	___awmod@dividend+1,f
  8195  0C57                     l3065:	
  8196  0C57  0873               	movf	___awmod@dividend+1,w
  8197  0C58  00F1               	movwf	?___awmod+1
  8198  0C59  0872               	movf	___awmod@dividend,w
  8199  0C5A  00F0               	movwf	?___awmod
  8200  0C5B  0008               	return
  8201  0C5C                     __end_of___awmod:	
  8202                           
  8203                           	psect	text48
  8204  0D00                     __ptext48:	
  8205 ;; *************** function ___awdiv *****************
  8206 ;; Defined at:
  8207 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  divisor         2    0[COMMON] int 
  8210 ;;  dividend        2    2[COMMON] int 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  quotient        2    7[COMMON] int 
  8213 ;;  sign            1    6[COMMON] unsigned char 
  8214 ;;  counter         1    5[COMMON] unsigned char 
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  2    0[COMMON] int 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8224 ;;      Params:         4       0       0       0       0       0
  8225 ;;      Locals:         4       0       0       0       0       0
  8226 ;;      Temps:          1       0       0       0       0       0
  8227 ;;      Totals:         9       0       0       0       0       0
  8228 ;;Total ram usage:        9 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_changeTemp
  8234 ;;		_changeTime
  8235 ;;		_changeDate
  8236 ;;		_changeDelay
  8237 ;;		_display
  8238 ;;		_displayDate
  8239 ;;		_getTemperature
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           
  8244                           ;psect for function ___awdiv
  8245  0D00                     ___awdiv:	
  8246                           
  8247                           ;incstack = 0
  8248                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8249  0D00  01F6               	clrf	___awdiv@sign
  8250  0D01  1FF1               	btfss	___awdiv@divisor+1,7
  8251  0D02  2D0A               	goto	l2995
  8252  0D03  09F0               	comf	___awdiv@divisor,f
  8253  0D04  09F1               	comf	___awdiv@divisor+1,f
  8254  0D05  0AF0               	incf	___awdiv@divisor,f
  8255  0D06  1903               	skipnz
  8256  0D07  0AF1               	incf	___awdiv@divisor+1,f
  8257  0D08  01F6               	clrf	___awdiv@sign
  8258  0D09  0AF6               	incf	___awdiv@sign,f
  8259  0D0A                     l2995:	
  8260  0D0A  1FF3               	btfss	___awdiv@dividend+1,7
  8261  0D0B  2D15               	goto	l3001
  8262  0D0C  09F2               	comf	___awdiv@dividend,f
  8263  0D0D  09F3               	comf	___awdiv@dividend+1,f
  8264  0D0E  0AF2               	incf	___awdiv@dividend,f
  8265  0D0F  1903               	skipnz
  8266  0D10  0AF3               	incf	___awdiv@dividend+1,f
  8267  0D11  3001               	movlw	1
  8268  0D12  00F4               	movwf	??___awdiv
  8269  0D13  0874               	movf	??___awdiv,w
  8270  0D14  06F6               	xorwf	___awdiv@sign,f
  8271  0D15                     l3001:	
  8272  0D15  01F7               	clrf	___awdiv@quotient
  8273  0D16  01F8               	clrf	___awdiv@quotient+1
  8274  0D17  0870               	movf	___awdiv@divisor,w
  8275  0D18  0471               	iorwf	___awdiv@divisor+1,w
  8276  0D19  1903               	btfsc	3,2
  8277  0D1A  2D4C               	goto	l3023
  8278  0D1B  01F5               	clrf	___awdiv@counter
  8279  0D1C  0AF5               	incf	___awdiv@counter,f
  8280  0D1D                     l3011:	
  8281  0D1D  1BF1               	btfsc	___awdiv@divisor+1,7
  8282  0D1E  2D2B               	goto	l3013
  8283  0D1F  3001               	movlw	1
  8284  0D20                     u3105:	
  8285  0D20  1003               	clrc
  8286  0D21  0DF0               	rlf	___awdiv@divisor,f
  8287  0D22  0DF1               	rlf	___awdiv@divisor+1,f
  8288  0D23  3EFF               	addlw	-1
  8289  0D24  1D03               	skipz
  8290  0D25  2D20               	goto	u3105
  8291  0D26  3001               	movlw	1
  8292  0D27  00F4               	movwf	??___awdiv
  8293  0D28  0874               	movf	??___awdiv,w
  8294  0D29  07F5               	addwf	___awdiv@counter,f
  8295  0D2A  2D1D               	goto	l3011
  8296  0D2B                     l3013:	
  8297  0D2B  3001               	movlw	1
  8298  0D2C                     u3125:	
  8299  0D2C  1003               	clrc
  8300  0D2D  0DF7               	rlf	___awdiv@quotient,f
  8301  0D2E  0DF8               	rlf	___awdiv@quotient+1,f
  8302  0D2F  3EFF               	addlw	-1
  8303  0D30  1D03               	skipz
  8304  0D31  2D2C               	goto	u3125
  8305  0D32  0871               	movf	___awdiv@divisor+1,w
  8306  0D33  0273               	subwf	___awdiv@dividend+1,w
  8307  0D34  1D03               	skipz
  8308  0D35  2D38               	goto	u3135
  8309  0D36  0870               	movf	___awdiv@divisor,w
  8310  0D37  0272               	subwf	___awdiv@dividend,w
  8311  0D38                     u3135:	
  8312  0D38  1C03               	skipc
  8313  0D39  2D41               	goto	l3019
  8314  0D3A  0870               	movf	___awdiv@divisor,w
  8315  0D3B  02F2               	subwf	___awdiv@dividend,f
  8316  0D3C  0871               	movf	___awdiv@divisor+1,w
  8317  0D3D  1C03               	skipc
  8318  0D3E  03F3               	decf	___awdiv@dividend+1,f
  8319  0D3F  02F3               	subwf	___awdiv@dividend+1,f
  8320  0D40  1477               	bsf	___awdiv@quotient,0
  8321  0D41                     l3019:	
  8322  0D41  3001               	movlw	1
  8323  0D42                     u3145:	
  8324  0D42  1003               	clrc
  8325  0D43  0CF1               	rrf	___awdiv@divisor+1,f
  8326  0D44  0CF0               	rrf	___awdiv@divisor,f
  8327  0D45  3EFF               	addlw	-1
  8328  0D46  1D03               	skipz
  8329  0D47  2D42               	goto	u3145
  8330  0D48  3001               	movlw	1
  8331  0D49  02F5               	subwf	___awdiv@counter,f
  8332  0D4A  1D03               	btfss	3,2
  8333  0D4B  2D2B               	goto	l3013
  8334  0D4C                     l3023:	
  8335  0D4C  0876               	movf	___awdiv@sign,w
  8336  0D4D  1903               	btfsc	3,2
  8337  0D4E  2D54               	goto	l3027
  8338  0D4F  09F7               	comf	___awdiv@quotient,f
  8339  0D50  09F8               	comf	___awdiv@quotient+1,f
  8340  0D51  0AF7               	incf	___awdiv@quotient,f
  8341  0D52  1903               	skipnz
  8342  0D53  0AF8               	incf	___awdiv@quotient+1,f
  8343  0D54                     l3027:	
  8344  0D54  0878               	movf	___awdiv@quotient+1,w
  8345  0D55  00F1               	movwf	?___awdiv+1
  8346  0D56  0877               	movf	___awdiv@quotient,w
  8347  0D57  00F0               	movwf	?___awdiv
  8348  0D58  0008               	return
  8349  0D59                     __end_of___awdiv:	
  8350                           
  8351                           	psect	text49
  8352  1493                     __ptext49:	
  8353 ;; *************** function _LCDsetup *****************
  8354 ;; Defined at:
  8355 ;;		line 4 in file "LCD.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0, pclath, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8369 ;;      Params:         0       0       0       0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0
  8372 ;;      Totals:         0       0       0       0       0       0
  8373 ;;Total ram usage:        0 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    3
  8376 ;; This function calls:
  8377 ;;		_displayOn
  8378 ;;		_turnon2linemode
  8379 ;; This function is called by:
  8380 ;;		_changeTemp
  8381 ;;		_changeTime
  8382 ;;		_changeDate
  8383 ;;		_changeDelay
  8384 ;;		_main
  8385 ;;		_ButtonGrid
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           
  8390                           ;psect for function _LCDsetup
  8391  1493                     _LCDsetup:	
  8392                           
  8393                           ;LCD.c: 5: ADCON1 = 0x06;
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in _LCDsetup: [wreg+status,2+status,0+pclath+cstack]
  8397  1493  3006               	movlw	6
  8398  1494  1683               	bsf	3,5	;RP0=1, select bank1
  8399  1495  1303               	bcf	3,6	;RP1=0, select bank1
  8400  1496  009F               	movwf	31	;volatile
  8401                           
  8402                           ;LCD.c: 6: TRISA = 0x00;
  8403  1497  0185               	clrf	5	;volatile
  8404                           
  8405                           ;LCD.c: 7: PORTA = 0x00;
  8406  1498  1283               	bcf	3,5	;RP0=0, select bank0
  8407  1499  1303               	bcf	3,6	;RP1=0, select bank0
  8408  149A  0185               	clrf	5	;volatile
  8409                           
  8410                           ;LCD.c: 8: TRISD = 0x00;
  8411  149B  1683               	bsf	3,5	;RP0=1, select bank1
  8412  149C  1303               	bcf	3,6	;RP1=0, select bank1
  8413  149D  0188               	clrf	8	;volatile
  8414                           
  8415                           ;LCD.c: 9: PORTD = 0x00;
  8416  149E  1283               	bcf	3,5	;RP0=0, select bank0
  8417  149F  1303               	bcf	3,6	;RP1=0, select bank0
  8418  14A0  0188               	clrf	8	;volatile
  8419                           
  8420                           ;LCD.c: 10: displayOn ();
  8421  14A1  160A  118A  23C8  160A  118A  	fcall	_displayOn
  8422                           
  8423                           ;LCD.c: 11: turnon2linemode();
  8424  14A6  160A  118A  23CD   	fcall	_turnon2linemode
  8425  14A9  0008               	return
  8426  14AA                     __end_of_LCDsetup:	
  8427                           
  8428                           	psect	text50
  8429  13CD                     __ptext50:	
  8430 ;; *************** function _turnon2linemode *****************
  8431 ;; Defined at:
  8432 ;;		line 94 in file "LCD.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0, pclath, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8446 ;;      Params:         0       0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0
  8449 ;;      Totals:         0       0       0       0       0       0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    2
  8453 ;; This function calls:
  8454 ;;		_writeCmd
  8455 ;; This function is called by:
  8456 ;;		_LCDsetup
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           
  8461                           ;psect for function _turnon2linemode
  8462  13CD                     _turnon2linemode:	
  8463                           
  8464                           ;LCD.c: 95: writeCmd(0x38);
  8465                           
  8466                           ;incstack = 0
  8467                           ; Regs used in _turnon2linemode: [wreg+status,2+status,0+pclath+cstack]
  8468  13CD  3038               	movlw	56
  8469  13CE  160A  118A  251B   	fcall	_writeCmd
  8470  13D1  0008               	return
  8471  13D2                     __end_of_turnon2linemode:	
  8472                           
  8473                           	psect	text51
  8474  13C8                     __ptext51:	
  8475 ;; *************** function _displayOn *****************
  8476 ;; Defined at:
  8477 ;;		line 86 in file "LCD.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		wreg, status,2, status,0, pclath, cstack
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8491 ;;      Params:         0       0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0
  8494 ;;      Totals:         0       0       0       0       0       0
  8495 ;;Total ram usage:        0 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    2
  8498 ;; This function calls:
  8499 ;;		_writeCmd
  8500 ;; This function is called by:
  8501 ;;		_LCDsetup
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           
  8506                           ;psect for function _displayOn
  8507  13C8                     _displayOn:	
  8508                           
  8509                           ;LCD.c: 87: writeCmd(0x0F);
  8510                           
  8511                           ;incstack = 0
  8512                           ; Regs used in _displayOn: [wreg+status,2+status,0+pclath+cstack]
  8513  13C8  300F               	movlw	15
  8514  13C9  160A  118A  251B   	fcall	_writeCmd
  8515  13CC  0008               	return
  8516  13CD                     __end_of_displayOn:	
  8517                           
  8518                           	psect	text52
  8519  147F                     __ptext52:	
  8520 ;; *************** function _buzzer2 *****************
  8521 ;; Defined at:
  8522 ;;		line 804 in file "main.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;		None
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8536 ;;      Params:         0       0       0       0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0
  8538 ;;      Temps:          0       0       0       0       0       0
  8539 ;;      Totals:         0       0       0       0       0       0
  8540 ;;Total ram usage:        0 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    1
  8543 ;; This function calls:
  8544 ;;		_delay
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           
  8551                           ;psect for function _buzzer2
  8552  147F                     _buzzer2:	
  8553                           
  8554                           ;main.c: 805: RB7 = 1;
  8555                           
  8556                           ;incstack = 0
  8557                           ; Regs used in _buzzer2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8558  147F  1283               	bcf	3,5	;RP0=0, select bank0
  8559  1480  1303               	bcf	3,6	;RP1=0, select bank0
  8560  1481  1786               	bsf	6,7	;volatile
  8561                           
  8562                           ;main.c: 806: delay();
  8563  1482  160A  118A  246B  160A  118A  	fcall	_delay
  8564                           
  8565                           ;main.c: 807: delay();
  8566  1487  160A  118A  246B  160A  118A  	fcall	_delay
  8567                           
  8568                           ;main.c: 808: delay();
  8569  148C  160A  118A  246B   	fcall	_delay
  8570                           
  8571                           ;main.c: 809: RB7 =0;
  8572  148F  1283               	bcf	3,5	;RP0=0, select bank0
  8573  1490  1303               	bcf	3,6	;RP1=0, select bank0
  8574  1491  1386               	bcf	6,7	;volatile
  8575  1492  0008               	return
  8576  1493                     __end_of_buzzer2:	
  8577                           
  8578                           	psect	text53
  8579  146B                     __ptext53:	
  8580 ;; *************** function _delay *****************
  8581 ;; Defined at:
  8582 ;;		line 28 in file "temperature.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;		None
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  i               2    0[COMMON] int 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, btemp+1
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8596 ;;      Params:         0       0       0       0       0       0
  8597 ;;      Locals:         2       0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0
  8599 ;;      Totals:         2       0       0       0       0       0
  8600 ;;Total ram usage:        2 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_buzzer2
  8606 ;;		_getTemperature
  8607 ;;		_buzzer
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function _delay
  8613  146B                     _delay:	
  8614                           
  8615                           ;temperature.c: 30: for (int i = 0; i< 500; ++i);
  8616                           
  8617                           ;incstack = 0
  8618                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  8619  146B  01F0               	clrf	delay@i
  8620  146C  01F1               	clrf	delay@i+1
  8621  146D                     L13:	
  8622  146D  0871               	movf	delay@i+1,w
  8623  146E  3A80               	xorlw	128
  8624  146F  00FF               	movwf	127
  8625  1470  3081               	movlw	129
  8626  1471  027F               	subwf	127,w
  8627  1472  1D03               	skipz
  8628  1473  2C76               	goto	u2875
  8629  1474  30F4               	movlw	244
  8630  1475  0270               	subwf	delay@i,w
  8631  1476                     u2875:	
  8632  1476  1803               	btfsc	3,0
  8633  1477  0008               	return
  8634  1478  3001               	movlw	1
  8635  1479  07F0               	addwf	delay@i,f
  8636  147A  1803               	skipnc
  8637  147B  0AF1               	incf	delay@i+1,f
  8638  147C  3000               	movlw	0
  8639  147D  07F1               	addwf	delay@i+1,f
  8640  147E  2C6D               	goto	L13
  8641  147F                     __end_of_delay:	
  8642                           
  8643                           	psect	text54
  8644  09B4                     __ptext54:	
  8645 ;; *************** function _alarmOnOff *****************
  8646 ;; Defined at:
  8647 ;;		line 266 in file "main.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;		None
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;		None
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8661 ;;      Params:         0       0       0       0       0       0
  8662 ;;      Locals:         0       0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0
  8664 ;;      Totals:         0       0       0       0       0       0
  8665 ;;Total ram usage:        0 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    5
  8668 ;; This function calls:
  8669 ;;		_LCDdelay2
  8670 ;;		_alarmOff
  8671 ;;		_alarmOn
  8672 ;;		_modeSelect
  8673 ;; This function is called by:
  8674 ;;		_main
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           
  8679                           ;psect for function _alarmOnOff
  8680  09B4                     _alarmOnOff:	
  8681                           
  8682                           ;main.c: 268: if (row == 4 && col == 4){
  8683                           
  8684                           ;incstack = 0
  8685                           ; Regs used in _alarmOnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8686  09B4  3004               	movlw	4
  8687  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  8688  09B6  1303               	bcf	3,6	;RP1=0, select bank0
  8689  09B7  0638               	xorwf	_row,w
  8690  09B8  0439               	iorwf	_row+1,w
  8691  09B9  1D03               	btfss	3,2
  8692  09BA  29D1               	goto	l4731
  8693  09BB  3004               	movlw	4
  8694  09BC  063A               	xorwf	_col,w
  8695  09BD  043B               	iorwf	_col+1,w
  8696  09BE  1D03               	btfss	3,2
  8697  09BF  29D1               	goto	l4731
  8698                           
  8699                           ;main.c: 269: alarmOnOrOff = 1;
  8700  09C0  01CC               	clrf	_alarmOnOrOff
  8701  09C1  0ACC               	incf	_alarmOnOrOff,f
  8702                           
  8703                           ;main.c: 270: alarmOn ();
  8704  09C2  160A  118A  2662  120A  158A  	fcall	_alarmOn
  8705                           
  8706                           ;main.c: 271: LCDdelay2();
  8707  09C7  160A  118A  2427  120A  158A  	fcall	_LCDdelay2
  8708                           
  8709                           ;main.c: 272: modeSelect();
  8710  09CC  120A  158A  2399  120A  158A  	fcall	_modeSelect
  8711  09D1                     l4731:	
  8712                           
  8713                           ;main.c: 274: }
  8714                           ;main.c: 275: if (row == 3 && col == 4) {
  8715  09D1  3003               	movlw	3
  8716  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  8717  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  8718  09D4  0638               	xorwf	_row,w
  8719  09D5  0439               	iorwf	_row+1,w
  8720  09D6  1D03               	btfss	3,2
  8721  09D7  0008               	return
  8722  09D8  3004               	movlw	4
  8723  09D9  063A               	xorwf	_col,w
  8724  09DA  043B               	iorwf	_col+1,w
  8725  09DB  1D03               	btfss	3,2
  8726  09DC  0008               	return
  8727                           
  8728                           ;main.c: 276: alarmOnOrOff = 0;
  8729  09DD  01CC               	clrf	_alarmOnOrOff
  8730                           
  8731                           ;main.c: 277: alarmOff ();
  8732  09DE  120A  158A  2010   	fcall	_alarmOff
  8733  09E1  0008               	return
  8734  09E2                     __end_of_alarmOnOff:	
  8735                           
  8736                           	psect	text55
  8737  0B99                     __ptext55:	
  8738 ;; *************** function _modeSelect *****************
  8739 ;; Defined at:
  8740 ;;		line 237 in file "main.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;		None
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;  messagecol     12    0[BANK0h] unsigned char [12]
  8745 ;;  messagerow      9   12[BANK0h] unsigned char [9]
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8755 ;;      Params:         0       0       0       0       0       0
  8756 ;;      Locals:         0      21       0       0       0       0
  8757 ;;      Temps:          4       0       0       0       0       0
  8758 ;;      Totals:         4      21       0       0       0       0
  8759 ;;Total ram usage:       25 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    4
  8762 ;; This function calls:
  8763 ;;		_resetCursor
  8764 ;;		_writeMessageline1
  8765 ;;		_writeMessageline2
  8766 ;; This function is called by:
  8767 ;;		_alarmOnOff
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           
  8772                           ;psect for function _modeSelect
  8773  0B99                     _modeSelect:	
  8774                           
  8775                           ;main.c: 238: resetCursor ();
  8776                           
  8777                           ;incstack = 0
  8778                           ; Regs used in _modeSelect: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8779  0B99  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  8780                           
  8781                           ;main.c: 239: char messagerow[] = "Select a";
  8782  0B9E  305E               	movlw	modeSelect@messagerow& (0+255)
  8783  0B9F  0084               	movwf	4
  8784  0BA0  30C8               	movlw	low modeSelect@F1246
  8785  0BA1  00F8               	movwf	??_modeSelect
  8786  0BA2  0804               	movf	4,w
  8787  0BA3  00F9               	movwf	??_modeSelect+1
  8788  0BA4  3009               	movlw	9
  8789  0BA5  00FA               	movwf	??_modeSelect+2
  8790  0BA6                     u5770:	
  8791  0BA6  0878               	movf	??_modeSelect,w
  8792  0BA7  0084               	movwf	4
  8793  0BA8  1383               	bcf	3,7	;select IRP bank1
  8794  0BA9  0800               	movf	0,w
  8795  0BAA  00FB               	movwf	??_modeSelect+3
  8796  0BAB  0AF8               	incf	??_modeSelect,f
  8797  0BAC  0879               	movf	??_modeSelect+1,w
  8798  0BAD  0084               	movwf	4
  8799  0BAE  087B               	movf	??_modeSelect+3,w
  8800  0BAF  0080               	movwf	0
  8801  0BB0  0AF9               	incf	??_modeSelect+1,f
  8802  0BB1  0BFA               	decfsz	??_modeSelect+2,f
  8803  0BB2  2BA6               	goto	u5770
  8804                           
  8805                           ;main.c: 240: char messagecol[] = "Function...";
  8806  0BB3  3052               	movlw	modeSelect@messagecol& (0+255)
  8807  0BB4  0084               	movwf	4
  8808  0BB5  305D               	movlw	low modeSelect@F1248
  8809  0BB6  00F8               	movwf	??_modeSelect
  8810  0BB7  0804               	movf	4,w
  8811  0BB8  00F9               	movwf	??_modeSelect+1
  8812  0BB9  300C               	movlw	12
  8813  0BBA  00FA               	movwf	??_modeSelect+2
  8814  0BBB                     u5780:	
  8815  0BBB  0878               	movf	??_modeSelect,w
  8816  0BBC  0084               	movwf	4
  8817  0BBD  1783               	bsf	3,7	;select IRP bank2
  8818  0BBE  0800               	movf	0,w
  8819  0BBF  00FB               	movwf	??_modeSelect+3
  8820  0BC0  0AF8               	incf	??_modeSelect,f
  8821  0BC1  0879               	movf	??_modeSelect+1,w
  8822  0BC2  0084               	movwf	4
  8823  0BC3  1383               	bcf	3,7	;select IRP bank0
  8824  0BC4  087B               	movf	??_modeSelect+3,w
  8825  0BC5  0080               	movwf	0
  8826  0BC6  0AF9               	incf	??_modeSelect+1,f
  8827  0BC7  0BFA               	decfsz	??_modeSelect+2,f
  8828  0BC8  2BBB               	goto	u5780
  8829                           
  8830                           ;main.c: 241: writeMessageline1(messagerow);
  8831  0BC9  305E               	movlw	(low (modeSelect@messagerow| 0))& (0+255)
  8832  0BCA  160A  118A  23D7  120A  158A  	fcall	_writeMessageline1
  8833                           
  8834                           ;main.c: 242: writeMessageline2(messagecol);
  8835  0BCF  3052               	movlw	(low (modeSelect@messagecol| 0))& (0+255)
  8836  0BD0  160A  118A  23ED   	fcall	_writeMessageline2
  8837  0BD3  0008               	return
  8838  0BD4                     __end_of_modeSelect:	
  8839                           
  8840                           	psect	text56
  8841  13ED                     __ptext56:	
  8842 ;; *************** function _writeMessageline2 *****************
  8843 ;; Defined at:
  8844 ;;		line 54 in file "LCD.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  message         1    wreg     PTR unsigned char 
  8847 ;;		 -> modeSelect@messagecol(12), ButtonGrid@messagecol(6), currentTemp@message2(13), 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;  message         1    7[COMMON] PTR unsigned char 
  8850 ;;		 -> modeSelect@messagecol(12), ButtonGrid@messagecol(6), currentTemp@message2(13), 
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8860 ;;      Params:         0       0       0       0       0       0
  8861 ;;      Locals:         1       0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0
  8863 ;;      Totals:         1       0       0       0       0       0
  8864 ;;Total ram usage:        1 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    3
  8867 ;; This function calls:
  8868 ;;		_writeCmd
  8869 ;;		_writeMessage
  8870 ;; This function is called by:
  8871 ;;		_modeSelect
  8872 ;;		_currentTemp
  8873 ;;		_ButtonGrid
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           
  8878                           ;psect for function _writeMessageline2
  8879  13ED                     _writeMessageline2:	
  8880                           
  8881                           ;incstack = 0
  8882                           ; Regs used in _writeMessageline2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8883                           ;writeMessageline2@message stored from wreg
  8884  13ED  00F7               	movwf	writeMessageline2@message
  8885                           
  8886                           ;LCD.c: 62: writeCmd(0x80+40);
  8887  13EE  30A8               	movlw	168
  8888  13EF  160A  118A  251B  160A  118A  	fcall	_writeCmd
  8889                           
  8890                           ;LCD.c: 63: writeMessage(message);
  8891  13F4  0877               	movf	writeMessageline2@message,w
  8892  13F5  160A  118A  24DC   	fcall	_writeMessage
  8893  13F8  0008               	return
  8894  13F9                     __end_of_writeMessageline2:	
  8895                           
  8896                           	psect	text57
  8897  13D7                     __ptext57:	
  8898 ;; *************** function _writeMessageline1 *****************
  8899 ;; Defined at:
  8900 ;;		line 49 in file "LCD.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  message         1    wreg     PTR unsigned char 
  8903 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagerow(9), ButtonGrid@messag
      +erow(6), 
  8904 ;;		 -> currentTemp@message1(7), 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  message         1    7[COMMON] PTR unsigned char 
  8907 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagerow(9), ButtonGrid@messag
      +erow(6), 
  8908 ;;		 -> currentTemp@message1(7), 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8918 ;;      Params:         0       0       0       0       0       0
  8919 ;;      Locals:         1       0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0
  8921 ;;      Totals:         1       0       0       0       0       0
  8922 ;;Total ram usage:        1 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    3
  8925 ;; This function calls:
  8926 ;;		_writeMessage
  8927 ;; This function is called by:
  8928 ;;		_modeSelect
  8929 ;;		_checkZoneMessage
  8930 ;;		_changeTriggerMessage
  8931 ;;		_currentTemp
  8932 ;;		_ButtonGrid
  8933 ;; This function uses a non-reentrant model
  8934 ;;
  8935                           
  8936                           
  8937                           ;psect for function _writeMessageline1
  8938  13D7                     _writeMessageline1:	
  8939                           
  8940                           ;incstack = 0
  8941                           ; Regs used in _writeMessageline1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8942                           ;writeMessageline1@message stored from wreg
  8943  13D7  00F7               	movwf	writeMessageline1@message
  8944                           
  8945                           ;LCD.c: 51: writeMessage(message);
  8946  13D8  0877               	movf	writeMessageline1@message,w
  8947  13D9  160A  118A  24DC   	fcall	_writeMessage
  8948  13DC  0008               	return
  8949  13DD                     __end_of_writeMessageline1:	
  8950                           
  8951                           	psect	text58
  8952  1662                     __ptext58:	
  8953 ;; *************** function _alarmOn *****************
  8954 ;; Defined at:
  8955 ;;		line 111 in file "main.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  message         9    0[BANK0h] unsigned char [9]
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  8969 ;;      Params:         0       0       0       0       0       0
  8970 ;;      Locals:         0       9       0       0       0       0
  8971 ;;      Temps:          4       0       0       0       0       0
  8972 ;;      Totals:         4       9       0       0       0       0
  8973 ;;Total ram usage:       13 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    3
  8976 ;; This function calls:
  8977 ;;		_LCDdelay3
  8978 ;;		_clearDisplay
  8979 ;;		_resetCursor
  8980 ;;		_writeMessage
  8981 ;; This function is called by:
  8982 ;;		_alarmOnOff
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           
  8987                           ;psect for function _alarmOn
  8988  1662                     _alarmOn:	
  8989                           
  8990                           ;main.c: 112: clearDisplay ();
  8991                           
  8992                           ;incstack = 0
  8993                           ; Regs used in _alarmOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8994  1662  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  8995                           
  8996                           ;main.c: 113: resetCursor ();
  8997  1667  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  8998                           
  8999                           ;main.c: 114: char message[] = "Alarm On";
  9000  166C  3052               	movlw	alarmOn@message& (0+255)
  9001  166D  0084               	movwf	4
  9002  166E  30D1               	movlw	low alarmOn@F1208
  9003  166F  00F7               	movwf	??_alarmOn
  9004  1670  0804               	movf	4,w
  9005  1671  00F8               	movwf	??_alarmOn+1
  9006  1672  3009               	movlw	9
  9007  1673  00F9               	movwf	??_alarmOn+2
  9008  1674                     u5670:	
  9009  1674  0877               	movf	??_alarmOn,w
  9010  1675  0084               	movwf	4
  9011  1676  1383               	bcf	3,7	;select IRP bank1
  9012  1677  0800               	movf	0,w
  9013  1678  00FA               	movwf	??_alarmOn+3
  9014  1679  0AF7               	incf	??_alarmOn,f
  9015  167A  0878               	movf	??_alarmOn+1,w
  9016  167B  0084               	movwf	4
  9017  167C  087A               	movf	??_alarmOn+3,w
  9018  167D  0080               	movwf	0
  9019  167E  0AF8               	incf	??_alarmOn+1,f
  9020  167F  0BF9               	decfsz	??_alarmOn+2,f
  9021  1680  2E74               	goto	u5670
  9022                           
  9023                           ;main.c: 115: writeMessage(message);
  9024  1681  3052               	movlw	(low (alarmOn@message| 0))& (0+255)
  9025  1682  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  9026                           
  9027                           ;main.c: 116: LCDdelay3 ();
  9028  1687  160A  118A  2417   	fcall	_LCDdelay3
  9029  168A  0008               	return
  9030  168B                     __end_of_alarmOn:	
  9031                           
  9032                           	psect	text59
  9033  0810                     __ptext59:	
  9034 ;; *************** function _alarmOff *****************
  9035 ;; Defined at:
  9036 ;;		line 118 in file "main.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;		None
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  message        10    0[BANK0h] unsigned char [10]
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  1    wreg      void 
  9043 ;; Registers used:
  9044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9050 ;;      Params:         0       0       0       0       0       0
  9051 ;;      Locals:         0      10       0       0       0       0
  9052 ;;      Temps:          4       0       0       0       0       0
  9053 ;;      Totals:         4      10       0       0       0       0
  9054 ;;Total ram usage:       14 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; Hardware stack levels required when called:    3
  9057 ;; This function calls:
  9058 ;;		_LCDdelay3
  9059 ;;		_clearDisplay
  9060 ;;		_resetCursor
  9061 ;;		_writeMessage
  9062 ;; This function is called by:
  9063 ;;		_alarmOnOff
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function _alarmOff
  9069  0810                     _alarmOff:	
  9070                           
  9071                           ;main.c: 119: clearDisplay ();
  9072                           
  9073                           ;incstack = 0
  9074                           ; Regs used in _alarmOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9075  0810  160A  118A  23BE  120A  158A  	fcall	_clearDisplay
  9076                           
  9077                           ;main.c: 120: resetCursor ();
  9078  0815  160A  118A  23C3  120A  158A  	fcall	_resetCursor
  9079                           
  9080                           ;main.c: 121: char message[] = "Alarm Off";
  9081  081A  3052               	movlw	alarmOff@message& (0+255)
  9082  081B  0084               	movwf	4
  9083  081C  30E4               	movlw	low alarmOff@F1211
  9084  081D  00F7               	movwf	??_alarmOff
  9085  081E  0804               	movf	4,w
  9086  081F  00F8               	movwf	??_alarmOff+1
  9087  0820  300A               	movlw	10
  9088  0821  00F9               	movwf	??_alarmOff+2
  9089  0822                     u5680:	
  9090  0822  0877               	movf	??_alarmOff,w
  9091  0823  0084               	movwf	4
  9092  0824  1783               	bsf	3,7	;select IRP bank3
  9093  0825  0800               	movf	0,w
  9094  0826  00FA               	movwf	??_alarmOff+3
  9095  0827  0AF7               	incf	??_alarmOff,f
  9096  0828  0878               	movf	??_alarmOff+1,w
  9097  0829  0084               	movwf	4
  9098  082A  1383               	bcf	3,7	;select IRP bank0
  9099  082B  087A               	movf	??_alarmOff+3,w
  9100  082C  0080               	movwf	0
  9101  082D  0AF8               	incf	??_alarmOff+1,f
  9102  082E  0BF9               	decfsz	??_alarmOff+2,f
  9103  082F  2822               	goto	u5680
  9104                           
  9105                           ;main.c: 122: writeMessage(message);
  9106  0830  3052               	movlw	(low (alarmOff@message| 0))& (0+255)
  9107  0831  160A  118A  24DC  120A  158A  	fcall	_writeMessage
  9108                           
  9109                           ;main.c: 123: LCDdelay3 ();
  9110  0836  160A  118A  2417   	fcall	_LCDdelay3
  9111  0839  0008               	return
  9112  083A                     __end_of_alarmOff:	
  9113                           
  9114                           	psect	text60
  9115  1427                     __ptext60:	
  9116 ;; *************** function _LCDdelay2 *****************
  9117 ;; Defined at:
  9118 ;;		line 18 in file "LCD.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;  i               2    0[COMMON] unsigned int 
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg, status,2
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9132 ;;      Params:         0       0       0       0       0       0
  9133 ;;      Locals:         2       0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0
  9135 ;;      Totals:         2       0       0       0       0       0
  9136 ;;Total ram usage:        2 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_alarmOnOff
  9142 ;;		_changeTemp
  9143 ;;		_changeTime
  9144 ;;		_changeDate
  9145 ;;		_changeDelay
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           
  9150                           ;psect for function _LCDdelay2
  9151  1427                     _LCDdelay2:	
  9152                           
  9153                           ;LCD.c: 19: for (unsigned i=0; i<50000; i++);
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in _LCDdelay2: [wreg+status,2]
  9157  1427  01F0               	clrf	LCDdelay2@i
  9158  1428  01F1               	clrf	LCDdelay2@i+1
  9159  1429                     L14:	
  9160  1429  30C3               	movlw	195
  9161  142A  0271               	subwf	LCDdelay2@i+1,w
  9162  142B  3050               	movlw	80
  9163  142C  1903               	skipnz
  9164  142D  0270               	subwf	LCDdelay2@i,w
  9165  142E  1803               	btfsc	3,0
  9166  142F  0008               	return
  9167  1430  3001               	movlw	1
  9168  1431  07F0               	addwf	LCDdelay2@i,f
  9169  1432  1803               	skipnc
  9170  1433  0AF1               	incf	LCDdelay2@i+1,f
  9171  1434  3000               	movlw	0
  9172  1435  07F1               	addwf	LCDdelay2@i+1,f
  9173  1436  2C29               	goto	L14
  9174  1437                     __end_of_LCDdelay2:	
  9175                           
  9176                           	psect	text61
  9177  15CD                     __ptext61:	
  9178 ;; *************** function _activateZonesMode *****************
  9179 ;; Defined at:
  9180 ;;		line 422 in file "main.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;		None
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  1    wreg      void 
  9187 ;; Registers used:
  9188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9194 ;;      Params:         0       0       0       0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0
  9196 ;;      Temps:          0       0       0       0       0       0
  9197 ;;      Totals:         0       0       0       0       0       0
  9198 ;;Total ram usage:        0 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    4
  9201 ;; This function calls:
  9202 ;;		_zoneActivate
  9203 ;; This function is called by:
  9204 ;;		_main
  9205 ;; This function uses a non-reentrant model
  9206 ;;
  9207                           
  9208                           
  9209                           ;psect for function _activateZonesMode
  9210  15CD                     _activateZonesMode:	
  9211                           
  9212                           ;main.c: 423: if (row == 2 && col == 1) {
  9213                           
  9214                           ;incstack = 0
  9215                           ; Regs used in _activateZonesMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9216  15CD  3002               	movlw	2
  9217  15CE  1283               	bcf	3,5	;RP0=0, select bank0
  9218  15CF  1303               	bcf	3,6	;RP1=0, select bank0
  9219  15D0  0638               	xorwf	_row,w
  9220  15D1  0439               	iorwf	_row+1,w
  9221  15D2  1D03               	btfss	3,2
  9222  15D3  0008               	return
  9223  15D4  033A               	decf	_col,w
  9224  15D5  043B               	iorwf	_col+1,w
  9225  15D6  1D03               	btfss	3,2
  9226  15D7  0008               	return
  9227                           
  9228                           ;main.c: 424: if (zoneCheck == 0 && tempChange == 0 && tempChange == 0 && delayChange ==
      +                           0 && timeChange == 0 && dateChange == 0) {
  9229  15D8  084A               	movf	_zoneCheck,w
  9230  15D9  1D03               	btfss	3,2
  9231  15DA  0008               	return
  9232  15DB  0841               	movf	_tempChange,w
  9233  15DC  1D03               	btfss	3,2
  9234  15DD  0008               	return
  9235  15DE  0841               	movf	_tempChange,w
  9236  15DF  1D03               	btfss	3,2
  9237  15E0  0008               	return
  9238  15E1  083E               	movf	_delayChange,w
  9239  15E2  1D03               	btfss	3,2
  9240  15E3  0008               	return
  9241  15E4  0840               	movf	_timeChange,w
  9242  15E5  1D03               	btfss	3,2
  9243  15E6  0008               	return
  9244  15E7  083F               	movf	_dateChange,w
  9245  15E8  1D03               	btfss	3,2
  9246  15E9  0008               	return
  9247                           
  9248                           ;main.c: 425: zoneActivate();
  9249  15EA  160A  118A  263C   	fcall	_zoneActivate
  9250                           
  9251                           ;main.c: 426: zoneActMode = 1;
  9252  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  9253  15EE  1303               	bcf	3,6	;RP1=0, select bank0
  9254  15EF  01CB               	clrf	_zoneActMode
  9255  15F0  0ACB               	incf	_zoneActMode,f
  9256  15F1  0008               	return
  9257  15F2                     __end_of_activateZonesMode:	
  9258                           
  9259                           	psect	text62
  9260  163C                     __ptext62:	
  9261 ;; *************** function _zoneActivate *****************
  9262 ;; Defined at:
  9263 ;;		line 182 in file "main.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;		None
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  message         5    7[COMMON] unsigned char [5]
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9277 ;;      Params:         0       0       0       0       0       0
  9278 ;;      Locals:         5       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0
  9280 ;;      Totals:         5       0       0       0       0       0
  9281 ;;Total ram usage:        5 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    3
  9284 ;; This function calls:
  9285 ;;		_LCDdelay3
  9286 ;;		_clearDisplay
  9287 ;;		_resetCursor
  9288 ;;		_writeMessage
  9289 ;; This function is called by:
  9290 ;;		_activateZonesMode
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _zoneActivate
  9296  163C                     _zoneActivate:	
  9297                           
  9298                           ;main.c: 183: clearDisplay ();
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in _zoneActivate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9302  163C  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  9303                           
  9304                           ;main.c: 184: resetCursor ();
  9305  1641  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  9306                           
  9307                           ;main.c: 185: char message[] = "Zone";
  9308  1646  3077               	movlw	zoneActivate@message& (0+255)
  9309  1647  0084               	movwf	4
  9310  1648  1283               	bcf	3,5	;RP0=0, select bank0
  9311  1649  1303               	bcf	3,6	;RP1=0, select bank0
  9312  164A  0869               	movf	zoneActivate@F1238,w
  9313  164B  0080               	movwf	0
  9314  164C  0A84               	incf	4,f
  9315  164D  086A               	movf	zoneActivate@F1238+1,w
  9316  164E  0080               	movwf	0
  9317  164F  0A84               	incf	4,f
  9318  1650  086B               	movf	zoneActivate@F1238+2,w
  9319  1651  0080               	movwf	0
  9320  1652  0A84               	incf	4,f
  9321  1653  086C               	movf	zoneActivate@F1238+3,w
  9322  1654  0080               	movwf	0
  9323  1655  0A84               	incf	4,f
  9324  1656  086D               	movf	zoneActivate@F1238+4,w
  9325  1657  0080               	movwf	0
  9326                           
  9327                           ;main.c: 186: writeMessage(message);
  9328  1658  3077               	movlw	(low (zoneActivate@message| 0))& (0+255)
  9329  1659  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  9330                           
  9331                           ;main.c: 187: LCDdelay3 ();
  9332  165E  160A  118A  2417   	fcall	_LCDdelay3
  9333  1661  0008               	return
  9334  1662                     __end_of_zoneActivate:	
  9335                           
  9336                           	psect	text63
  9337  0DB2                     __ptext63:	
  9338 ;; *************** function _activateZones *****************
  9339 ;; Defined at:
  9340 ;;		line 430 in file "main.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;		None
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;		None
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9354 ;;      Params:         0       0       0       0       0       0
  9355 ;;      Locals:         0       0       0       0       0       0
  9356 ;;      Temps:          0       0       0       0       0       0
  9357 ;;      Totals:         0       0       0       0       0       0
  9358 ;;Total ram usage:        0 bytes
  9359 ;; Hardware stack levels used:    1
  9360 ;; Hardware stack levels required when called:    4
  9361 ;; This function calls:
  9362 ;;		_zone0Activate
  9363 ;;		_zone1Activate
  9364 ;;		_zone2Activate
  9365 ;;		_zone3Activate
  9366 ;; This function is called by:
  9367 ;;		_main
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           
  9372                           ;psect for function _activateZones
  9373  0DB2                     _activateZones:	
  9374                           
  9375                           ;main.c: 431: if (zoneActMode == 1) {
  9376                           
  9377                           ;incstack = 0
  9378                           ; Regs used in _activateZones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9379  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  9380  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  9381  0DB4  034B               	decf	_zoneActMode,w
  9382  0DB5  1D03               	btfss	3,2
  9383  0DB6  0008               	return
  9384                           
  9385                           ;main.c: 432: if (row == 1 && col == 2) {
  9386  0DB7  0338               	decf	_row,w
  9387  0DB8  0439               	iorwf	_row+1,w
  9388  0DB9  1D03               	btfss	3,2
  9389  0DBA  2DCC               	goto	l4897
  9390  0DBB  3002               	movlw	2
  9391  0DBC  063A               	xorwf	_col,w
  9392  0DBD  043B               	iorwf	_col+1,w
  9393  0DBE  1D03               	btfss	3,2
  9394  0DBF  2DCC               	goto	l4897
  9395                           
  9396                           ;main.c: 433: if (zone0On == 0) {
  9397  0DC0  0849               	movf	_zone0On,w
  9398  0DC1  1D03               	btfss	3,2
  9399  0DC2  2DCC               	goto	l4897
  9400                           
  9401                           ;main.c: 434: zone0Activate();
  9402  0DC3  160A  118A  2758  120A  158A  	fcall	_zone0Activate
  9403                           
  9404                           ;main.c: 435: zone0On = 1;
  9405  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  9406  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  9407  0DCA  01C9               	clrf	_zone0On
  9408  0DCB  0AC9               	incf	_zone0On,f
  9409  0DCC                     l4897:	
  9410                           
  9411                           ;main.c: 436: }
  9412                           ;main.c: 437: }
  9413                           ;main.c: 438: if (row == 2 && col == 2) {
  9414  0DCC  3002               	movlw	2
  9415  0DCD  0638               	xorwf	_row,w
  9416  0DCE  0439               	iorwf	_row+1,w
  9417  0DCF  1D03               	btfss	3,2
  9418  0DD0  2DE0               	goto	l4907
  9419  0DD1  3002               	movlw	2
  9420  0DD2  063A               	xorwf	_col,w
  9421  0DD3  043B               	iorwf	_col+1,w
  9422  0DD4  1D03               	btfss	3,2
  9423  0DD5  2DE0               	goto	l4907
  9424                           
  9425                           ;main.c: 439: if (zone1On == 0) {
  9426  0DD6  0848               	movf	_zone1On,w
  9427  0DD7  1D03               	btfss	3,2
  9428  0DD8  2DE0               	goto	l4907
  9429                           
  9430                           ;main.c: 440: zone1On = 1;
  9431  0DD9  01C8               	clrf	_zone1On
  9432  0DDA  0AC8               	incf	_zone1On,f
  9433                           
  9434                           ;main.c: 441: zone1Activate();
  9435  0DDB  160A  118A  2782  120A  158A  	fcall	_zone1Activate
  9436  0DE0                     l4907:	
  9437                           
  9438                           ;main.c: 443: }
  9439                           ;main.c: 444: }
  9440                           ;main.c: 445: if (row == 3 && col == 2) {
  9441  0DE0  3003               	movlw	3
  9442  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  9443  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  9444  0DE3  0638               	xorwf	_row,w
  9445  0DE4  0439               	iorwf	_row+1,w
  9446  0DE5  1D03               	btfss	3,2
  9447  0DE6  2DF8               	goto	l4917
  9448  0DE7  3002               	movlw	2
  9449  0DE8  063A               	xorwf	_col,w
  9450  0DE9  043B               	iorwf	_col+1,w
  9451  0DEA  1D03               	btfss	3,2
  9452  0DEB  2DF8               	goto	l4917
  9453                           
  9454                           ;main.c: 446: if (zone2On == 0) {
  9455  0DEC  0847               	movf	_zone2On,w
  9456  0DED  1D03               	btfss	3,2
  9457  0DEE  2DF8               	goto	l4917
  9458                           
  9459                           ;main.c: 447: zone2Activate();
  9460  0DEF  160A  118A  27AC  120A  158A  	fcall	_zone2Activate
  9461                           
  9462                           ;main.c: 448: zone2On = 1;
  9463  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  9464  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  9465  0DF6  01C7               	clrf	_zone2On
  9466  0DF7  0AC7               	incf	_zone2On,f
  9467  0DF8                     l4917:	
  9468                           
  9469                           ;main.c: 449: }
  9470                           ;main.c: 450: }
  9471                           ;main.c: 451: if (row == 4 && col == 2) {
  9472  0DF8  3004               	movlw	4
  9473  0DF9  0638               	xorwf	_row,w
  9474  0DFA  0439               	iorwf	_row+1,w
  9475  0DFB  1D03               	btfss	3,2
  9476  0DFC  0008               	return
  9477  0DFD  3002               	movlw	2
  9478  0DFE  063A               	xorwf	_col,w
  9479  0DFF  043B               	iorwf	_col+1,w
  9480  0E00  1D03               	btfss	3,2
  9481  0E01  0008               	return
  9482                           
  9483                           ;main.c: 452: if (zone3On == 0) {
  9484  0E02  0846               	movf	_zone3On,w
  9485  0E03  1D03               	btfss	3,2
  9486  0E04  0008               	return
  9487                           
  9488                           ;main.c: 453: zone3Activate();
  9489  0E05  160A  118A  27D6   	fcall	_zone3Activate
  9490                           
  9491                           ;main.c: 454: zone3On = 1;
  9492  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  9493  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  9494  0E0A  01C6               	clrf	_zone3On
  9495  0E0B  0AC6               	incf	_zone3On,f
  9496  0E0C  0008               	return
  9497  0E0D                     __end_of_activateZones:	
  9498                           
  9499                           	psect	text64
  9500  17D6                     __ptext64:	
  9501 ;; *************** function _zone3Activate *****************
  9502 ;; Defined at:
  9503 ;;		line 146 in file "main.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  message        10    0[BANK0h] unsigned char [10]
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9517 ;;      Params:         0       0       0       0       0       0
  9518 ;;      Locals:         0      10       0       0       0       0
  9519 ;;      Temps:          4       0       0       0       0       0
  9520 ;;      Totals:         4      10       0       0       0       0
  9521 ;;Total ram usage:       14 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    3
  9524 ;; This function calls:
  9525 ;;		_LCDdelay3
  9526 ;;		_clearDisplay
  9527 ;;		_resetCursor
  9528 ;;		_writeMessage
  9529 ;; This function is called by:
  9530 ;;		_activateZones
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           
  9535                           ;psect for function _zone3Activate
  9536  17D6                     _zone3Activate:	
  9537                           
  9538                           ;main.c: 147: clearDisplay ();
  9539                           
  9540                           ;incstack = 0
  9541                           ; Regs used in _zone3Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9542  17D6  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  9543                           
  9544                           ;main.c: 148: resetCursor ();
  9545  17DB  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  9546                           
  9547                           ;main.c: 149: char message[] = "Zone 3 On";
  9548  17E0  3052               	movlw	zone3Activate@message& (0+255)
  9549  17E1  0084               	movwf	4
  9550  17E2  30BC               	movlw	low zone3Activate@F1223
  9551  17E3  00F7               	movwf	??_zone3Activate
  9552  17E4  0804               	movf	4,w
  9553  17E5  00F8               	movwf	??_zone3Activate+1
  9554  17E6  300A               	movlw	10
  9555  17E7  00F9               	movwf	??_zone3Activate+2
  9556  17E8                     u5720:	
  9557  17E8  0877               	movf	??_zone3Activate,w
  9558  17E9  0084               	movwf	4
  9559  17EA  1783               	bsf	3,7	;select IRP bank3
  9560  17EB  0800               	movf	0,w
  9561  17EC  00FA               	movwf	??_zone3Activate+3
  9562  17ED  0AF7               	incf	??_zone3Activate,f
  9563  17EE  0878               	movf	??_zone3Activate+1,w
  9564  17EF  0084               	movwf	4
  9565  17F0  1383               	bcf	3,7	;select IRP bank0
  9566  17F1  087A               	movf	??_zone3Activate+3,w
  9567  17F2  0080               	movwf	0
  9568  17F3  0AF8               	incf	??_zone3Activate+1,f
  9569  17F4  0BF9               	decfsz	??_zone3Activate+2,f
  9570  17F5  2FE8               	goto	u5720
  9571                           
  9572                           ;main.c: 150: writeMessage(message);
  9573  17F6  3052               	movlw	(low (zone3Activate@message| 0))& (0+255)
  9574  17F7  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  9575                           
  9576                           ;main.c: 151: LCDdelay3 ();
  9577  17FC  160A  118A  2417   	fcall	_LCDdelay3
  9578  17FF  0008               	return
  9579  1800                     __end_of_zone3Activate:	
  9580                           
  9581                           	psect	text65
  9582  17AC                     __ptext65:	
  9583 ;; *************** function _zone2Activate *****************
  9584 ;; Defined at:
  9585 ;;		line 139 in file "main.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  message        10    0[BANK0h] unsigned char [10]
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9599 ;;      Params:         0       0       0       0       0       0
  9600 ;;      Locals:         0      10       0       0       0       0
  9601 ;;      Temps:          4       0       0       0       0       0
  9602 ;;      Totals:         4      10       0       0       0       0
  9603 ;;Total ram usage:       14 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    3
  9606 ;; This function calls:
  9607 ;;		_LCDdelay3
  9608 ;;		_clearDisplay
  9609 ;;		_resetCursor
  9610 ;;		_writeMessage
  9611 ;; This function is called by:
  9612 ;;		_activateZones
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           
  9617                           ;psect for function _zone2Activate
  9618  17AC                     _zone2Activate:	
  9619                           
  9620                           ;main.c: 140: clearDisplay ();
  9621                           
  9622                           ;incstack = 0
  9623                           ; Regs used in _zone2Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9624  17AC  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  9625                           
  9626                           ;main.c: 141: resetCursor ();
  9627  17B1  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  9628                           
  9629                           ;main.c: 142: char message[] = "Zone 2 On";
  9630  17B6  3052               	movlw	zone2Activate@message& (0+255)
  9631  17B7  0084               	movwf	4
  9632  17B8  30C6               	movlw	low zone2Activate@F1220
  9633  17B9  00F7               	movwf	??_zone2Activate
  9634  17BA  0804               	movf	4,w
  9635  17BB  00F8               	movwf	??_zone2Activate+1
  9636  17BC  300A               	movlw	10
  9637  17BD  00F9               	movwf	??_zone2Activate+2
  9638  17BE                     u5710:	
  9639  17BE  0877               	movf	??_zone2Activate,w
  9640  17BF  0084               	movwf	4
  9641  17C0  1783               	bsf	3,7	;select IRP bank3
  9642  17C1  0800               	movf	0,w
  9643  17C2  00FA               	movwf	??_zone2Activate+3
  9644  17C3  0AF7               	incf	??_zone2Activate,f
  9645  17C4  0878               	movf	??_zone2Activate+1,w
  9646  17C5  0084               	movwf	4
  9647  17C6  1383               	bcf	3,7	;select IRP bank0
  9648  17C7  087A               	movf	??_zone2Activate+3,w
  9649  17C8  0080               	movwf	0
  9650  17C9  0AF8               	incf	??_zone2Activate+1,f
  9651  17CA  0BF9               	decfsz	??_zone2Activate+2,f
  9652  17CB  2FBE               	goto	u5710
  9653                           
  9654                           ;main.c: 143: writeMessage(message);
  9655  17CC  3052               	movlw	(low (zone2Activate@message| 0))& (0+255)
  9656  17CD  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  9657                           
  9658                           ;main.c: 144: LCDdelay3 ();
  9659  17D2  160A  118A  2417   	fcall	_LCDdelay3
  9660  17D5  0008               	return
  9661  17D6                     __end_of_zone2Activate:	
  9662                           
  9663                           	psect	text66
  9664  1782                     __ptext66:	
  9665 ;; *************** function _zone1Activate *****************
  9666 ;; Defined at:
  9667 ;;		line 132 in file "main.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;		None
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;  message        10    0[BANK0h] unsigned char [10]
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9681 ;;      Params:         0       0       0       0       0       0
  9682 ;;      Locals:         0      10       0       0       0       0
  9683 ;;      Temps:          4       0       0       0       0       0
  9684 ;;      Totals:         4      10       0       0       0       0
  9685 ;;Total ram usage:       14 bytes
  9686 ;; Hardware stack levels used:    1
  9687 ;; Hardware stack levels required when called:    3
  9688 ;; This function calls:
  9689 ;;		_LCDdelay3
  9690 ;;		_clearDisplay
  9691 ;;		_resetCursor
  9692 ;;		_writeMessage
  9693 ;; This function is called by:
  9694 ;;		_activateZones
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           
  9699                           ;psect for function _zone1Activate
  9700  1782                     _zone1Activate:	
  9701                           
  9702                           ;main.c: 133: clearDisplay ();
  9703                           
  9704                           ;incstack = 0
  9705                           ; Regs used in _zone1Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9706  1782  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  9707                           
  9708                           ;main.c: 134: resetCursor ();
  9709  1787  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  9710                           
  9711                           ;main.c: 135: char message[] = "Zone 1 On";
  9712  178C  3052               	movlw	zone1Activate@message& (0+255)
  9713  178D  0084               	movwf	4
  9714  178E  30D0               	movlw	low zone1Activate@F1217
  9715  178F  00F7               	movwf	??_zone1Activate
  9716  1790  0804               	movf	4,w
  9717  1791  00F8               	movwf	??_zone1Activate+1
  9718  1792  300A               	movlw	10
  9719  1793  00F9               	movwf	??_zone1Activate+2
  9720  1794                     u5700:	
  9721  1794  0877               	movf	??_zone1Activate,w
  9722  1795  0084               	movwf	4
  9723  1796  1783               	bsf	3,7	;select IRP bank3
  9724  1797  0800               	movf	0,w
  9725  1798  00FA               	movwf	??_zone1Activate+3
  9726  1799  0AF7               	incf	??_zone1Activate,f
  9727  179A  0878               	movf	??_zone1Activate+1,w
  9728  179B  0084               	movwf	4
  9729  179C  1383               	bcf	3,7	;select IRP bank0
  9730  179D  087A               	movf	??_zone1Activate+3,w
  9731  179E  0080               	movwf	0
  9732  179F  0AF8               	incf	??_zone1Activate+1,f
  9733  17A0  0BF9               	decfsz	??_zone1Activate+2,f
  9734  17A1  2F94               	goto	u5700
  9735                           
  9736                           ;main.c: 136: writeMessage(message);
  9737  17A2  3052               	movlw	(low (zone1Activate@message| 0))& (0+255)
  9738  17A3  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  9739                           
  9740                           ;main.c: 137: LCDdelay3 ();
  9741  17A8  160A  118A  2417   	fcall	_LCDdelay3
  9742  17AB  0008               	return
  9743  17AC                     __end_of_zone1Activate:	
  9744                           
  9745                           	psect	text67
  9746  1758                     __ptext67:	
  9747 ;; *************** function _zone0Activate *****************
  9748 ;; Defined at:
  9749 ;;		line 125 in file "main.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;		None
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;  message        10    0[BANK0h] unsigned char [10]
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  1    wreg      void 
  9756 ;; Registers used:
  9757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9763 ;;      Params:         0       0       0       0       0       0
  9764 ;;      Locals:         0      10       0       0       0       0
  9765 ;;      Temps:          4       0       0       0       0       0
  9766 ;;      Totals:         4      10       0       0       0       0
  9767 ;;Total ram usage:       14 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    3
  9770 ;; This function calls:
  9771 ;;		_LCDdelay3
  9772 ;;		_clearDisplay
  9773 ;;		_resetCursor
  9774 ;;		_writeMessage
  9775 ;; This function is called by:
  9776 ;;		_activateZones
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           
  9781                           ;psect for function _zone0Activate
  9782  1758                     _zone0Activate:	
  9783                           
  9784                           ;main.c: 126: clearDisplay ();
  9785                           
  9786                           ;incstack = 0
  9787                           ; Regs used in _zone0Activate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9788  1758  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
  9789                           
  9790                           ;main.c: 127: resetCursor ();
  9791  175D  160A  118A  23C3  160A  118A  	fcall	_resetCursor
  9792                           
  9793                           ;main.c: 128: char message[] = "Zone 0 On";
  9794  1762  3052               	movlw	zone0Activate@message& (0+255)
  9795  1763  0084               	movwf	4
  9796  1764  30DA               	movlw	low zone0Activate@F1214
  9797  1765  00F7               	movwf	??_zone0Activate
  9798  1766  0804               	movf	4,w
  9799  1767  00F8               	movwf	??_zone0Activate+1
  9800  1768  300A               	movlw	10
  9801  1769  00F9               	movwf	??_zone0Activate+2
  9802  176A                     u5690:	
  9803  176A  0877               	movf	??_zone0Activate,w
  9804  176B  0084               	movwf	4
  9805  176C  1783               	bsf	3,7	;select IRP bank3
  9806  176D  0800               	movf	0,w
  9807  176E  00FA               	movwf	??_zone0Activate+3
  9808  176F  0AF7               	incf	??_zone0Activate,f
  9809  1770  0878               	movf	??_zone0Activate+1,w
  9810  1771  0084               	movwf	4
  9811  1772  1383               	bcf	3,7	;select IRP bank0
  9812  1773  087A               	movf	??_zone0Activate+3,w
  9813  1774  0080               	movwf	0
  9814  1775  0AF8               	incf	??_zone0Activate+1,f
  9815  1776  0BF9               	decfsz	??_zone0Activate+2,f
  9816  1777  2F6A               	goto	u5690
  9817                           
  9818                           ;main.c: 129: writeMessage(message);
  9819  1778  3052               	movlw	(low (zone0Activate@message| 0))& (0+255)
  9820  1779  160A  118A  24DC  160A  118A  	fcall	_writeMessage
  9821                           
  9822                           ;main.c: 130: LCDdelay3 ();
  9823  177E  160A  118A  2417   	fcall	_LCDdelay3
  9824  1781  0008               	return
  9825  1782                     __end_of_zone0Activate:	
  9826                           
  9827                           	psect	text68
  9828  14DC                     __ptext68:	
  9829 ;; *************** function _writeMessage *****************
  9830 ;; Defined at:
  9831 ;;		line 42 in file "LCD.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;  message         1    wreg     PTR unsigned char 
  9834 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagecol(12), modeSelect@messa
      +gerow(9), 
  9835 ;;		 -> ButtonGrid@messagecol(6), ButtonGrid@messagerow(6), zoneActivate@message(5), zone3Deactivate@message(11), 
  9836 ;;		 -> zone2Deactivate@message(11), zone1Deactivate@message(11), zone0Deactivate@message(11), zone3Activate@message(10)
      +, 
  9837 ;;		 -> zone2Activate@message(10), zone1Activate@message(10), zone0Activate@message(10), alarmOff@message(10), 
  9838 ;;		 -> alarmOn@message(9), currentTemp@message2(13), currentTemp@message1(7), zone3Alert@message(13), 
  9839 ;;		 -> zone2Alert@message(13), zone1Alert@message(13), zone0Alert@message(13), zone3OK@message(10), 
  9840 ;;		 -> zone2OK@message(10), zone1OK@message(10), zone0OK@message(10), 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  message         1    6[COMMON] PTR unsigned char 
  9843 ;;		 -> changeTriggerMessage@messagerow(12), checkZoneMessage@messagerow(6), modeSelect@messagecol(12), modeSelect@messa
      +gerow(9), 
  9844 ;;		 -> ButtonGrid@messagecol(6), ButtonGrid@messagerow(6), zoneActivate@message(5), zone3Deactivate@message(11), 
  9845 ;;		 -> zone2Deactivate@message(11), zone1Deactivate@message(11), zone0Deactivate@message(11), zone3Activate@message(10)
      +, 
  9846 ;;		 -> zone2Activate@message(10), zone1Activate@message(10), zone0Activate@message(10), alarmOff@message(10), 
  9847 ;;		 -> alarmOn@message(9), currentTemp@message2(13), currentTemp@message1(7), zone3Alert@message(13), 
  9848 ;;		 -> zone2Alert@message(13), zone1Alert@message(13), zone0Alert@message(13), zone3OK@message(10), 
  9849 ;;		 -> zone2OK@message(10), zone1OK@message(10), zone0OK@message(10), 
  9850 ;;  i               2    4[COMMON] int 
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9860 ;;      Params:         0       0       0       0       0       0
  9861 ;;      Locals:         3       0       0       0       0       0
  9862 ;;      Temps:          1       0       0       0       0       0
  9863 ;;      Totals:         4       0       0       0       0       0
  9864 ;;Total ram usage:        4 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    2
  9867 ;; This function calls:
  9868 ;;		_writeChar
  9869 ;; This function is called by:
  9870 ;;		_zone0OK
  9871 ;;		_zone1OK
  9872 ;;		_zone2OK
  9873 ;;		_zone3OK
  9874 ;;		_zone0Alert
  9875 ;;		_zone1Alert
  9876 ;;		_zone2Alert
  9877 ;;		_zone3Alert
  9878 ;;		_alarmOn
  9879 ;;		_alarmOff
  9880 ;;		_zone0Activate
  9881 ;;		_zone1Activate
  9882 ;;		_zone2Activate
  9883 ;;		_zone3Activate
  9884 ;;		_zone0Deactivate
  9885 ;;		_zone1Deactivate
  9886 ;;		_zone2Deactivate
  9887 ;;		_zone3Deactivate
  9888 ;;		_zoneActivate
  9889 ;;		_writeMessageline1
  9890 ;;		_writeMessageline2
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           
  9895                           ;psect for function _writeMessage
  9896  14DC                     _writeMessage:	
  9897                           
  9898                           ;incstack = 0
  9899                           ; Regs used in _writeMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9900                           ;writeMessage@message stored from wreg
  9901  14DC  00F6               	movwf	writeMessage@message
  9902                           
  9903                           ;LCD.c: 43: for (int i = 0; message[i] != '\0'; i++){
  9904  14DD  01F4               	clrf	writeMessage@i
  9905  14DE  01F5               	clrf	writeMessage@i+1
  9906  14DF                     l4347:	
  9907  14DF  0874               	movf	writeMessage@i,w
  9908  14E0  0776               	addwf	writeMessage@message,w
  9909  14E1  00F3               	movwf	??_writeMessage
  9910  14E2  0873               	movf	??_writeMessage,w
  9911  14E3  0084               	movwf	4
  9912  14E4  1383               	bcf	3,7	;select IRP bank0
  9913  14E5  0800               	movf	0,w
  9914  14E6  1903               	btfsc	3,2
  9915  14E7  0008               	return
  9916                           
  9917                           ;LCD.c: 44: writeChar (message[i]);
  9918  14E8  0874               	movf	writeMessage@i,w
  9919  14E9  0776               	addwf	writeMessage@message,w
  9920  14EA  00F3               	movwf	??_writeMessage
  9921  14EB  0873               	movf	??_writeMessage,w
  9922  14EC  0084               	movwf	4
  9923  14ED  1383               	bcf	3,7	;select IRP bank0
  9924  14EE  0800               	movf	0,w
  9925  14EF  160A  118A  253D  160A  118A  	fcall	_writeChar
  9926  14F4  3001               	movlw	1
  9927  14F5  07F4               	addwf	writeMessage@i,f
  9928  14F6  1803               	skipnc
  9929  14F7  0AF5               	incf	writeMessage@i+1,f
  9930  14F8  3000               	movlw	0
  9931  14F9  07F5               	addwf	writeMessage@i+1,f
  9932  14FA  2CDF               	goto	l4347
  9933  14FB                     __end_of_writeMessage:	
  9934                           
  9935                           	psect	text69
  9936  153D                     __ptext69:	
  9937 ;; *************** function _writeChar *****************
  9938 ;; Defined at:
  9939 ;;		line 27 in file "LCD.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  var             1    wreg     unsigned char 
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;  var             1    2[COMMON] unsigned char 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
  9953 ;;      Params:         0       0       0       0       0       0
  9954 ;;      Locals:         1       0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0
  9956 ;;      Totals:         1       0       0       0       0       0
  9957 ;;Total ram usage:        1 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    1
  9960 ;; This function calls:
  9961 ;;		_LCDdelay
  9962 ;; This function is called by:
  9963 ;;		_changeTemp
  9964 ;;		_changeTime
  9965 ;;		_changeDate
  9966 ;;		_changeDelay
  9967 ;;		_writeMessage
  9968 ;;		_display
  9969 ;;		_displayDate
  9970 ;;		_getTemperature
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _writeChar
  9976  153D                     _writeChar:	
  9977                           
  9978                           ;incstack = 0
  9979                           ; Regs used in _writeChar: [wreg+status,2+status,0+pclath+cstack]
  9980                           ;writeChar@var stored from wreg
  9981  153D  00F2               	movwf	writeChar@var
  9982                           
  9983                           ;LCD.c: 28: PORTA = 0;
  9984  153E  1283               	bcf	3,5	;RP0=0, select bank0
  9985  153F  1303               	bcf	3,6	;RP1=0, select bank0
  9986  1540  0185               	clrf	5	;volatile
  9987                           
  9988                           ;LCD.c: 29: PORTD = 0;
  9989  1541  0188               	clrf	8	;volatile
  9990                           
  9991                           ;LCD.c: 30: RA1 = 1;
  9992  1542  1485               	bsf	5,1	;volatile
  9993                           
  9994                           ;LCD.c: 31: RA2 = 0;
  9995  1543  1105               	bcf	5,2	;volatile
  9996                           
  9997                           ;LCD.c: 32: LCDdelay ();
  9998  1544  160A  118A  2407  160A  118A  	fcall	_LCDdelay
  9999                           
 10000                           ;LCD.c: 33: RA3 = 1;
 10001  1549  1283               	bcf	3,5	;RP0=0, select bank0
 10002  154A  1303               	bcf	3,6	;RP1=0, select bank0
 10003  154B  1585               	bsf	5,3	;volatile
 10004                           
 10005                           ;LCD.c: 34: LCDdelay ();
 10006  154C  160A  118A  2407  160A  118A  	fcall	_LCDdelay
 10007                           
 10008                           ;LCD.c: 35: PORTD = var;
 10009  1551  0872               	movf	writeChar@var,w
 10010  1552  1283               	bcf	3,5	;RP0=0, select bank0
 10011  1553  1303               	bcf	3,6	;RP1=0, select bank0
 10012  1554  0088               	movwf	8	;volatile
 10013                           
 10014                           ;LCD.c: 36: LCDdelay ();
 10015  1555  160A  118A  2407  160A  118A  	fcall	_LCDdelay
 10016                           
 10017                           ;LCD.c: 37: RA3 = 0;
 10018  155A  1283               	bcf	3,5	;RP0=0, select bank0
 10019  155B  1303               	bcf	3,6	;RP1=0, select bank0
 10020  155C  1185               	bcf	5,3	;volatile
 10021                           
 10022                           ;LCD.c: 38: LCDdelay ();
 10023  155D  160A  118A  2407   	fcall	_LCDdelay
 10024  1560  0008               	return
 10025  1561                     __end_of_writeChar:	
 10026                           
 10027                           	psect	text70
 10028  1417                     __ptext70:	
 10029 ;; *************** function _LCDdelay3 *****************
 10030 ;; Defined at:
 10031 ;;		line 21 in file "LCD.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;		None
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;  i               2    0[COMMON] unsigned int 
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  1    wreg      void 
 10038 ;; Registers used:
 10039 ;;		wreg, status,2
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10045 ;;      Params:         0       0       0       0       0       0
 10046 ;;      Locals:         2       0       0       0       0       0
 10047 ;;      Temps:          0       0       0       0       0       0
 10048 ;;      Totals:         2       0       0       0       0       0
 10049 ;;Total ram usage:        2 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; This function calls:
 10052 ;;		Nothing
 10053 ;; This function is called by:
 10054 ;;		_zone0OK
 10055 ;;		_zone1OK
 10056 ;;		_zone2OK
 10057 ;;		_zone3OK
 10058 ;;		_zone0Alert
 10059 ;;		_zone1Alert
 10060 ;;		_zone2Alert
 10061 ;;		_zone3Alert
 10062 ;;		_alarmOn
 10063 ;;		_alarmOff
 10064 ;;		_zone0Activate
 10065 ;;		_zone1Activate
 10066 ;;		_zone2Activate
 10067 ;;		_zone3Activate
 10068 ;;		_zone0Deactivate
 10069 ;;		_zone1Deactivate
 10070 ;;		_zone2Deactivate
 10071 ;;		_zone3Deactivate
 10072 ;;		_zoneActivate
 10073 ;;		_checkZoneMessage
 10074 ;;		_changeTriggerMessage
 10075 ;;		_currentTemp
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           
 10080                           ;psect for function _LCDdelay3
 10081  1417                     _LCDdelay3:	
 10082                           
 10083                           ;LCD.c: 22: for (unsigned i=0; i<25000; i++);
 10084                           
 10085                           ;incstack = 0
 10086                           ; Regs used in _LCDdelay3: [wreg+status,2]
 10087  1417  01F0               	clrf	LCDdelay3@i
 10088  1418  01F1               	clrf	LCDdelay3@i+1
 10089  1419                     L15:	
 10090  1419  3061               	movlw	97
 10091  141A  0271               	subwf	LCDdelay3@i+1,w
 10092  141B  30A8               	movlw	168
 10093  141C  1903               	skipnz
 10094  141D  0270               	subwf	LCDdelay3@i,w
 10095  141E  1803               	btfsc	3,0
 10096  141F  0008               	return
 10097  1420  3001               	movlw	1
 10098  1421  07F0               	addwf	LCDdelay3@i,f
 10099  1422  1803               	skipnc
 10100  1423  0AF1               	incf	LCDdelay3@i+1,f
 10101  1424  3000               	movlw	0
 10102  1425  07F1               	addwf	LCDdelay3@i+1,f
 10103  1426  2C19               	goto	L15
 10104  1427                     __end_of_LCDdelay3:	
 10105                           
 10106                           	psect	text71
 10107  14C1                     __ptext71:	
 10108 ;; *************** function _Return *****************
 10109 ;; Defined at:
 10110 ;;		line 792 in file "main.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      void 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, pclath, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10124 ;;      Params:         0       0       0       0       0       0
 10125 ;;      Locals:         0       0       0       0       0       0
 10126 ;;      Temps:          0       0       0       0       0       0
 10127 ;;      Totals:         0       0       0       0       0       0
 10128 ;;Total ram usage:        0 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    3
 10131 ;; This function calls:
 10132 ;;		_clearDisplay
 10133 ;;		_resetCursor
 10134 ;; This function is called by:
 10135 ;;		_main
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138                           
 10139                           
 10140                           ;psect for function _Return
 10141  14C1                     _Return:	
 10142                           
 10143                           ;main.c: 793: clearDisplay ();
 10144                           
 10145                           ;incstack = 0
 10146                           ; Regs used in _Return: [wreg+status,2+status,0+pclath+cstack]
 10147  14C1  160A  118A  23BE  160A  118A  	fcall	_clearDisplay
 10148                           
 10149                           ;main.c: 794: resetCursor ();
 10150  14C6  160A  118A  23C3  160A  118A  	fcall	_resetCursor
 10151                           
 10152                           ;main.c: 795: if (row == 1 && col == 4) {
 10153  14CB  1283               	bcf	3,5	;RP0=0, select bank0
 10154  14CC  1303               	bcf	3,6	;RP1=0, select bank0
 10155  14CD  0338               	decf	_row,w
 10156  14CE  0439               	iorwf	_row+1,w
 10157  14CF  1D03               	btfss	3,2
 10158  14D0  0008               	return
 10159  14D1  3004               	movlw	4
 10160  14D2  063A               	xorwf	_col,w
 10161  14D3  043B               	iorwf	_col+1,w
 10162  14D4  1D03               	btfss	3,2
 10163  14D5  0008               	return
 10164                           
 10165                           ;main.c: 796: zoneActMode = 0;
 10166  14D6  01CB               	clrf	_zoneActMode
 10167                           
 10168                           ;main.c: 797: zoneCheck = 0;
 10169  14D7  01CA               	clrf	_zoneCheck
 10170                           
 10171                           ;main.c: 798: tempChange = 0;
 10172  14D8  01C1               	clrf	_tempChange
 10173                           
 10174                           ;main.c: 799: durationChange = 0;
 10175  14D9  01AA               	clrf	_durationChange
 10176                           
 10177                           ;main.c: 800: alertChange = 0;
 10178  14DA  01A9               	clrf	_alertChange
 10179  14DB  0008               	return
 10180  14DC                     __end_of_Return:	
 10181                           
 10182                           	psect	text72
 10183  13C3                     __ptext72:	
 10184 ;; *************** function _resetCursor *****************
 10185 ;; Defined at:
 10186 ;;		line 83 in file "LCD.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;		None
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0, pclath, cstack
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10200 ;;      Params:         0       0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0
 10203 ;;      Totals:         0       0       0       0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    2
 10207 ;; This function calls:
 10208 ;;		_writeCmd
 10209 ;; This function is called by:
 10210 ;;		_zone0OK
 10211 ;;		_zone1OK
 10212 ;;		_zone2OK
 10213 ;;		_zone3OK
 10214 ;;		_zone0Alert
 10215 ;;		_zone1Alert
 10216 ;;		_zone2Alert
 10217 ;;		_zone3Alert
 10218 ;;		_alarmOn
 10219 ;;		_alarmOff
 10220 ;;		_zone0Activate
 10221 ;;		_zone1Activate
 10222 ;;		_zone2Activate
 10223 ;;		_zone3Activate
 10224 ;;		_zone0Deactivate
 10225 ;;		_zone1Deactivate
 10226 ;;		_zone2Deactivate
 10227 ;;		_zone3Deactivate
 10228 ;;		_zoneActivate
 10229 ;;		_modeSelect
 10230 ;;		_checkZoneMessage
 10231 ;;		_changeTriggerMessage
 10232 ;;		_changeTemp
 10233 ;;		_changeTime
 10234 ;;		_changeDate
 10235 ;;		_changeDelay
 10236 ;;		_Return
 10237 ;;		_currentTemp
 10238 ;;		_ButtonGrid
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241                           
 10242                           
 10243                           ;psect for function _resetCursor
 10244  13C3                     _resetCursor:	
 10245                           
 10246                           ;LCD.c: 84: writeCmd(0x02);
 10247                           
 10248                           ;incstack = 0
 10249                           ; Regs used in _resetCursor: [wreg+status,2+status,0+pclath+cstack]
 10250  13C3  3002               	movlw	2
 10251  13C4  160A  118A  251B   	fcall	_writeCmd
 10252  13C7  0008               	return
 10253  13C8                     __end_of_resetCursor:	
 10254                           
 10255                           	psect	text73
 10256  13BE                     __ptext73:	
 10257 ;; *************** function _clearDisplay *****************
 10258 ;; Defined at:
 10259 ;;		line 90 in file "LCD.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;		None
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		wreg, status,2, status,0, pclath, cstack
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10273 ;;      Params:         0       0       0       0       0       0
 10274 ;;      Locals:         0       0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0
 10276 ;;      Totals:         0       0       0       0       0       0
 10277 ;;Total ram usage:        0 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    2
 10280 ;; This function calls:
 10281 ;;		_writeCmd
 10282 ;; This function is called by:
 10283 ;;		_zone0OK
 10284 ;;		_zone1OK
 10285 ;;		_zone2OK
 10286 ;;		_zone3OK
 10287 ;;		_zone0Alert
 10288 ;;		_zone1Alert
 10289 ;;		_zone2Alert
 10290 ;;		_zone3Alert
 10291 ;;		_alarmOn
 10292 ;;		_alarmOff
 10293 ;;		_zone0Activate
 10294 ;;		_zone1Activate
 10295 ;;		_zone2Activate
 10296 ;;		_zone3Activate
 10297 ;;		_zone0Deactivate
 10298 ;;		_zone1Deactivate
 10299 ;;		_zone2Deactivate
 10300 ;;		_zone3Deactivate
 10301 ;;		_zoneActivate
 10302 ;;		_checkZoneMessage
 10303 ;;		_changeTriggerMessage
 10304 ;;		_changeTemp
 10305 ;;		_changeTime
 10306 ;;		_changeDate
 10307 ;;		_changeDelay
 10308 ;;		_Return
 10309 ;;		_currentTemp
 10310 ;;		_ButtonGrid
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function _clearDisplay
 10316  13BE                     _clearDisplay:	
 10317                           
 10318                           ;LCD.c: 91: writeCmd(0x01);
 10319                           
 10320                           ;incstack = 0
 10321                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
 10322  13BE  3001               	movlw	1
 10323  13BF  160A  118A  251B   	fcall	_writeCmd
 10324  13C2  0008               	return
 10325  13C3                     __end_of_clearDisplay:	
 10326                           
 10327                           	psect	text74
 10328  151B                     __ptext74:	
 10329 ;; *************** function _writeCmd *****************
 10330 ;; Defined at:
 10331 ;;		line 67 in file "LCD.c"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  cmd             1    wreg     unsigned char 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;  cmd             1    2[COMMON] unsigned char 
 10336 ;; Return value:  Size  Location     Type
 10337 ;;                  1    wreg      void 
 10338 ;; Registers used:
 10339 ;;		wreg, status,2, status,0, pclath, cstack
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10345 ;;      Params:         0       0       0       0       0       0
 10346 ;;      Locals:         1       0       0       0       0       0
 10347 ;;      Temps:          0       0       0       0       0       0
 10348 ;;      Totals:         1       0       0       0       0       0
 10349 ;;Total ram usage:        1 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; Hardware stack levels required when called:    1
 10352 ;; This function calls:
 10353 ;;		_LCDdelay
 10354 ;; This function is called by:
 10355 ;;		_writeMessageline2
 10356 ;;		_resetCursor
 10357 ;;		_displayOn
 10358 ;;		_clearDisplay
 10359 ;;		_turnon2linemode
 10360 ;;		_Cinit
 10361 ;;		_display
 10362 ;;		_displayDate
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           
 10367                           ;psect for function _writeCmd
 10368  151B                     _writeCmd:	
 10369                           
 10370                           ;incstack = 0
 10371                           ; Regs used in _writeCmd: [wreg+status,2+status,0+pclath+cstack]
 10372                           ;writeCmd@cmd stored from wreg
 10373  151B  00F2               	movwf	writeCmd@cmd
 10374                           
 10375                           ;LCD.c: 70: RA1 = 0;
 10376  151C  1283               	bcf	3,5	;RP0=0, select bank0
 10377  151D  1303               	bcf	3,6	;RP1=0, select bank0
 10378  151E  1085               	bcf	5,1	;volatile
 10379                           
 10380                           ;LCD.c: 71: RA2 = 0;
 10381  151F  1105               	bcf	5,2	;volatile
 10382                           
 10383                           ;LCD.c: 72: LCDdelay ();
 10384  1520  160A  118A  2407  160A  118A  	fcall	_LCDdelay
 10385                           
 10386                           ;LCD.c: 73: RA3 = 1;
 10387  1525  1283               	bcf	3,5	;RP0=0, select bank0
 10388  1526  1303               	bcf	3,6	;RP1=0, select bank0
 10389  1527  1585               	bsf	5,3	;volatile
 10390                           
 10391                           ;LCD.c: 74: LCDdelay ();
 10392  1528  160A  118A  2407  160A  118A  	fcall	_LCDdelay
 10393                           
 10394                           ;LCD.c: 75: PORTD = cmd;
 10395  152D  0872               	movf	writeCmd@cmd,w
 10396  152E  1283               	bcf	3,5	;RP0=0, select bank0
 10397  152F  1303               	bcf	3,6	;RP1=0, select bank0
 10398  1530  0088               	movwf	8	;volatile
 10399                           
 10400                           ;LCD.c: 76: LCDdelay ();
 10401  1531  160A  118A  2407  160A  118A  	fcall	_LCDdelay
 10402                           
 10403                           ;LCD.c: 77: RA3 = 0;
 10404  1536  1283               	bcf	3,5	;RP0=0, select bank0
 10405  1537  1303               	bcf	3,6	;RP1=0, select bank0
 10406  1538  1185               	bcf	5,3	;volatile
 10407                           
 10408                           ;LCD.c: 78: LCDdelay ();
 10409  1539  160A  118A  2407   	fcall	_LCDdelay
 10410  153C  0008               	return
 10411  153D                     __end_of_writeCmd:	
 10412                           
 10413                           	psect	text75
 10414  1407                     __ptext75:	
 10415 ;; *************** function _LCDdelay *****************
 10416 ;; Defined at:
 10417 ;;		line 14 in file "LCD.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  i               2    0[COMMON] unsigned int 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMMON  BANK0h  BANK0l   BANK1   BANK3   BANK2
 10431 ;;      Params:         0       0       0       0       0       0
 10432 ;;      Locals:         2       0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0
 10434 ;;      Totals:         2       0       0       0       0       0
 10435 ;;Total ram usage:        2 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; This function calls:
 10438 ;;		Nothing
 10439 ;; This function is called by:
 10440 ;;		_writeChar
 10441 ;;		_writeCmd
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           
 10446                           ;psect for function _LCDdelay
 10447  1407                     _LCDdelay:	
 10448                           
 10449                           ;LCD.c: 15: for (unsigned i=0; i<20; i++);
 10450                           
 10451                           ;incstack = 0
 10452                           ; Regs used in _LCDdelay: [wreg+status,2]
 10453  1407  01F0               	clrf	LCDdelay@i
 10454  1408  01F1               	clrf	LCDdelay@i+1
 10455  1409                     L16:	
 10456  1409  3000               	movlw	0
 10457  140A  0271               	subwf	LCDdelay@i+1,w
 10458  140B  3014               	movlw	20
 10459  140C  1903               	skipnz
 10460  140D  0270               	subwf	LCDdelay@i,w
 10461  140E  1803               	btfsc	3,0
 10462  140F  0008               	return
 10463  1410  3001               	movlw	1
 10464  1411  07F0               	addwf	LCDdelay@i,f
 10465  1412  1803               	skipnc
 10466  1413  0AF1               	incf	LCDdelay@i+1,f
 10467  1414  3000               	movlw	0
 10468  1415  07F1               	addwf	LCDdelay@i+1,f
 10469  1416  2C09               	goto	L16
 10470  1417                     __end_of_LCDdelay:	
 10471  007E                     btemp	set	126	;btemp
 10472  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        273
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0h           63     23      62
    BANK0l           16      0      12
    BANK1            80      0      77
    BANK3            96      0      94
    BANK2            96      0      89

Pointer List with Targets:

    writeMessageline2@message	PTR unsigned char  size(1) Largest target is 13
		 -> modeSelect@messagecol(BANK0h[12]), ButtonGrid@messagecol(COMMON[6]), currentTemp@message2(COMMON[13]), 

    writeMessageline1@message	PTR unsigned char  size(1) Largest target is 12
		 -> changeTriggerMessage@messagerow(BANK0h[12]), checkZoneMessage@messagerow(COMMON[6]), modeSelect@messagerow(BANK0h[9]), ButtonGrid@messagerow(COMMON[6]), 
		 -> currentTemp@message1(COMMON[7]), 

    writeMessage@message	PTR unsigned char  size(1) Largest target is 13
		 -> changeTriggerMessage@messagerow(BANK0h[12]), checkZoneMessage@messagerow(COMMON[6]), modeSelect@messagecol(BANK0h[12]), modeSelect@messagerow(BANK0h[9]), 
		 -> ButtonGrid@messagecol(COMMON[6]), ButtonGrid@messagerow(COMMON[6]), zoneActivate@message(COMMON[5]), zone3Deactivate@message(BANK0h[11]), 
		 -> zone2Deactivate@message(BANK0h[11]), zone1Deactivate@message(BANK0h[11]), zone0Deactivate@message(BANK0h[11]), zone3Activate@message(BANK0h[10]), 
		 -> zone2Activate@message(BANK0h[10]), zone1Activate@message(BANK0h[10]), zone0Activate@message(BANK0h[10]), alarmOff@message(BANK0h[10]), 
		 -> alarmOn@message(BANK0h[9]), currentTemp@message2(COMMON[13]), currentTemp@message1(COMMON[7]), zone3Alert@message(BANK0h[13]), 
		 -> zone2Alert@message(BANK0h[13]), zone1Alert@message(BANK0h[13]), zone0Alert@message(BANK0h[13]), zone3OK@message(BANK0h[10]), 
		 -> zone2OK@message(BANK0h[10]), zone1OK@message(BANK0h[10]), zone0OK@message(BANK0h[10]), 


Critical Paths under _main in COMMON

    _main->_changeDelay
    _main->_changeTemp
    _showTime->_display
    _display->___awdiv
    _showTemp->_getTemperature
    _getTemperature->___awdiv
    _getTemperature->_writeByte
    _writeByte->_tempDelay
    _reset->_tempDelay
    _readByte->_tempDelay
    _showDate->_displayDate
    _setTime->_writeTime
    _getTime->_writeTime
    _displayDate->___awdiv
    _clockInit->_writeTime
    _Cinit->_writeCmd
    _deactivateZones->_zone0Deactivate
    _deactivateZones->_zone1Deactivate
    _deactivateZones->_zone2Deactivate
    _deactivateZones->_zone3Deactivate
    _zone3Deactivate->_writeMessage
    _zone2Deactivate->_writeMessage
    _zone1Deactivate->_writeMessage
    _zone0Deactivate->_writeMessage
    _checkZones2->_zone0Alert
    _checkZones2->_zone0OK
    _checkZones2->_zone1Alert
    _checkZones2->_zone1OK
    _checkZones2->_zone2Alert
    _checkZones2->_zone2OK
    _checkZones2->_zone3Alert
    _checkZones2->_zone3OK
    _zone3OK->_writeMessage
    _zone3Alert->_writeMessage
    _zone2OK->_writeMessage
    _zone2Alert->_writeMessage
    _zone1OK->_writeMessage
    _zone1Alert->_writeMessage
    _zone0OK->_writeMessage
    _zone0Alert->_writeMessage
    _checkZones->_checkZoneMessage
    _checkZoneMessage->_writeMessageline1
    _changeTime->___awdiv
    _changeTempMode->_changeTriggerMessage
    _changeTriggerMessage->_writeMessageline1
    _changeTemp->___awdiv
    _changeDelay->___awdiv
    _changeDate->___awdiv
    _turnon2linemode->_writeCmd
    _displayOn->_writeCmd
    _buzzer2->_delay
    _alarmOnOff->_modeSelect
    _modeSelect->_writeMessageline1
    _modeSelect->_writeMessageline2
    _writeMessageline2->_writeMessage
    _writeMessageline1->_writeMessage
    _alarmOn->_writeMessage
    _alarmOff->_writeMessage
    _activateZonesMode->_zoneActivate
    _zoneActivate->_writeMessage
    _activateZones->_zone0Activate
    _activateZones->_zone1Activate
    _activateZones->_zone2Activate
    _activateZones->_zone3Activate
    _zone3Activate->_writeMessage
    _zone2Activate->_writeMessage
    _zone1Activate->_writeMessage
    _zone0Activate->_writeMessage
    _writeMessage->_writeChar
    _writeChar->_LCDdelay
    _resetCursor->_writeCmd
    _clearDisplay->_writeCmd
    _writeCmd->_LCDdelay

Critical Paths under _main in BANK0h

    _showTime->_display
    _showTemp->_getTemperature
    _showDate->_displayDate
    _deactivateZones->_zone0Deactivate
    _deactivateZones->_zone1Deactivate
    _deactivateZones->_zone2Deactivate
    _deactivateZones->_zone3Deactivate
    _checkZones2->_zone0Alert
    _checkZones2->_zone1Alert
    _checkZones2->_zone2Alert
    _checkZones2->_zone3Alert
    _changeTempMode->_changeTriggerMessage
    _alarmOnOff->_modeSelect
    _activateZones->_zone0Activate
    _activateZones->_zone1Activate
    _activateZones->_zone2Activate
    _activateZones->_zone3Activate

Critical Paths under _main in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53407
                                             21 BANK0h     2     2      0
                           _LCDsetup
                             _Return
                      _activateZones
                  _activateZonesMode
                         _alarmOnOff
                            _buzzer2
                         _changeDate
                     _changeDateMode
                        _changeDelay
                    _changeDelayMode
                         _changeTemp
                     _changeTempMode
                         _changeTime
                     _changeTimeMode
                       _checkButtons
                         _checkZones
                        _checkZones2
                    _deactivateZones
                       _delaySeconds
                               _init
                           _showDate
                           _showTemp
                           _showTime
 ---------------------------------------------------------------------------------
 (1) _showTime                                             0     0      0    2875
                              _Cinit
                          _clockInit
                            _display
                            _getTime
                            _setTime
 ---------------------------------------------------------------------------------
 (2) _display                                             14    14      0    2321
                                              9 COMMON     3     3      0
                                              0 BANK0h     9     9      0
                            ___awdiv
                        _buttondelay
                          _writeChar
                           _writeCmd
 ---------------------------------------------------------------------------------
 (1) _showTemp                                             0     0      0    4959
                     _getTemperature
 ---------------------------------------------------------------------------------
 (2) _getTemperature                                       7     7      0    4959
                                              9 COMMON     3     3      0
                                              0 BANK0h     4     4      0
                            ___awdiv
                            ___awmod
                              _delay
                           _readByte
                              _reset
                          _tempDelay
                          _writeByte
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) _writeByte                                            5     5      0     499
                                              4 COMMON     5     5      0
                          _tempDelay
 ---------------------------------------------------------------------------------
 (3) _reset                                                2     2      0     410
                                              4 COMMON     2     2      0
                          _tempDelay
 ---------------------------------------------------------------------------------
 (3) _readByte                                             3     3      0     456
                                              4 COMMON     3     3      0
                          _tempDelay
 ---------------------------------------------------------------------------------
 (4) _tempDelay                                            4     3      1     385
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _showDate                                             0     0      0    2875
                              _Cinit
                          _clockInit
                        _displayDate
                            _getTime
                            _setTime
 ---------------------------------------------------------------------------------
 (2) _setTime                                              2     2      0     159
                                              5 COMMON     2     2      0
                          _writeTime
 ---------------------------------------------------------------------------------
 (2) _getTime                                              3     3      0     205
                                              5 COMMON     3     3      0
                           _readTime
                          _writeTime
 ---------------------------------------------------------------------------------
 (3) _readTime                                             4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _displayDate                                         14    14      0    2321
                                              9 COMMON     3     3      0
                                              0 BANK0h     9     9      0
                            ___awdiv
                        _buttondelay
                          _writeChar
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _buttondelay                                          2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _clockInit                                            0     0      0      91
                          _writeTime
 ---------------------------------------------------------------------------------
 (3) _writeTime                                            5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _Cinit                                                0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delaySeconds                                         7     5      2     145
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _deactivateZones                                      0     0      0    4660
                    _zone0Deactivate
                    _zone1Deactivate
                    _zone2Deactivate
                    _zone3Deactivate
 ---------------------------------------------------------------------------------
 (2) _zone3Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Deactivate                                     15    15      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    11    11      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _checkZones2                                          0     0      0    9320
                         _zone0Alert
                            _zone0OK
                         _zone1Alert
                            _zone1OK
                         _zone2Alert
                            _zone2OK
                         _zone3Alert
                            _zone3OK
 ---------------------------------------------------------------------------------
 (2) _zone3OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone3Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0OK                                             14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Alert                                          17    17      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    13    13      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _checkZones                                           0     0      0    1346
                   _checkZoneMessage
 ---------------------------------------------------------------------------------
 (2) _checkZoneMessage                                     6     6      0    1346
                                              8 COMMON     6     6      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                  _writeMessageline1
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         1     1      0      24
                                              0 COMMON     1     1      0
                        _buttonsetup
 ---------------------------------------------------------------------------------
 (2) _buttonsetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeTimeMode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeTime                                           9     9      0    3859
                                              9 COMMON     3     3      0
                                              0 BANK0h     6     6      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _changeTempMode                                       0     0      0    1346
               _changeTriggerMessage
 ---------------------------------------------------------------------------------
 (2) _changeTriggerMessage                                16    16      0    1346
                                              8 COMMON     4     4      0
                                              0 BANK0h    12    12      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                  _writeMessageline1
 ---------------------------------------------------------------------------------
 (1) _changeTemp                                           5     5      0    3599
                                              9 COMMON     5     5      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _changeDelayMode                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeDelay                                          5     5      0    3599
                                              9 COMMON     5     5      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (1) _changeDateMode                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _changeDate                                           9     9      0    3859
                                              9 COMMON     3     3      0
                                              0 BANK0h     6     6      0
                          _LCDdelay2
                           _LCDsetup
                            ___awdiv
                            ___awmod
                       _clearDisplay
                        _resetCursor
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1678
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDsetup                                             0     0      0     198
                          _displayOn
                    _turnon2linemode
 ---------------------------------------------------------------------------------
 (3) _turnon2linemode                                      0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _displayOn                                            0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (1) _buzzer2                                              0     0      0      46
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _alarmOnOff                                           0     0      0    4674
                          _LCDdelay2
                           _alarmOff
                            _alarmOn
                         _modeSelect
 ---------------------------------------------------------------------------------
 (2) _modeSelect                                          25    25      0    2298
                                              8 COMMON     4     4      0
                                              0 BANK0h    21    21      0
                        _resetCursor
                  _writeMessageline1
                  _writeMessageline2
 ---------------------------------------------------------------------------------
 (3) _writeMessageline2                                    1     1      0    1079
                                              7 COMMON     1     1      0
                           _writeCmd
                       _writeMessage
 ---------------------------------------------------------------------------------
 (3) _writeMessageline1                                    1     1      0    1040
                                              7 COMMON     1     1      0
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _alarmOn                                             13    13      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h     9     9      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _alarmOff                                            14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _LCDdelay2                                            2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _activateZonesMode                                    0     0      0    1165
                       _zoneActivate
 ---------------------------------------------------------------------------------
 (2) _zoneActivate                                         5     5      0    1165
                                              7 COMMON     5     5      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (1) _activateZones                                        0     0      0    4660
                      _zone0Activate
                      _zone1Activate
                      _zone2Activate
                      _zone3Activate
 ---------------------------------------------------------------------------------
 (2) _zone3Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone2Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone1Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (2) _zone0Activate                                       14    14      0    1165
                                              7 COMMON     4     4      0
                                              0 BANK0h    10    10      0
                          _LCDdelay3
                       _clearDisplay
                        _resetCursor
                       _writeMessage
 ---------------------------------------------------------------------------------
 (3) _writeMessage                                         4     4      0     859
                                              3 COMMON     4     4      0
                          _writeChar
 ---------------------------------------------------------------------------------
 (3) _writeChar                                            1     1      0      99
                                              2 COMMON     1     1      0
                           _LCDdelay
 ---------------------------------------------------------------------------------
 (3) _LCDdelay3                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Return                                               0     0      0     198
                       _clearDisplay
                        _resetCursor
 ---------------------------------------------------------------------------------
 (3) _resetCursor                                          0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         0     0      0      99
                           _writeCmd
 ---------------------------------------------------------------------------------
 (3) _writeCmd                                             1     1      0      99
                                              2 COMMON     1     1      0
                           _LCDdelay
 ---------------------------------------------------------------------------------
 (4) _LCDdelay                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDsetup
     _displayOn
       _writeCmd
         _LCDdelay
     _turnon2linemode
       _writeCmd
         _LCDdelay
   _Return
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
   _activateZones
     _zone0Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Activate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _activateZonesMode
     _zoneActivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _alarmOnOff
     _LCDdelay2
     _alarmOff
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _alarmOn
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _modeSelect
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
       _writeMessageline2
         _writeCmd
           _LCDdelay
         _writeMessage
           _writeChar
             _LCDdelay
   _buzzer2
     _delay
   _changeDate
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeDateMode
   _changeDelay
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeDelayMode
   _changeTemp
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeTempMode
     _changeTriggerMessage
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
   _changeTime
     _LCDdelay2
     _LCDsetup
       _displayOn
         _writeCmd
           _LCDdelay
       _turnon2linemode
         _writeCmd
           _LCDdelay
     ___awdiv
     ___awmod
     _clearDisplay
       _writeCmd
         _LCDdelay
     _resetCursor
       _writeCmd
         _LCDdelay
     _writeChar
       _LCDdelay
   _changeTimeMode
   _checkButtons
     _buttonsetup
   _checkZones
     _checkZoneMessage
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessageline1
         _writeMessage
           _writeChar
             _LCDdelay
   _checkZones2
     _zone0Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone0OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Alert
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3OK
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _deactivateZones
     _zone0Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone1Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone2Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
     _zone3Deactivate
       _LCDdelay3
       _clearDisplay
         _writeCmd
           _LCDdelay
       _resetCursor
         _writeCmd
           _LCDdelay
       _writeMessage
         _writeChar
           _LCDdelay
   _delaySeconds
   _init
   _showDate
     _Cinit
       _writeCmd
         _LCDdelay
     _clockInit
       _writeTime
     _displayDate
       ___awdiv
       _buttondelay
       _writeChar
         _LCDdelay
       _writeCmd
         _LCDdelay
     _getTime
       _readTime
       _writeTime
     _setTime
       _writeTime
   _showTemp
     _getTemperature
       ___awdiv
       ___awmod
       _delay
       _readByte
         _tempDelay
       _reset
         _tempDelay
       _tempDelay
       _writeByte
         _tempDelay
       _writeChar
         _LCDdelay
   _showTime
     _Cinit
       _writeCmd
         _LCDdelay
     _clockInit
       _writeTime
     _display
       ___awdiv
       _buttondelay
       _writeChar
         _LCDdelay
       _writeCmd
         _LCDdelay
     _getTime
       _readTime
       _writeTime
     _setTime
       _writeTime

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5E      11       97.9%
BITBANK3            60      0       0      10        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      59      13       92.7%
BITBANK2            60      0       0      12        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       9       96.3%
BITBANK1            50      0       0       8        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0l              10      0       C       7       75.0%
BITBANK0l           10      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
BITBANK0h           3F      0       1       4        1.6%
BANK0h              3F     17      3E       6       98.4%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     15C      14        0.0%
ABS                  0      0     15C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 16 20:13:33 2018

          __end_of_checkButtons 0F67         displayDate@minutesUnits 0055               changeDate@daytens 0052  
          zone2Deactivate@F1232 019B                               pc 0002                    ?_displayDate 0070  
                            l69 09E4                    ___awdiv@sign 0076              changeDate@dayunits 0053  
                            fsr 0004                 changeDelay@tens 007C                  _changeTempMode 15F2  
             changeDate@montens 0054                ??_getTemperature 0079                  _changeTimeMode 1585  
                           l600 0BE4                             l601 0C09                             l522 0F30  
                           l531 0F4C                             l515 0F18                             l611 0A7D  
                           l524 0F34                             l533 0F50                             l517 0F1C  
                           l526 0F38                             l606 0AEC                             l390 010F  
                           l519 0F20                             l711 0380                             l391 011E  
                           l536 0F63                             l624 0252                             l392 012D  
                           l529 0F48                             l387 00D3                             l388 00EC  
                           l629 0189                             l389 0100                             l594 0012  
                           l682 0A3D                             l595 0031                             l668 13FA  
                           _RA0 0028                             _RA1 0029                             _RA2 002A  
                           _RB0 0030                             _RA3 002B                             _RC0 0038  
                           _RC1 0039                             _RC2 003A                             _RB4 0034  
                           _RC3 003B                             _RB5 0035                             _RC4 003C  
                           _RB7 0037                             _RC5 003D                             _RC6 003E  
                           _RC7 003F                currentTemp@F1203 00DA                currentTemp@F1205 0110  
                           _col 003A               zone3Alert@message 0052                             fsr0 0004  
                           _row 0038                             indf 0000                    ___awmod@sign 0076  
                  __CFG_FOSC$HS 0000            _changeTriggerMessage 083A                    __CFG_LVP$OFF 0000  
              changeDelay@units 007D          __end_of_changeDateMode 1585              changeDate@monunits 0055  
                          l3001 0D15                            l3011 0D1D                            l3013 0D2B  
                          l3023 0D4C                            l3027 0D54                            l3019 0D41  
                          l3051 0C28                            l3043 0C22                            l3053 0C36  
                          l3061 0C4F                            l3039 0C1B                            l3311 0ACE  
                          l3065 0C57                            l3057 0C44                            l5013 009A  
                          l3327 0A60                            l5201 04EE                            l3523 0F42  
                          l5221 0528                            l5117 073E                            l3509 0F2A  
                          l3471 0A0E                            l5241 0561                            l5305 0FCC  
                          l5137 0777                            l5057 0692                            l3545 0F65  
                          l3537 0F5A                            l2921 0A9D                            l4347 14DF  
                          l3491 0F08                            l3483 0EF4                            l3467 09FD  
                          l4611 0270                            l5261 059A                            l5181 04B5  
                          l5077 06CB                            l3495 0F12                            l3487 0EFE  
                          l5097 0705                            l4731 09D1                            l2891 0A3F  
                          l4661 01A7                            l2869 0BF7                            l2797 13FE  
                          l2893 0A16                            l2983 0B97                            l4575 03B3  
                          l5391 013C                            l4841 0EA6                            l4825 0E7E  
                          l4907 0DE0                            l2995 0D0A                            l4917 0DF8  
                          l4861 0ED8                            l4853 0EC4                            l4837 0E9C  
                          l4829 0E88                            l4767 0B55                            l4849 0EBA  
                          l4793 0B1D                            l4939 0CC2                            l4949 0CD7  
                          l4959 0CEC                            l4897 0DCC         __end_of_deactivateZones 0D00  
                          u3105 0D20                            u3125 0D2C                            u3205 0C2B  
                          u3135 0D38                            u3145 0D42                            u3225 0C3C  
                          u3235 0C45                            u3535 0ACC                            u3705 09FB  
                          u3545 0AEA                            u3715 0A0C                            u2915 0010  
                          u3555 0A5E                            u3725 09EE                            u3565 0A7B  
                          u2950 0BF4                            u2935 002F                            u5600 16EF  
                          u2945 0BE2                            u5610 1718                            u2875 1476  
                          u5700 1794                            u5620 1741                            u5710 17BE  
                          u5630 0876                            u2975 0C07                            u5720 17E8  
                          u5640 08A0                            u5650 08CA                            u5730 091E  
                          u5660 08F4                            u5740 0948                            u5805 034F  
                          u5670 1674                            u5590 16C6                            u5750 0972  
                          u5815 035C                            u5680 0822                            u5760 099C  
                          u5690 176A                            u5770 0BA6                            u5780 0BBB  
                          u5935 01AE                            u5960 084C                            u5945 01C4  
                          u5955 01DA                            u5795 0347                            u5875 0277  
                          u5885 028D                            u5895 02A3                    _triggerValue 0027  
            changeDate@yeartens 0056                     display@tens 0052                _checkZoneMessage 168B  
                          _main 00CE                            _init 13BA                            btemp 007E  
                          start 0000              __size_of_LCDdelay2 0010              __size_of_LCDdelay3 0010  
        __size_of_zone0Activate 002A             display@minutesUnits 0055            __end_of_delaySeconds 0A15  
        __size_of_zone1Activate 002A            __end_of_clearDisplay 13C3          __size_of_zone2Activate 002A  
                   _zoneActMode 004B          __size_of_zone3Activate 002A          __end_of_changeTempMode 1617  
        __end_of_changeTimeMode 15A9                    _zone0Alerted 0045                __end_of_LCDdelay 1417  
                  _zone1Alerted 0044                           ?_main 0070                           ?_init 0070  
               __end_of___awdiv 0D59                   __CFG_WDTE$OFF 0000                 __end_of___awmod 0C5C  
       __end_of_changeDelayMode 151B                    _zone2Alerted 0043                __end_of_LCDsetup 14AA  
               ___awdiv@divisor 0070            zone3Deactivate@F1235 0190                    _zone3Alerted 0042  
               ___awdiv@counter 0075                           _PORTA 0005                           _PORTC 0007  
                         _PORTD 0008                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                           _TRISD 0088                 __end_of_alarmOn 168B  
    checkZoneMessage@messagerow 0078                           _Cinit 1617                    ?_buttondelay 0070  
                 __CFG_PWRTE$ON 0000            __size_of_changeDelay 0099                 __end_of_getTime 0A81  
         __end_of_activateZones 0E0D             changeDate@yearunits 0057                 ButtonGrid@F1241 0020  
               ButtonGrid@F1243 00E7           ?_changeTriggerMessage 0070                 __end_of_display 0304  
                  ?_buttonsetup 0070            __size_of_checkZones2 0076                    display@value 0058  
                zone0OK@message 0052                           _delay 146B                    display@units 0053  
                         _table 1006                  __pbitbssBANK0h 0370              zone0Activate@F1214 01DA  
               __end_of_buzzer2 1493                           _reset 0A15                 ?_changeDateMode 0070  
                         _value 0051           __size_of_zoneActivate 0026                 __end_of_setTime 0AF0  
                __CFG_BOREN$OFF 0000                           pclath 000A                           status 0003  
               __end_of_zone0OK 16DD                 __end_of_zone1OK 1706                 __end_of_zone2OK 172F  
                zone1OK@message 0052                 __end_of_zone3OK 1758                           wtemp0 007E  
             _activateZonesMode 15CD          zone2Deactivate@message 0052           __size_of_writeMessage 001F  
            ?_activateZonesMode 0070                 __initialization 07AE                  zone2OK@message 0052  
                  __end_of_main 0172                    __end_of_init 13BE             ??_activateZonesMode 007C  
               ?_changeTempMode 0070                 ?_changeTimeMode 0070                          ??_main 0067  
                        ??_init 0070                  zone3OK@message 0052                 changeTemp@units 007D  
                  _zoneActivate 163C                          ?_Cinit 0070                   _zone0Activate 1758  
             __end_of_LCDdelay2 1437               __end_of_LCDdelay3 1427                   _zone1Activate 1782  
                        ?_delay 0070                          _ADCON1 009F                   _zone2Activate 17AC  
                        ?_reset 0070                ___awdiv@dividend 0072                   _zone3Activate 17D6  
                  _writeMessage 14DC                ?_deactivateZones 0070       __end_of_activateZonesMode 15F2  
            getTemperature@tens 0053                    ?_resetCursor 0070                          _TRISA0 0428  
                        _TRISB4 0434           __size_of_checkButtons 0086                __end_of_alarmOff 083A  
                        _Return 14C1               displayDate@value1 0059               displayDate@value2 005A  
                 display@value1 0059                   display@value2 005A                       ??___awdiv 0074  
                     ??___awmod 0074                __end_of_readByte 0B99                __end_of_readTime 0C11  
                        _table1 0031                          delay@i 0070                       ??_alarmOn 0077  
     changeTriggerMessage@F1258 0151                ___awdiv@quotient 0077                 ___awmod@divisor 0070  
          __size_of_displayDate 00C9                 ___awmod@counter 0075                       ??_getTime 0075  
                     ??_display 0079                    __pdataBANK0h 0069                    __pdataBANK0l 0020  
              ?_changeDelayMode 0070                  ?_zone0Activate 0070                       ??_buzzer2 0072  
              __end_of_showDate 0B28          ??_changeTriggerMessage 0078                __end_of_showTemp 0810  
              __end_of_showTime 0B60                  ?_zone1Activate 0070                       ??_setTime 0075  
                ?_zone2Activate 0070                    _checkButtons 0EE1                       ??_zone0OK 0077  
                     ??_zone1OK 0077                  ?_zone3Activate 0070                       ??_zone2OK 0077  
                     ??_zone3OK 0077           displayDate@hoursUnits 0057        __size_of_turnon2linemode 0005  
              __end_of_writeCmd 153D        __size_of_zone0Deactivate 002A         __end_of__initialization 07FC  
                  zone0OK@F1179 00BE           __size_of_delaySeconds 0033                    zone1OK@F1182 00B4  
         __size_of_clearDisplay 0005                       ?_LCDdelay 0070               display@hoursUnits 0057  
                  zone2OK@F1185 00AA                       ?_LCDsetup 0070                  __pcstackBANK0h 0052  
                  zone3OK@F1188 00A0                   __end_of_Cinit 163C        __size_of_zone1Deactivate 002A  
                  _alarmOnOrOff 004C                  __pcstackCOMMON 0070              changeTime@hourtens 0056  
            changeTime@minunits 0055                    __pidataBANK1 0C5C                    __pidataBANK2 0D59  
                  __pidataBANK3 0E0D              changeTime@secunits 0053                   __end_of_delay 147F  
                 __end_of_table 100E                   __end_of_reset 0A4A        __size_of_zone2Deactivate 002A  
                     LCDdelay@i 0070                   _durationValue 0028        __end_of_checkZoneMessage 16B4  
changeTriggerMessage@messagerow 0052              __size_of_clockInit 0013                         ??_Cinit 0073  
      __size_of_zone3Deactivate 002A                         ??_delay 0070                    _delaySeconds 09E2  
            __size_of_displayOn 0005                    _clearDisplay 13BE            __size_of_buttondelay 0010  
                    _dateChange 003F                         ??_reset 0074                   alarmOff@F1211 01E4  
          __size_of_buttonsetup 0017                      _changeDate 03F4      __size_of_activateZonesMode 0025  
                    _checkZones 15A9                      _changeTemp 0035                      _changeTime 05D1  
                    _alarmOnOff 09B4                      ??_LCDdelay 0070                      _delayValue 003C  
                    ??_LCDsetup 0073                      _alertValue 0026                      __pmaintext 00CE  
               alarmOff@message 0052                         ?_Return 0070              __size_of_tempDelay 000E  
               ??_zone0Activate 0077       getTemperature@tensDecimal 0055                 ??_zone1Activate 0077  
              ??_changeDateMode 0070                 ??_zone2Activate 0077                       ?_alarmOff 0070  
               ??_zone3Activate 0077             getTemperature@units 0054                      __stringtab 1000  
            zone1Activate@F1217 01D0                 zone0Alert@F1191 0144                       ?_readByte 0070  
                     ?_readTime 0070             zoneActivate@message 0077              __size_of_writeChar 0024  
            __size_of_writeByte 0037              __size_of_writeTime 0031               __end_of_clockInit 146B  
             ??_turnon2linemode 0073            __size_of_resetCursor 0005                ??_changeTempMode 007C  
              ??_changeTimeMode 0070                       ?_showDate 0070               ??_zone0Deactivate 0077  
               __size_of_Return 001B                       ?_showTemp 0070                       ?_showTime 0070  
             __end_of_displayOn 13CD                         ___awdiv 0D00                         ___awmod 0C11  
               zone1Alert@F1194 0137                         _alarmOn 1662                      _modeSelect 0B99  
             ??_zone1Deactivate 0077                       ?_writeCmd 0070                         __ptext1 0B28  
                       __ptext2 023B                         __ptext3 0800                         _getTime 0A4A  
                       __ptext4 0304                         __ptext5 0A81                         __ptext6 0A15  
                       __ptext7 0B60                         __ptext8 13F9                         __ptext9 0AF0  
                 ??_changeDelay 0079                         _display 023B                   ??_checkZones2 007B  
                       _buzzer2 147F                ___awmod@dividend 0072                      ??_alarmOff 0077  
                       _setTime 0AB8                         _tempLow 0050                         _time_rx 0030  
             ??_zone2Deactivate 0077                         _zone0OK 16B4                         _zone1OK 16DD  
                       _zone2OK 1706                         _zone3OK 172F                         _zone0On 0049  
                       _zone1On 0048                         _zone2On 0047                         _zone3On 0046  
                       clrloop0 13DE            end_of_initialization 07FC                     ?_changeDate 0070  
       __size_of_getTemperature 00F0                       _LCDdelay2 1427                       _LCDdelay3 1417  
                   ?_checkZones 0070                     ?_changeTemp 0070                     ?_changeTime 0070  
               zone2Alert@F1197 012A               __end_of_tempDelay 1407                     ?_alarmOnOff 0070  
                    ??_readByte 0074               ??_zone3Deactivate 0077                      ??_readTime 0070  
        zone0Deactivate@message 0052          zone3Deactivate@message 0052                      _tempChange 0041  
                  buttondelay@i 0070                    writeChar@var 0072                      _timeChange 0040  
                 Clock@time_rx7 0187           getTemperature@decimal 0052                      ??_showDate 007C  
                    ??_showTemp 007C                      ??_showTime 007C          __size_of_activateZones 005B  
               zone3Alert@F1200 011D                     _TriggerTemp 003D                      ??_writeCmd 0072  
         checkZoneMessage@F1255 00E1                   delaySeconds@d 0070                   delaySeconds@i 0073  
                 delaySeconds@j 0075               __end_of_writeChar 1561               __end_of_writeByte 0AB8  
             __end_of_writeTime 0035                   _decimalNumber 004D          displayDate@minutesTens 0054  
           __end_of_changeDelay 1000             __end_of_checkZones2 0EE1                      ?_LCDdelay2 0070  
                    ?_LCDdelay3 0070                      _zone0Alert 0864                      _zone1Alert 088E  
                    _zone2Alert 08B8                      _zone3Alert 08E2            zone0Activate@message 0052  
      __size_of_deactivateZones 0057              display@minutesTens 0054               __size_of_LCDdelay 0010  
             __size_of_LCDsetup 0017                   ??_displayDate 0079                  __end_of_Return 14DC  
      writeMessageline1@message 0077             changeTime@hourunits 0057                   __pidataBANK0h 13D2  
                 __pidataBANK0l 13E5        writeMessageline2@message 0077             __size_of_changeDate 01DD  
                   ?_modeSelect 0070             __size_of_checkZones 0024             __size_of_changeTemp 0099  
           __size_of_changeTime 01DD             __size_of_alarmOnOff 002E               ?_checkZoneMessage 0070  
                _durationChange 002A             start_initialization 07AE              ??_checkZoneMessage 0078  
                    LCDdelay2@i 0070                      LCDdelay3@i 0070                   _activateZones 0DB2  
 __size_of_changeTriggerMessage 002A               zoneActivate@F1238 0069        __size_of_changeDelayMode 0020  
                changeTemp@tens 007C                   reset@presance 0075                        ??_Return 0073  
              displayDate@value 0058                displayDate@units 0053                      init_fetch0 1447  
                   __pdataBANK1 00A0                     __pdataBANK2 0110                     __pdataBANK3 0190  
          zone1Activate@message 0052            displayDate@hoursTens 0056               zone0Alert@message 0052  
                   _changeDelay 0F67             __end_of_displayDate 023B                     __pbssBANK0h 0031  
                   __pbssBANK0l 0028                     _checkZones2 0E6B                display@hoursTens 0056  
                 ??_buttondelay 0070                       ___latbits 0002                  ?_activateZones 0070  
                 ??_buttonsetup 0070               changeTime@mintens 0054               changeTime@sectens 0052  
             __size_of_alarmOff 002A                 _turnon2linemode 13CD                  _getTemperature 0304  
                  alarmOn@F1208 00D1                     _delayChange 003E                 _zone0Deactivate 090C  
                   ??_LCDdelay2 0070                     ??_LCDdelay3 0070              zone2Activate@F1220 01C6  
                   _alertChange 0029                     ?_zone0Alert 0070                     ?_zone1Alert 0070  
                   ?_zone2Alert 0070             __size_of_modeSelect 003B                     ?_zone3Alert 0070  
             __size_of_readByte 0039               __size_of_readTime 003D                 _zone1Deactivate 0936  
                alarmOn@message 0052                        ?___awdiv 0070                       _clockInit 1458  
                      ?___awmod 0070               __size_of_showDate 0038                 _zone2Deactivate 0960  
             __size_of_showTemp 0010               __size_of_showTime 0038                        ?_alarmOn 0070  
             ??_deactivateZones 007B                       __pstrings 1000                        ?_getTime 0070  
                     _displayOn 13C8                        ?_display 0070                   ?_zoneActivate 0070  
         __end_of_zone0Activate 1782            modeSelect@messagecol 0052                        ?_buzzer2 0070  
             __size_of_writeCmd 0022            zone2Activate@message 0052            modeSelect@messagerow 005E  
               _zone3Deactivate 098A               _writeMessageline1 13D7               _writeMessageline2 13ED  
                    tempDelay@x 0072                      tempDelay@y 0070                      tempDelay@z 0073  
                __size_of_Cinit 0025           __end_of_zone1Activate 17AC                        ?_setTime 0070  
        __end_of_getTemperature 03F4           __end_of_zone2Activate 17D6              ?_writeMessageline1 0070  
            ?_writeMessageline2 0070                  __size_of_delay 0014           __end_of_zone3Activate 1800  
                      ?_zone0OK 0070                        ?_zone1OK 0070                        ?_zone2OK 0070  
                      ?_zone3OK 0070                  __size_of_reset 0035                   ?_writeMessage 0070  
              _triggerDelayTime 002B                    ??_changeDate 0079                    ??_checkZones 007E  
                  ??_changeTemp 0079                    ??_changeTime 0079             __end_of_buttondelay 1447  
                  ??_alarmOnOff 007C                   ??_resetCursor 0073             __end_of_buttonsetup 14C1  
           ??_writeMessageline1 0077             ??_writeMessageline2 0077                        _LCDdelay 1407  
                     clear_ram0 13DD               ??_changeDelayMode 0070                        _LCDsetup 1493  
                     _tempDelay 13F9                     writeCmd@cmd 0072                       _tempValue 004E  
                    ?_clockInit 0070                checkButtons@rval 0070                     _displayDate 0172  
               modeSelect@F1246 00C8                 modeSelect@F1248 015D                      ?_displayOn 0070  
            __end_of_changeDate 05D1                     __stringbase 1005              __end_of_checkZones 15CD  
            __end_of_changeTemp 00CE              __end_of_changeTime 07AE                  ??_zoneActivate 0077  
     __end_of_writeMessageline1 13DD       __end_of_writeMessageline2 13F9               zone1Alert@message 0052  
       __end_of_turnon2linemode 13D2              __end_of_alarmOnOff 09E2             __size_of_zone0Alert 002A  
           __size_of_zone1Alert 002A                 ??_activateZones 007B             __size_of_zone2Alert 002A  
           __size_of_zone3Alert 002A         __end_of_zone0Deactivate 0936                 ?_getTemperature 0070  
                 ?_checkButtons 0070                   readByte@value 0075                       _zoneCheck 004A  
                     _writeChar 153D                       _writeByte 0A81                  ??_writeMessage 0073  
                     _writeTime 0004            zone3Activate@message 0052         __end_of_zone1Deactivate 0960  
           writeMessage@message 0076         __size_of_changeDateMode 0024          zone1Deactivate@message 0052  
                    ?_tempDelay 0070         __end_of_zone2Deactivate 098A                       readByte@i 0076  
                     readByte@j 0370                 displayDate@tens 0052                       readTime@j 0072  
           __end_of_resetCursor 13C8                __size_of___awdiv 0059                __size_of___awmod 004B  
       __end_of_zone3Deactivate 09B4                    ??_modeSelect 0078              __end_of__stringtab 1006  
              __size_of_alarmOn 0029         __size_of_changeTempMode 0025         __size_of_changeTimeMode 0024  
              __size_of_getTime 0037                __size_of_display 00C9                        _alarmOff 0810  
                   _buttondelay 1437                  ??_checkButtons 0070                __size_of_buzzer2 0014  
                 ?_delaySeconds 0070                     _buttonsetup 14AA                __size_of_setTime 0038  
                    ?_writeChar 0070                   ?_clearDisplay 0070                        __ptext10 0AB8  
                      __ptext11 0A4A                        __ptext20 0CA9                        __ptext12 0BD4  
                      __ptext21 098A                        __ptext13 0172                        __ptext30 16DD  
                      __ptext22 0960                        __ptext14 1437                        __ptext31 088E  
                      __ptext23 0936                        __ptext15 1458                        __ptext40 15F2  
                      __ptext32 16B4                        __ptext24 090C                        __ptext16 0004  
                      __ptext41 083A                        __ptext33 0864                        __ptext25 0E6B  
                      __ptext17 1617                        __ptext50 13CD                        __ptext42 0035  
                      __ptext34 15A9                        __ptext26 172F                        __ptext18 13BA  
                      __ptext51 13C8                        __ptext43 14FB                        __ptext35 168B  
                      __ptext27 08E2                        __ptext19 09E2                        __ptext60 1427  
                      __ptext52 147F                        __ptext44 0F67                        __ptext36 0EE1  
                      __ptext28 1706                        __ptext61 15CD                        __ptext53 146B  
                      __ptext45 1561                        __ptext37 14AA                        __ptext29 08B8  
                      __ptext70 1417                        __ptext62 163C                        __ptext54 09B4  
                      __ptext46 03F4                        __ptext38 1585                        __ptext71 14C1  
                      __ptext63 0DB2                        __ptext55 0B99                        __ptext47 0C11  
                      __ptext39 05D1                        __ptext72 13C3                        __ptext64 17D6  
                      __ptext56 13ED                        __ptext48 0D00                        __ptext73 13BE  
                      __ptext65 17AC                        __ptext57 13D7                        __ptext49 1493  
                      __ptext74 151B                        __ptext66 1782                        __ptext58 1662  
                      __ptext75 1407                        __ptext67 1758                        __ptext59 0810  
                      __ptext68 14DC                        __ptext69 153D                      ?_writeByte 0070  
                    ?_writeTime 0070            zone0Deactivate@F1226 01B1                __size_of_zone0OK 0029  
              __size_of_zone1OK 0029                __size_of_zone2OK 0029                __size_of_zone3OK 0029  
                      _readByte 0B60                        _readTime 0BD4                   __size_of_main 00A4  
     __size_of_checkZoneMessage 0029                   __size_of_init 0004              __end_of_modeSelect 0BD4  
                      _tempHigh 004F    __end_of_changeTriggerMessage 0864                        _showDate 0AF0  
                      _time_rx7 0187                      writeByte@i 0078                        _showTemp 0800  
                      _showTime 0B28                        getTime@i 0076                     ??_clockInit 0075  
                    writeTime@i 0072                     ??_displayOn 0073                        _writeCmd 151B  
    __size_of_writeMessageline1 0006      __size_of_writeMessageline2 000C                    ?_changeDelay 0070  
              ?_turnon2linemode 0070               zone2Alert@message 0052                    ?_checkZones2 0070  
              ?_zone0Deactivate 0070                  ??_delaySeconds 0072                  ??_clearDisplay 0073  
                      init_ram0 144B                ?_zone1Deactivate 0070                    ??_zone0Alert 0077  
                  ??_zone1Alert 0077                     _resetCursor 13C3              zone3Activate@F1223 01BC  
                  ??_zone2Alert 0077                    ??_zone3Alert 0077                        setTime@i 0075  
          zone1Deactivate@F1229 01A6            __end_of_zoneActivate 1662                 _deactivateZones 0CA9  
                   ??_tempDelay 0071                       stringcode 1000                  writeByte@value 0077  
              ?_zone2Deactivate 0070            __end_of_writeMessage 14FB                ?_zone3Deactivate 0070  
            __end_of_zone0Alert 088E              __end_of_zone1Alert 08B8              __end_of_zone2Alert 08E2  
            __end_of_zone3Alert 090C                        stringdir 1000                   writeByte@temp 0076  
                      stringtab 1000                     ??_writeChar 0072                 _changeDelayMode 14FB  
                   ??_writeByte 0074                     ??_writeTime 0070                   writeMessage@i 0074  
                _changeDateMode 1561              writeTime@timeClock 0074  
